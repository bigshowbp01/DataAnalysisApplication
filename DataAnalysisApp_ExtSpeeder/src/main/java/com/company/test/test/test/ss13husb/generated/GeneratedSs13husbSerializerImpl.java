package com.company.test.test.test.ss13husb.generated;

import com.company.test.test.test.ss13husb.Ss13husb;
import com.speedment.enterprise.core.util.BitSetUtil;
import com.speedment.enterprise.offheapreadonlycache.entity.AbstractEntitySerializer;
import com.speedment.enterprise.offheapreadonlycache.internal.serializer.SerializerFactory;
import com.speedment.manager.Manager;
import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;
import javax.annotation.Generated;
import org.mapdb.Serializer;

/**
 * A {@link org.mapdb.Serializer} class for table {@link
 * com.speedment.config.db.Table} named ss13husb.
 * <p>
 * This file has been automatically generated by Ext Speeder. Any changes
 * made to it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Ext Speeder")
public class GeneratedSs13husbSerializerImpl extends AbstractEntitySerializer<Ss13husb> {
    
    protected final static long serialVersionUID = -683515297;
    private final static Serializer<Integer> RT_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> SERIALNO_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> DIVISION_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> PUMA_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> REGION_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> ST_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> ADJHSG_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> ADJINC_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> WGTP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> NP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> TYPE_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> ACCESS_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> ACR_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> AGS_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> BATH_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> BDSP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> BLD_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> BROADBND_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> BUS_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> COMPOTHX_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> CONP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> DIALUP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> DSL_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> ELEP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FIBEROP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FS_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FULP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> GASP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> HANDHELD_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> HFL_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> INSP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> LAPTOP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> MHP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> MODEM_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> MRGI_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> MRGP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> MRGT_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> MRGX_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> OTHSVCEX_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> REFR_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> RMSP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> RNTM_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> RNTP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> RWAT_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> RWATPR_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> SATELLITE_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> SINK_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> SMP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> STOV_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> TEL_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> TEN_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> TOIL_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> VACS_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> VALP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> VEH_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> WATP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> YBL_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FES_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FFINCP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FGRNTP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FHINCP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FINCP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FPARC_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FSMOCP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> GRNTP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> GRPIP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> HHL_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> HHT_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> HINCP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> HUGCL_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> HUPAC_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> HUPAOC_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> HUPARC_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> KIT_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> LNGI_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> MULTG_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> MV_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> NOC_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> NPF_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> NPP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> NR_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> NRC_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> OCPIP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> PARTNER_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> PLM_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> PSF_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> R18_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> R60_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> R65_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> RESMODE_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> SMOCP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> SMX_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> SRNT_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> SSMC_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> SVAL_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> TAXP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> WIF_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> WKEXREL_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> WORKSTAT_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FACCESSP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FACRP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FAGSP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FBATHP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FBDSP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FBLDP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FBROADBNDP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FBUSP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FCOMPOTHXP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FCONP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FDIALUPP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FDSLP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FELEP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FFIBEROPP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FFSP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FFULP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FGASP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FHANDHELDP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FHFLP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FINSP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FKITP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FLAPTOPP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FMHP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FMODEMP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FMRGIP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FMRGP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FMRGTP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FMRGXP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FMVP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FOTHSVCEXP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FPLMP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FREFRP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FRMSP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FRNTMP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FRNTP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FRWATP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FRWATPRP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FSATELLITEP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FSINKP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FSMP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FSMXHP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FSMXSP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FSTOVP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FTAXP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FTELP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FTENP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FTOILP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FVACSP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FVALP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FVEHP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FWATP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    private final static Serializer<Integer> FYBLP_SERIALIZER = SerializerFactory.serializerOf(Integer.class);
    
    public GeneratedSs13husbSerializerImpl(Manager<Ss13husb> manager) {
        super(manager);
    }
    
    @Override
    public void serialize(final DataOutput out, final Ss13husb ss13husb) throws IOException {
        final long[] bits = new long[3];
        if (!ss13husb.getRt().isPresent()) BitSetUtil.set(bits, 0);
        if (!ss13husb.getSerialno().isPresent()) BitSetUtil.set(bits, 1);
        if (!ss13husb.getDivision().isPresent()) BitSetUtil.set(bits, 2);
        if (!ss13husb.getPuma().isPresent()) BitSetUtil.set(bits, 3);
        if (!ss13husb.getRegion().isPresent()) BitSetUtil.set(bits, 4);
        if (!ss13husb.getSt().isPresent()) BitSetUtil.set(bits, 5);
        if (!ss13husb.getAdjhsg().isPresent()) BitSetUtil.set(bits, 6);
        if (!ss13husb.getAdjinc().isPresent()) BitSetUtil.set(bits, 7);
        if (!ss13husb.getWgtp().isPresent()) BitSetUtil.set(bits, 8);
        if (!ss13husb.getNp().isPresent()) BitSetUtil.set(bits, 9);
        if (!ss13husb.getType().isPresent()) BitSetUtil.set(bits, 10);
        if (!ss13husb.getAccess().isPresent()) BitSetUtil.set(bits, 11);
        if (!ss13husb.getAcr().isPresent()) BitSetUtil.set(bits, 12);
        if (!ss13husb.getAgs().isPresent()) BitSetUtil.set(bits, 13);
        if (!ss13husb.getBath().isPresent()) BitSetUtil.set(bits, 14);
        if (!ss13husb.getBdsp().isPresent()) BitSetUtil.set(bits, 15);
        if (!ss13husb.getBld().isPresent()) BitSetUtil.set(bits, 16);
        if (!ss13husb.getBroadbnd().isPresent()) BitSetUtil.set(bits, 17);
        if (!ss13husb.getBus().isPresent()) BitSetUtil.set(bits, 18);
        if (!ss13husb.getCompothx().isPresent()) BitSetUtil.set(bits, 19);
        if (!ss13husb.getConp().isPresent()) BitSetUtil.set(bits, 20);
        if (!ss13husb.getDialup().isPresent()) BitSetUtil.set(bits, 21);
        if (!ss13husb.getDsl().isPresent()) BitSetUtil.set(bits, 22);
        if (!ss13husb.getElep().isPresent()) BitSetUtil.set(bits, 23);
        if (!ss13husb.getFiberop().isPresent()) BitSetUtil.set(bits, 24);
        if (!ss13husb.getFs().isPresent()) BitSetUtil.set(bits, 25);
        if (!ss13husb.getFulp().isPresent()) BitSetUtil.set(bits, 26);
        if (!ss13husb.getGasp().isPresent()) BitSetUtil.set(bits, 27);
        if (!ss13husb.getHandheld().isPresent()) BitSetUtil.set(bits, 28);
        if (!ss13husb.getHfl().isPresent()) BitSetUtil.set(bits, 29);
        if (!ss13husb.getInsp().isPresent()) BitSetUtil.set(bits, 30);
        if (!ss13husb.getLaptop().isPresent()) BitSetUtil.set(bits, 31);
        if (!ss13husb.getMhp().isPresent()) BitSetUtil.set(bits, 32);
        if (!ss13husb.getModem().isPresent()) BitSetUtil.set(bits, 33);
        if (!ss13husb.getMrgi().isPresent()) BitSetUtil.set(bits, 34);
        if (!ss13husb.getMrgp().isPresent()) BitSetUtil.set(bits, 35);
        if (!ss13husb.getMrgt().isPresent()) BitSetUtil.set(bits, 36);
        if (!ss13husb.getMrgx().isPresent()) BitSetUtil.set(bits, 37);
        if (!ss13husb.getOthsvcex().isPresent()) BitSetUtil.set(bits, 38);
        if (!ss13husb.getRefr().isPresent()) BitSetUtil.set(bits, 39);
        if (!ss13husb.getRmsp().isPresent()) BitSetUtil.set(bits, 40);
        if (!ss13husb.getRntm().isPresent()) BitSetUtil.set(bits, 41);
        if (!ss13husb.getRntp().isPresent()) BitSetUtil.set(bits, 42);
        if (!ss13husb.getRwat().isPresent()) BitSetUtil.set(bits, 43);
        if (!ss13husb.getRwatpr().isPresent()) BitSetUtil.set(bits, 44);
        if (!ss13husb.getSatellite().isPresent()) BitSetUtil.set(bits, 45);
        if (!ss13husb.getSink().isPresent()) BitSetUtil.set(bits, 46);
        if (!ss13husb.getSmp().isPresent()) BitSetUtil.set(bits, 47);
        if (!ss13husb.getStov().isPresent()) BitSetUtil.set(bits, 48);
        if (!ss13husb.getTel().isPresent()) BitSetUtil.set(bits, 49);
        if (!ss13husb.getTen().isPresent()) BitSetUtil.set(bits, 50);
        if (!ss13husb.getToil().isPresent()) BitSetUtil.set(bits, 51);
        if (!ss13husb.getVacs().isPresent()) BitSetUtil.set(bits, 52);
        if (!ss13husb.getValp().isPresent()) BitSetUtil.set(bits, 53);
        if (!ss13husb.getVeh().isPresent()) BitSetUtil.set(bits, 54);
        if (!ss13husb.getWatp().isPresent()) BitSetUtil.set(bits, 55);
        if (!ss13husb.getYbl().isPresent()) BitSetUtil.set(bits, 56);
        if (!ss13husb.getFes().isPresent()) BitSetUtil.set(bits, 57);
        if (!ss13husb.getFfincp().isPresent()) BitSetUtil.set(bits, 58);
        if (!ss13husb.getFgrntp().isPresent()) BitSetUtil.set(bits, 59);
        if (!ss13husb.getFhincp().isPresent()) BitSetUtil.set(bits, 60);
        if (!ss13husb.getFincp().isPresent()) BitSetUtil.set(bits, 61);
        if (!ss13husb.getFparc().isPresent()) BitSetUtil.set(bits, 62);
        if (!ss13husb.getFsmocp().isPresent()) BitSetUtil.set(bits, 63);
        if (!ss13husb.getGrntp().isPresent()) BitSetUtil.set(bits, 64);
        if (!ss13husb.getGrpip().isPresent()) BitSetUtil.set(bits, 65);
        if (!ss13husb.getHhl().isPresent()) BitSetUtil.set(bits, 66);
        if (!ss13husb.getHht().isPresent()) BitSetUtil.set(bits, 67);
        if (!ss13husb.getHincp().isPresent()) BitSetUtil.set(bits, 68);
        if (!ss13husb.getHugcl().isPresent()) BitSetUtil.set(bits, 69);
        if (!ss13husb.getHupac().isPresent()) BitSetUtil.set(bits, 70);
        if (!ss13husb.getHupaoc().isPresent()) BitSetUtil.set(bits, 71);
        if (!ss13husb.getHuparc().isPresent()) BitSetUtil.set(bits, 72);
        if (!ss13husb.getKit().isPresent()) BitSetUtil.set(bits, 73);
        if (!ss13husb.getLngi().isPresent()) BitSetUtil.set(bits, 74);
        if (!ss13husb.getMultg().isPresent()) BitSetUtil.set(bits, 75);
        if (!ss13husb.getMv().isPresent()) BitSetUtil.set(bits, 76);
        if (!ss13husb.getNoc().isPresent()) BitSetUtil.set(bits, 77);
        if (!ss13husb.getNpf().isPresent()) BitSetUtil.set(bits, 78);
        if (!ss13husb.getNpp().isPresent()) BitSetUtil.set(bits, 79);
        if (!ss13husb.getNr().isPresent()) BitSetUtil.set(bits, 80);
        if (!ss13husb.getNrc().isPresent()) BitSetUtil.set(bits, 81);
        if (!ss13husb.getOcpip().isPresent()) BitSetUtil.set(bits, 82);
        if (!ss13husb.getPartner().isPresent()) BitSetUtil.set(bits, 83);
        if (!ss13husb.getPlm().isPresent()) BitSetUtil.set(bits, 84);
        if (!ss13husb.getPsf().isPresent()) BitSetUtil.set(bits, 85);
        if (!ss13husb.getR18().isPresent()) BitSetUtil.set(bits, 86);
        if (!ss13husb.getR60().isPresent()) BitSetUtil.set(bits, 87);
        if (!ss13husb.getR65().isPresent()) BitSetUtil.set(bits, 88);
        if (!ss13husb.getResmode().isPresent()) BitSetUtil.set(bits, 89);
        if (!ss13husb.getSmocp().isPresent()) BitSetUtil.set(bits, 90);
        if (!ss13husb.getSmx().isPresent()) BitSetUtil.set(bits, 91);
        if (!ss13husb.getSrnt().isPresent()) BitSetUtil.set(bits, 92);
        if (!ss13husb.getSsmc().isPresent()) BitSetUtil.set(bits, 93);
        if (!ss13husb.getSval().isPresent()) BitSetUtil.set(bits, 94);
        if (!ss13husb.getTaxp().isPresent()) BitSetUtil.set(bits, 95);
        if (!ss13husb.getWif().isPresent()) BitSetUtil.set(bits, 96);
        if (!ss13husb.getWkexrel().isPresent()) BitSetUtil.set(bits, 97);
        if (!ss13husb.getWorkstat().isPresent()) BitSetUtil.set(bits, 98);
        if (!ss13husb.getFaccessp().isPresent()) BitSetUtil.set(bits, 99);
        if (!ss13husb.getFacrp().isPresent()) BitSetUtil.set(bits, 100);
        if (!ss13husb.getFagsp().isPresent()) BitSetUtil.set(bits, 101);
        if (!ss13husb.getFbathp().isPresent()) BitSetUtil.set(bits, 102);
        if (!ss13husb.getFbdsp().isPresent()) BitSetUtil.set(bits, 103);
        if (!ss13husb.getFbldp().isPresent()) BitSetUtil.set(bits, 104);
        if (!ss13husb.getFbroadbndp().isPresent()) BitSetUtil.set(bits, 105);
        if (!ss13husb.getFbusp().isPresent()) BitSetUtil.set(bits, 106);
        if (!ss13husb.getFcompothxp().isPresent()) BitSetUtil.set(bits, 107);
        if (!ss13husb.getFconp().isPresent()) BitSetUtil.set(bits, 108);
        if (!ss13husb.getFdialupp().isPresent()) BitSetUtil.set(bits, 109);
        if (!ss13husb.getFdslp().isPresent()) BitSetUtil.set(bits, 110);
        if (!ss13husb.getFelep().isPresent()) BitSetUtil.set(bits, 111);
        if (!ss13husb.getFfiberopp().isPresent()) BitSetUtil.set(bits, 112);
        if (!ss13husb.getFfsp().isPresent()) BitSetUtil.set(bits, 113);
        if (!ss13husb.getFfulp().isPresent()) BitSetUtil.set(bits, 114);
        if (!ss13husb.getFgasp().isPresent()) BitSetUtil.set(bits, 115);
        if (!ss13husb.getFhandheldp().isPresent()) BitSetUtil.set(bits, 116);
        if (!ss13husb.getFhflp().isPresent()) BitSetUtil.set(bits, 117);
        if (!ss13husb.getFinsp().isPresent()) BitSetUtil.set(bits, 118);
        if (!ss13husb.getFkitp().isPresent()) BitSetUtil.set(bits, 119);
        if (!ss13husb.getFlaptopp().isPresent()) BitSetUtil.set(bits, 120);
        if (!ss13husb.getFmhp().isPresent()) BitSetUtil.set(bits, 121);
        if (!ss13husb.getFmodemp().isPresent()) BitSetUtil.set(bits, 122);
        if (!ss13husb.getFmrgip().isPresent()) BitSetUtil.set(bits, 123);
        if (!ss13husb.getFmrgp().isPresent()) BitSetUtil.set(bits, 124);
        if (!ss13husb.getFmrgtp().isPresent()) BitSetUtil.set(bits, 125);
        if (!ss13husb.getFmrgxp().isPresent()) BitSetUtil.set(bits, 126);
        if (!ss13husb.getFmvp().isPresent()) BitSetUtil.set(bits, 127);
        if (!ss13husb.getFothsvcexp().isPresent()) BitSetUtil.set(bits, 128);
        if (!ss13husb.getFplmp().isPresent()) BitSetUtil.set(bits, 129);
        if (!ss13husb.getFrefrp().isPresent()) BitSetUtil.set(bits, 130);
        if (!ss13husb.getFrmsp().isPresent()) BitSetUtil.set(bits, 131);
        if (!ss13husb.getFrntmp().isPresent()) BitSetUtil.set(bits, 132);
        if (!ss13husb.getFrntp().isPresent()) BitSetUtil.set(bits, 133);
        if (!ss13husb.getFrwatp().isPresent()) BitSetUtil.set(bits, 134);
        if (!ss13husb.getFrwatprp().isPresent()) BitSetUtil.set(bits, 135);
        if (!ss13husb.getFsatellitep().isPresent()) BitSetUtil.set(bits, 136);
        if (!ss13husb.getFsinkp().isPresent()) BitSetUtil.set(bits, 137);
        if (!ss13husb.getFsmp().isPresent()) BitSetUtil.set(bits, 138);
        if (!ss13husb.getFsmxhp().isPresent()) BitSetUtil.set(bits, 139);
        if (!ss13husb.getFsmxsp().isPresent()) BitSetUtil.set(bits, 140);
        if (!ss13husb.getFstovp().isPresent()) BitSetUtil.set(bits, 141);
        if (!ss13husb.getFtaxp().isPresent()) BitSetUtil.set(bits, 142);
        if (!ss13husb.getFtelp().isPresent()) BitSetUtil.set(bits, 143);
        if (!ss13husb.getFtenp().isPresent()) BitSetUtil.set(bits, 144);
        if (!ss13husb.getFtoilp().isPresent()) BitSetUtil.set(bits, 145);
        if (!ss13husb.getFvacsp().isPresent()) BitSetUtil.set(bits, 146);
        if (!ss13husb.getFvalp().isPresent()) BitSetUtil.set(bits, 147);
        if (!ss13husb.getFvehp().isPresent()) BitSetUtil.set(bits, 148);
        if (!ss13husb.getFwatp().isPresent()) BitSetUtil.set(bits, 149);
        if (!ss13husb.getFyblp().isPresent()) BitSetUtil.set(bits, 150);
        out.writeLong(bits[0]);
        out.writeLong(bits[1]);
        out.writeLong(bits[2]);
        if (ss13husb.getRt().isPresent()) out.writeInt(ss13husb.getRt().get());
        if (ss13husb.getSerialno().isPresent()) out.writeInt(ss13husb.getSerialno().get());
        if (ss13husb.getDivision().isPresent()) out.writeInt(ss13husb.getDivision().get());
        if (ss13husb.getPuma().isPresent()) out.writeInt(ss13husb.getPuma().get());
        if (ss13husb.getRegion().isPresent()) out.writeInt(ss13husb.getRegion().get());
        if (ss13husb.getSt().isPresent()) out.writeInt(ss13husb.getSt().get());
        if (ss13husb.getAdjhsg().isPresent()) out.writeInt(ss13husb.getAdjhsg().get());
        if (ss13husb.getAdjinc().isPresent()) out.writeInt(ss13husb.getAdjinc().get());
        if (ss13husb.getWgtp().isPresent()) out.writeInt(ss13husb.getWgtp().get());
        if (ss13husb.getNp().isPresent()) out.writeInt(ss13husb.getNp().get());
        if (ss13husb.getType().isPresent()) out.writeInt(ss13husb.getType().get());
        if (ss13husb.getAccess().isPresent()) out.writeInt(ss13husb.getAccess().get());
        if (ss13husb.getAcr().isPresent()) out.writeInt(ss13husb.getAcr().get());
        if (ss13husb.getAgs().isPresent()) out.writeInt(ss13husb.getAgs().get());
        if (ss13husb.getBath().isPresent()) out.writeInt(ss13husb.getBath().get());
        if (ss13husb.getBdsp().isPresent()) out.writeInt(ss13husb.getBdsp().get());
        if (ss13husb.getBld().isPresent()) out.writeInt(ss13husb.getBld().get());
        if (ss13husb.getBroadbnd().isPresent()) out.writeInt(ss13husb.getBroadbnd().get());
        if (ss13husb.getBus().isPresent()) out.writeInt(ss13husb.getBus().get());
        if (ss13husb.getCompothx().isPresent()) out.writeInt(ss13husb.getCompothx().get());
        if (ss13husb.getConp().isPresent()) out.writeInt(ss13husb.getConp().get());
        if (ss13husb.getDialup().isPresent()) out.writeInt(ss13husb.getDialup().get());
        if (ss13husb.getDsl().isPresent()) out.writeInt(ss13husb.getDsl().get());
        if (ss13husb.getElep().isPresent()) out.writeInt(ss13husb.getElep().get());
        if (ss13husb.getFiberop().isPresent()) out.writeInt(ss13husb.getFiberop().get());
        if (ss13husb.getFs().isPresent()) out.writeInt(ss13husb.getFs().get());
        if (ss13husb.getFulp().isPresent()) out.writeInt(ss13husb.getFulp().get());
        if (ss13husb.getGasp().isPresent()) out.writeInt(ss13husb.getGasp().get());
        if (ss13husb.getHandheld().isPresent()) out.writeInt(ss13husb.getHandheld().get());
        if (ss13husb.getHfl().isPresent()) out.writeInt(ss13husb.getHfl().get());
        if (ss13husb.getInsp().isPresent()) out.writeInt(ss13husb.getInsp().get());
        if (ss13husb.getLaptop().isPresent()) out.writeInt(ss13husb.getLaptop().get());
        if (ss13husb.getMhp().isPresent()) out.writeInt(ss13husb.getMhp().get());
        if (ss13husb.getModem().isPresent()) out.writeInt(ss13husb.getModem().get());
        if (ss13husb.getMrgi().isPresent()) out.writeInt(ss13husb.getMrgi().get());
        if (ss13husb.getMrgp().isPresent()) out.writeInt(ss13husb.getMrgp().get());
        if (ss13husb.getMrgt().isPresent()) out.writeInt(ss13husb.getMrgt().get());
        if (ss13husb.getMrgx().isPresent()) out.writeInt(ss13husb.getMrgx().get());
        if (ss13husb.getOthsvcex().isPresent()) out.writeInt(ss13husb.getOthsvcex().get());
        if (ss13husb.getRefr().isPresent()) out.writeInt(ss13husb.getRefr().get());
        if (ss13husb.getRmsp().isPresent()) out.writeInt(ss13husb.getRmsp().get());
        if (ss13husb.getRntm().isPresent()) out.writeInt(ss13husb.getRntm().get());
        if (ss13husb.getRntp().isPresent()) out.writeInt(ss13husb.getRntp().get());
        if (ss13husb.getRwat().isPresent()) out.writeInt(ss13husb.getRwat().get());
        if (ss13husb.getRwatpr().isPresent()) out.writeInt(ss13husb.getRwatpr().get());
        if (ss13husb.getSatellite().isPresent()) out.writeInt(ss13husb.getSatellite().get());
        if (ss13husb.getSink().isPresent()) out.writeInt(ss13husb.getSink().get());
        if (ss13husb.getSmp().isPresent()) out.writeInt(ss13husb.getSmp().get());
        if (ss13husb.getStov().isPresent()) out.writeInt(ss13husb.getStov().get());
        if (ss13husb.getTel().isPresent()) out.writeInt(ss13husb.getTel().get());
        if (ss13husb.getTen().isPresent()) out.writeInt(ss13husb.getTen().get());
        if (ss13husb.getToil().isPresent()) out.writeInt(ss13husb.getToil().get());
        if (ss13husb.getVacs().isPresent()) out.writeInt(ss13husb.getVacs().get());
        if (ss13husb.getValp().isPresent()) out.writeInt(ss13husb.getValp().get());
        if (ss13husb.getVeh().isPresent()) out.writeInt(ss13husb.getVeh().get());
        if (ss13husb.getWatp().isPresent()) out.writeInt(ss13husb.getWatp().get());
        if (ss13husb.getYbl().isPresent()) out.writeInt(ss13husb.getYbl().get());
        if (ss13husb.getFes().isPresent()) out.writeInt(ss13husb.getFes().get());
        if (ss13husb.getFfincp().isPresent()) out.writeInt(ss13husb.getFfincp().get());
        if (ss13husb.getFgrntp().isPresent()) out.writeInt(ss13husb.getFgrntp().get());
        if (ss13husb.getFhincp().isPresent()) out.writeInt(ss13husb.getFhincp().get());
        if (ss13husb.getFincp().isPresent()) out.writeInt(ss13husb.getFincp().get());
        if (ss13husb.getFparc().isPresent()) out.writeInt(ss13husb.getFparc().get());
        if (ss13husb.getFsmocp().isPresent()) out.writeInt(ss13husb.getFsmocp().get());
        if (ss13husb.getGrntp().isPresent()) out.writeInt(ss13husb.getGrntp().get());
        if (ss13husb.getGrpip().isPresent()) out.writeInt(ss13husb.getGrpip().get());
        if (ss13husb.getHhl().isPresent()) out.writeInt(ss13husb.getHhl().get());
        if (ss13husb.getHht().isPresent()) out.writeInt(ss13husb.getHht().get());
        if (ss13husb.getHincp().isPresent()) out.writeInt(ss13husb.getHincp().get());
        if (ss13husb.getHugcl().isPresent()) out.writeInt(ss13husb.getHugcl().get());
        if (ss13husb.getHupac().isPresent()) out.writeInt(ss13husb.getHupac().get());
        if (ss13husb.getHupaoc().isPresent()) out.writeInt(ss13husb.getHupaoc().get());
        if (ss13husb.getHuparc().isPresent()) out.writeInt(ss13husb.getHuparc().get());
        if (ss13husb.getKit().isPresent()) out.writeInt(ss13husb.getKit().get());
        if (ss13husb.getLngi().isPresent()) out.writeInt(ss13husb.getLngi().get());
        if (ss13husb.getMultg().isPresent()) out.writeInt(ss13husb.getMultg().get());
        if (ss13husb.getMv().isPresent()) out.writeInt(ss13husb.getMv().get());
        if (ss13husb.getNoc().isPresent()) out.writeInt(ss13husb.getNoc().get());
        if (ss13husb.getNpf().isPresent()) out.writeInt(ss13husb.getNpf().get());
        if (ss13husb.getNpp().isPresent()) out.writeInt(ss13husb.getNpp().get());
        if (ss13husb.getNr().isPresent()) out.writeInt(ss13husb.getNr().get());
        if (ss13husb.getNrc().isPresent()) out.writeInt(ss13husb.getNrc().get());
        if (ss13husb.getOcpip().isPresent()) out.writeInt(ss13husb.getOcpip().get());
        if (ss13husb.getPartner().isPresent()) out.writeInt(ss13husb.getPartner().get());
        if (ss13husb.getPlm().isPresent()) out.writeInt(ss13husb.getPlm().get());
        if (ss13husb.getPsf().isPresent()) out.writeInt(ss13husb.getPsf().get());
        if (ss13husb.getR18().isPresent()) out.writeInt(ss13husb.getR18().get());
        if (ss13husb.getR60().isPresent()) out.writeInt(ss13husb.getR60().get());
        if (ss13husb.getR65().isPresent()) out.writeInt(ss13husb.getR65().get());
        if (ss13husb.getResmode().isPresent()) out.writeInt(ss13husb.getResmode().get());
        if (ss13husb.getSmocp().isPresent()) out.writeInt(ss13husb.getSmocp().get());
        if (ss13husb.getSmx().isPresent()) out.writeInt(ss13husb.getSmx().get());
        if (ss13husb.getSrnt().isPresent()) out.writeInt(ss13husb.getSrnt().get());
        if (ss13husb.getSsmc().isPresent()) out.writeInt(ss13husb.getSsmc().get());
        if (ss13husb.getSval().isPresent()) out.writeInt(ss13husb.getSval().get());
        if (ss13husb.getTaxp().isPresent()) out.writeInt(ss13husb.getTaxp().get());
        if (ss13husb.getWif().isPresent()) out.writeInt(ss13husb.getWif().get());
        if (ss13husb.getWkexrel().isPresent()) out.writeInt(ss13husb.getWkexrel().get());
        if (ss13husb.getWorkstat().isPresent()) out.writeInt(ss13husb.getWorkstat().get());
        if (ss13husb.getFaccessp().isPresent()) out.writeInt(ss13husb.getFaccessp().get());
        if (ss13husb.getFacrp().isPresent()) out.writeInt(ss13husb.getFacrp().get());
        if (ss13husb.getFagsp().isPresent()) out.writeInt(ss13husb.getFagsp().get());
        if (ss13husb.getFbathp().isPresent()) out.writeInt(ss13husb.getFbathp().get());
        if (ss13husb.getFbdsp().isPresent()) out.writeInt(ss13husb.getFbdsp().get());
        if (ss13husb.getFbldp().isPresent()) out.writeInt(ss13husb.getFbldp().get());
        if (ss13husb.getFbroadbndp().isPresent()) out.writeInt(ss13husb.getFbroadbndp().get());
        if (ss13husb.getFbusp().isPresent()) out.writeInt(ss13husb.getFbusp().get());
        if (ss13husb.getFcompothxp().isPresent()) out.writeInt(ss13husb.getFcompothxp().get());
        if (ss13husb.getFconp().isPresent()) out.writeInt(ss13husb.getFconp().get());
        if (ss13husb.getFdialupp().isPresent()) out.writeInt(ss13husb.getFdialupp().get());
        if (ss13husb.getFdslp().isPresent()) out.writeInt(ss13husb.getFdslp().get());
        if (ss13husb.getFelep().isPresent()) out.writeInt(ss13husb.getFelep().get());
        if (ss13husb.getFfiberopp().isPresent()) out.writeInt(ss13husb.getFfiberopp().get());
        if (ss13husb.getFfsp().isPresent()) out.writeInt(ss13husb.getFfsp().get());
        if (ss13husb.getFfulp().isPresent()) out.writeInt(ss13husb.getFfulp().get());
        if (ss13husb.getFgasp().isPresent()) out.writeInt(ss13husb.getFgasp().get());
        if (ss13husb.getFhandheldp().isPresent()) out.writeInt(ss13husb.getFhandheldp().get());
        if (ss13husb.getFhflp().isPresent()) out.writeInt(ss13husb.getFhflp().get());
        if (ss13husb.getFinsp().isPresent()) out.writeInt(ss13husb.getFinsp().get());
        if (ss13husb.getFkitp().isPresent()) out.writeInt(ss13husb.getFkitp().get());
        if (ss13husb.getFlaptopp().isPresent()) out.writeInt(ss13husb.getFlaptopp().get());
        if (ss13husb.getFmhp().isPresent()) out.writeInt(ss13husb.getFmhp().get());
        if (ss13husb.getFmodemp().isPresent()) out.writeInt(ss13husb.getFmodemp().get());
        if (ss13husb.getFmrgip().isPresent()) out.writeInt(ss13husb.getFmrgip().get());
        if (ss13husb.getFmrgp().isPresent()) out.writeInt(ss13husb.getFmrgp().get());
        if (ss13husb.getFmrgtp().isPresent()) out.writeInt(ss13husb.getFmrgtp().get());
        if (ss13husb.getFmrgxp().isPresent()) out.writeInt(ss13husb.getFmrgxp().get());
        if (ss13husb.getFmvp().isPresent()) out.writeInt(ss13husb.getFmvp().get());
        if (ss13husb.getFothsvcexp().isPresent()) out.writeInt(ss13husb.getFothsvcexp().get());
        if (ss13husb.getFplmp().isPresent()) out.writeInt(ss13husb.getFplmp().get());
        if (ss13husb.getFrefrp().isPresent()) out.writeInt(ss13husb.getFrefrp().get());
        if (ss13husb.getFrmsp().isPresent()) out.writeInt(ss13husb.getFrmsp().get());
        if (ss13husb.getFrntmp().isPresent()) out.writeInt(ss13husb.getFrntmp().get());
        if (ss13husb.getFrntp().isPresent()) out.writeInt(ss13husb.getFrntp().get());
        if (ss13husb.getFrwatp().isPresent()) out.writeInt(ss13husb.getFrwatp().get());
        if (ss13husb.getFrwatprp().isPresent()) out.writeInt(ss13husb.getFrwatprp().get());
        if (ss13husb.getFsatellitep().isPresent()) out.writeInt(ss13husb.getFsatellitep().get());
        if (ss13husb.getFsinkp().isPresent()) out.writeInt(ss13husb.getFsinkp().get());
        if (ss13husb.getFsmp().isPresent()) out.writeInt(ss13husb.getFsmp().get());
        if (ss13husb.getFsmxhp().isPresent()) out.writeInt(ss13husb.getFsmxhp().get());
        if (ss13husb.getFsmxsp().isPresent()) out.writeInt(ss13husb.getFsmxsp().get());
        if (ss13husb.getFstovp().isPresent()) out.writeInt(ss13husb.getFstovp().get());
        if (ss13husb.getFtaxp().isPresent()) out.writeInt(ss13husb.getFtaxp().get());
        if (ss13husb.getFtelp().isPresent()) out.writeInt(ss13husb.getFtelp().get());
        if (ss13husb.getFtenp().isPresent()) out.writeInt(ss13husb.getFtenp().get());
        if (ss13husb.getFtoilp().isPresent()) out.writeInt(ss13husb.getFtoilp().get());
        if (ss13husb.getFvacsp().isPresent()) out.writeInt(ss13husb.getFvacsp().get());
        if (ss13husb.getFvalp().isPresent()) out.writeInt(ss13husb.getFvalp().get());
        if (ss13husb.getFvehp().isPresent()) out.writeInt(ss13husb.getFvehp().get());
        if (ss13husb.getFwatp().isPresent()) out.writeInt(ss13husb.getFwatp().get());
        if (ss13husb.getFyblp().isPresent()) out.writeInt(ss13husb.getFyblp().get());
    }
    
    @Override
    public Ss13husb deserialize(final DataInput in, final int available) throws IOException {
        final Ss13husb ss13husb = manager.newEmptyEntity();
        final long[] bits = new long[3];
        bits[0] = in.readLong();
        bits[1] = in.readLong();
        bits[2] = in.readLong();
        if (!BitSetUtil.get0(bits)) ss13husb.setRt(in.readInt());
        if (!BitSetUtil.get1(bits)) ss13husb.setSerialno(in.readInt());
        if (!BitSetUtil.get2(bits)) ss13husb.setDivision(in.readInt());
        if (!BitSetUtil.get3(bits)) ss13husb.setPuma(in.readInt());
        if (!BitSetUtil.get4(bits)) ss13husb.setRegion(in.readInt());
        if (!BitSetUtil.get5(bits)) ss13husb.setSt(in.readInt());
        if (!BitSetUtil.get6(bits)) ss13husb.setAdjhsg(in.readInt());
        if (!BitSetUtil.get7(bits)) ss13husb.setAdjinc(in.readInt());
        if (!BitSetUtil.get8(bits)) ss13husb.setWgtp(in.readInt());
        if (!BitSetUtil.get9(bits)) ss13husb.setNp(in.readInt());
        if (!BitSetUtil.get(bits, 10)) ss13husb.setType(in.readInt());
        if (!BitSetUtil.get(bits, 11)) ss13husb.setAccess(in.readInt());
        if (!BitSetUtil.get(bits, 12)) ss13husb.setAcr(in.readInt());
        if (!BitSetUtil.get(bits, 13)) ss13husb.setAgs(in.readInt());
        if (!BitSetUtil.get(bits, 14)) ss13husb.setBath(in.readInt());
        if (!BitSetUtil.get(bits, 15)) ss13husb.setBdsp(in.readInt());
        if (!BitSetUtil.get(bits, 16)) ss13husb.setBld(in.readInt());
        if (!BitSetUtil.get(bits, 17)) ss13husb.setBroadbnd(in.readInt());
        if (!BitSetUtil.get(bits, 18)) ss13husb.setBus(in.readInt());
        if (!BitSetUtil.get(bits, 19)) ss13husb.setCompothx(in.readInt());
        if (!BitSetUtil.get(bits, 20)) ss13husb.setConp(in.readInt());
        if (!BitSetUtil.get(bits, 21)) ss13husb.setDialup(in.readInt());
        if (!BitSetUtil.get(bits, 22)) ss13husb.setDsl(in.readInt());
        if (!BitSetUtil.get(bits, 23)) ss13husb.setElep(in.readInt());
        if (!BitSetUtil.get(bits, 24)) ss13husb.setFiberop(in.readInt());
        if (!BitSetUtil.get(bits, 25)) ss13husb.setFs(in.readInt());
        if (!BitSetUtil.get(bits, 26)) ss13husb.setFulp(in.readInt());
        if (!BitSetUtil.get(bits, 27)) ss13husb.setGasp(in.readInt());
        if (!BitSetUtil.get(bits, 28)) ss13husb.setHandheld(in.readInt());
        if (!BitSetUtil.get(bits, 29)) ss13husb.setHfl(in.readInt());
        if (!BitSetUtil.get(bits, 30)) ss13husb.setInsp(in.readInt());
        if (!BitSetUtil.get(bits, 31)) ss13husb.setLaptop(in.readInt());
        if (!BitSetUtil.get(bits, 32)) ss13husb.setMhp(in.readInt());
        if (!BitSetUtil.get(bits, 33)) ss13husb.setModem(in.readInt());
        if (!BitSetUtil.get(bits, 34)) ss13husb.setMrgi(in.readInt());
        if (!BitSetUtil.get(bits, 35)) ss13husb.setMrgp(in.readInt());
        if (!BitSetUtil.get(bits, 36)) ss13husb.setMrgt(in.readInt());
        if (!BitSetUtil.get(bits, 37)) ss13husb.setMrgx(in.readInt());
        if (!BitSetUtil.get(bits, 38)) ss13husb.setOthsvcex(in.readInt());
        if (!BitSetUtil.get(bits, 39)) ss13husb.setRefr(in.readInt());
        if (!BitSetUtil.get(bits, 40)) ss13husb.setRmsp(in.readInt());
        if (!BitSetUtil.get(bits, 41)) ss13husb.setRntm(in.readInt());
        if (!BitSetUtil.get(bits, 42)) ss13husb.setRntp(in.readInt());
        if (!BitSetUtil.get(bits, 43)) ss13husb.setRwat(in.readInt());
        if (!BitSetUtil.get(bits, 44)) ss13husb.setRwatpr(in.readInt());
        if (!BitSetUtil.get(bits, 45)) ss13husb.setSatellite(in.readInt());
        if (!BitSetUtil.get(bits, 46)) ss13husb.setSink(in.readInt());
        if (!BitSetUtil.get(bits, 47)) ss13husb.setSmp(in.readInt());
        if (!BitSetUtil.get(bits, 48)) ss13husb.setStov(in.readInt());
        if (!BitSetUtil.get(bits, 49)) ss13husb.setTel(in.readInt());
        if (!BitSetUtil.get(bits, 50)) ss13husb.setTen(in.readInt());
        if (!BitSetUtil.get(bits, 51)) ss13husb.setToil(in.readInt());
        if (!BitSetUtil.get(bits, 52)) ss13husb.setVacs(in.readInt());
        if (!BitSetUtil.get(bits, 53)) ss13husb.setValp(in.readInt());
        if (!BitSetUtil.get(bits, 54)) ss13husb.setVeh(in.readInt());
        if (!BitSetUtil.get(bits, 55)) ss13husb.setWatp(in.readInt());
        if (!BitSetUtil.get(bits, 56)) ss13husb.setYbl(in.readInt());
        if (!BitSetUtil.get(bits, 57)) ss13husb.setFes(in.readInt());
        if (!BitSetUtil.get(bits, 58)) ss13husb.setFfincp(in.readInt());
        if (!BitSetUtil.get(bits, 59)) ss13husb.setFgrntp(in.readInt());
        if (!BitSetUtil.get(bits, 60)) ss13husb.setFhincp(in.readInt());
        if (!BitSetUtil.get(bits, 61)) ss13husb.setFincp(in.readInt());
        if (!BitSetUtil.get(bits, 62)) ss13husb.setFparc(in.readInt());
        if (!BitSetUtil.get(bits, 63)) ss13husb.setFsmocp(in.readInt());
        if (!BitSetUtil.get(bits, 64)) ss13husb.setGrntp(in.readInt());
        if (!BitSetUtil.get(bits, 65)) ss13husb.setGrpip(in.readInt());
        if (!BitSetUtil.get(bits, 66)) ss13husb.setHhl(in.readInt());
        if (!BitSetUtil.get(bits, 67)) ss13husb.setHht(in.readInt());
        if (!BitSetUtil.get(bits, 68)) ss13husb.setHincp(in.readInt());
        if (!BitSetUtil.get(bits, 69)) ss13husb.setHugcl(in.readInt());
        if (!BitSetUtil.get(bits, 70)) ss13husb.setHupac(in.readInt());
        if (!BitSetUtil.get(bits, 71)) ss13husb.setHupaoc(in.readInt());
        if (!BitSetUtil.get(bits, 72)) ss13husb.setHuparc(in.readInt());
        if (!BitSetUtil.get(bits, 73)) ss13husb.setKit(in.readInt());
        if (!BitSetUtil.get(bits, 74)) ss13husb.setLngi(in.readInt());
        if (!BitSetUtil.get(bits, 75)) ss13husb.setMultg(in.readInt());
        if (!BitSetUtil.get(bits, 76)) ss13husb.setMv(in.readInt());
        if (!BitSetUtil.get(bits, 77)) ss13husb.setNoc(in.readInt());
        if (!BitSetUtil.get(bits, 78)) ss13husb.setNpf(in.readInt());
        if (!BitSetUtil.get(bits, 79)) ss13husb.setNpp(in.readInt());
        if (!BitSetUtil.get(bits, 80)) ss13husb.setNr(in.readInt());
        if (!BitSetUtil.get(bits, 81)) ss13husb.setNrc(in.readInt());
        if (!BitSetUtil.get(bits, 82)) ss13husb.setOcpip(in.readInt());
        if (!BitSetUtil.get(bits, 83)) ss13husb.setPartner(in.readInt());
        if (!BitSetUtil.get(bits, 84)) ss13husb.setPlm(in.readInt());
        if (!BitSetUtil.get(bits, 85)) ss13husb.setPsf(in.readInt());
        if (!BitSetUtil.get(bits, 86)) ss13husb.setR18(in.readInt());
        if (!BitSetUtil.get(bits, 87)) ss13husb.setR60(in.readInt());
        if (!BitSetUtil.get(bits, 88)) ss13husb.setR65(in.readInt());
        if (!BitSetUtil.get(bits, 89)) ss13husb.setResmode(in.readInt());
        if (!BitSetUtil.get(bits, 90)) ss13husb.setSmocp(in.readInt());
        if (!BitSetUtil.get(bits, 91)) ss13husb.setSmx(in.readInt());
        if (!BitSetUtil.get(bits, 92)) ss13husb.setSrnt(in.readInt());
        if (!BitSetUtil.get(bits, 93)) ss13husb.setSsmc(in.readInt());
        if (!BitSetUtil.get(bits, 94)) ss13husb.setSval(in.readInt());
        if (!BitSetUtil.get(bits, 95)) ss13husb.setTaxp(in.readInt());
        if (!BitSetUtil.get(bits, 96)) ss13husb.setWif(in.readInt());
        if (!BitSetUtil.get(bits, 97)) ss13husb.setWkexrel(in.readInt());
        if (!BitSetUtil.get(bits, 98)) ss13husb.setWorkstat(in.readInt());
        if (!BitSetUtil.get(bits, 99)) ss13husb.setFaccessp(in.readInt());
        if (!BitSetUtil.get(bits, 100)) ss13husb.setFacrp(in.readInt());
        if (!BitSetUtil.get(bits, 101)) ss13husb.setFagsp(in.readInt());
        if (!BitSetUtil.get(bits, 102)) ss13husb.setFbathp(in.readInt());
        if (!BitSetUtil.get(bits, 103)) ss13husb.setFbdsp(in.readInt());
        if (!BitSetUtil.get(bits, 104)) ss13husb.setFbldp(in.readInt());
        if (!BitSetUtil.get(bits, 105)) ss13husb.setFbroadbndp(in.readInt());
        if (!BitSetUtil.get(bits, 106)) ss13husb.setFbusp(in.readInt());
        if (!BitSetUtil.get(bits, 107)) ss13husb.setFcompothxp(in.readInt());
        if (!BitSetUtil.get(bits, 108)) ss13husb.setFconp(in.readInt());
        if (!BitSetUtil.get(bits, 109)) ss13husb.setFdialupp(in.readInt());
        if (!BitSetUtil.get(bits, 110)) ss13husb.setFdslp(in.readInt());
        if (!BitSetUtil.get(bits, 111)) ss13husb.setFelep(in.readInt());
        if (!BitSetUtil.get(bits, 112)) ss13husb.setFfiberopp(in.readInt());
        if (!BitSetUtil.get(bits, 113)) ss13husb.setFfsp(in.readInt());
        if (!BitSetUtil.get(bits, 114)) ss13husb.setFfulp(in.readInt());
        if (!BitSetUtil.get(bits, 115)) ss13husb.setFgasp(in.readInt());
        if (!BitSetUtil.get(bits, 116)) ss13husb.setFhandheldp(in.readInt());
        if (!BitSetUtil.get(bits, 117)) ss13husb.setFhflp(in.readInt());
        if (!BitSetUtil.get(bits, 118)) ss13husb.setFinsp(in.readInt());
        if (!BitSetUtil.get(bits, 119)) ss13husb.setFkitp(in.readInt());
        if (!BitSetUtil.get(bits, 120)) ss13husb.setFlaptopp(in.readInt());
        if (!BitSetUtil.get(bits, 121)) ss13husb.setFmhp(in.readInt());
        if (!BitSetUtil.get(bits, 122)) ss13husb.setFmodemp(in.readInt());
        if (!BitSetUtil.get(bits, 123)) ss13husb.setFmrgip(in.readInt());
        if (!BitSetUtil.get(bits, 124)) ss13husb.setFmrgp(in.readInt());
        if (!BitSetUtil.get(bits, 125)) ss13husb.setFmrgtp(in.readInt());
        if (!BitSetUtil.get(bits, 126)) ss13husb.setFmrgxp(in.readInt());
        if (!BitSetUtil.get(bits, 127)) ss13husb.setFmvp(in.readInt());
        if (!BitSetUtil.get(bits, 128)) ss13husb.setFothsvcexp(in.readInt());
        if (!BitSetUtil.get(bits, 129)) ss13husb.setFplmp(in.readInt());
        if (!BitSetUtil.get(bits, 130)) ss13husb.setFrefrp(in.readInt());
        if (!BitSetUtil.get(bits, 131)) ss13husb.setFrmsp(in.readInt());
        if (!BitSetUtil.get(bits, 132)) ss13husb.setFrntmp(in.readInt());
        if (!BitSetUtil.get(bits, 133)) ss13husb.setFrntp(in.readInt());
        if (!BitSetUtil.get(bits, 134)) ss13husb.setFrwatp(in.readInt());
        if (!BitSetUtil.get(bits, 135)) ss13husb.setFrwatprp(in.readInt());
        if (!BitSetUtil.get(bits, 136)) ss13husb.setFsatellitep(in.readInt());
        if (!BitSetUtil.get(bits, 137)) ss13husb.setFsinkp(in.readInt());
        if (!BitSetUtil.get(bits, 138)) ss13husb.setFsmp(in.readInt());
        if (!BitSetUtil.get(bits, 139)) ss13husb.setFsmxhp(in.readInt());
        if (!BitSetUtil.get(bits, 140)) ss13husb.setFsmxsp(in.readInt());
        if (!BitSetUtil.get(bits, 141)) ss13husb.setFstovp(in.readInt());
        if (!BitSetUtil.get(bits, 142)) ss13husb.setFtaxp(in.readInt());
        if (!BitSetUtil.get(bits, 143)) ss13husb.setFtelp(in.readInt());
        if (!BitSetUtil.get(bits, 144)) ss13husb.setFtenp(in.readInt());
        if (!BitSetUtil.get(bits, 145)) ss13husb.setFtoilp(in.readInt());
        if (!BitSetUtil.get(bits, 146)) ss13husb.setFvacsp(in.readInt());
        if (!BitSetUtil.get(bits, 147)) ss13husb.setFvalp(in.readInt());
        if (!BitSetUtil.get(bits, 148)) ss13husb.setFvehp(in.readInt());
        if (!BitSetUtil.get(bits, 149)) ss13husb.setFwatp(in.readInt());
        if (!BitSetUtil.get(bits, 150)) ss13husb.setFyblp(in.readInt());
        return ss13husb;
    }
}