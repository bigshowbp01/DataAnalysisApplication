package com.company.test.test.test.houses.generated;

import com.company.test.test.test.houses.Houses;
import com.speedment.plugin.extspeeder.runtime.FieldMapper;
import com.speedment.plugin.extspeeder.runtime.servlet.ExtSpeederHttpServlet;
import javax.annotation.Generated;
import static com.speedment.encoder.JsonEncoder.jsonValue;

/**
 * The generated servlet representing an entity (for example, a row) in the
 * Table test.test.test.houses.
 * <p>
 * This file has been automatically generated by Ext Speeder. Any changes
 * made to it will be overwritten.
 * 
 * @author Ext Speeder
 */
@Generated("Ext Speeder")
public class GeneratedHousesServlet extends ExtSpeederHttpServlet<Houses> {
    
    private final static long serialVersionUID = 2142940080;
    public static FieldMapper<Houses> FIELD_MAPPER = columnName -> {
            switch (columnName) {
                case "serial" : return Houses.SERIAL;
                case "state" : return Houses.STATE;
                case "building" : return Houses.BUILDING;
                case "housing_adjustment_code" : return Houses.HOUSING_ADJUSTMENT_CODE;
                case "income_adjusment_code" : return Houses.INCOME_ADJUSMENT_CODE;
                case "condo_fee" : return Houses.CONDO_FEE;
                case "number_of_rooms" : return Houses.NUMBER_OF_ROOMS;
                case "mounthly_rent" : return Houses.MOUNTHLY_RENT;
                case "property_value" : return Houses.PROPERTY_VALUE;
                case "year_of_creation" : return Houses.YEAR_OF_CREATION;
                case "family_income" : return Houses.FAMILY_INCOME;
                case "gross_rent" : return Houses.GROSS_RENT;
                case "gross_rent_as_percentage" : return Houses.GROSS_RENT_AS_PERCENTAGE;
                case "household_income" : return Houses.HOUSEHOLD_INCOME;
                case "mountly_owner_cost_as_percentage" : return Houses.MOUNTLY_OWNER_COST_AS_PERCENTAGE;
                case "mounthly_owner_cost" : return Houses.MOUNTHLY_OWNER_COST;
                case "property_taxes" : return Houses.PROPERTY_TAXES;
                default : return null;
            }
    };
    
    @Override
    public Class<Houses> entityClass() {
        return Houses.class;
    }
    
    @Override
    public FieldMapper<Houses> fieldMapper() {
        return FIELD_MAPPER;
    }
    
    @Override
    public String toJson(Houses entity) {
        return entity == null ? "null" : new StringBuilder()
            .append('{')
            .append("\"serial\":").append(jsonValue(entity.getSerial())).append(", ")
            .append("\"state\":").append(jsonValue(entity.getState())).append(", ")
            .append("\"building\":").append(jsonValue(entity.getBuilding())).append(", ")
            .append("\"housing_adjustment_code\":").append(jsonValue(entity.getHousingAdjustmentCode())).append(", ")
            .append("\"income_adjusment_code\":").append(jsonValue(entity.getIncomeAdjusmentCode())).append(", ")
            .append("\"condo_fee\":").append(jsonValue(entity.getCondoFee())).append(", ")
            .append("\"number_of_rooms\":").append(jsonValue(entity.getNumberOfRooms())).append(", ")
            .append("\"mounthly_rent\":").append(jsonValue(entity.getMounthlyRent())).append(", ")
            .append("\"property_value\":").append(jsonValue(entity.getPropertyValue())).append(", ")
            .append("\"year_of_creation\":").append(jsonValue(entity.getYearOfCreation())).append(", ")
            .append("\"family_income\":").append(jsonValue(entity.getFamilyIncome())).append(", ")
            .append("\"gross_rent\":").append(jsonValue(entity.getGrossRent())).append(", ")
            .append("\"gross_rent_as_percentage\":").append(jsonValue(entity.getGrossRentAsPercentage())).append(", ")
            .append("\"household_income\":").append(jsonValue(entity.getHouseholdIncome())).append(", ")
            .append("\"mountly_owner_cost_as_percentage\":").append(jsonValue(entity.getMountlyOwnerCostAsPercentage())).append(", ")
            .append("\"mounthly_owner_cost\":").append(jsonValue(entity.getMounthlyOwnerCost())).append(", ")
            .append("\"property_taxes\":").append(jsonValue(entity.getPropertyTaxes()))
            .append('}')
        .toString();
    }
    
    @Override
    public String getServletInfo() {
        return "Servlet for the houses table in the test schema.";
    }
}