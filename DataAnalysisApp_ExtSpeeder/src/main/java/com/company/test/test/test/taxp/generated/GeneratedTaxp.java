package com.company.test.test.test.taxp.generated;

import com.company.test.test.test.taxp.Taxp;
import com.speedment.Entity;
import com.speedment.config.db.mapper.identity.IntegerIdentityMapper;
import com.speedment.config.db.mapper.identity.StringIdentityMapper;
import com.speedment.field.ComparableField;
import com.speedment.field.FieldIdentifier;
import com.speedment.field.StringField;
import com.speedment.internal.core.field.ComparableFieldImpl;
import com.speedment.internal.core.field.StringFieldImpl;
import java.util.Optional;
import javax.annotation.Generated;

/**
 * The generated base interface representing an entity (for example, a row)
 * in the Table test.test.test.taxp.
 * <p>
 * This file has been automatically generated by Ext Speeder. Any changes
 * made to it will be overwritten.
 * 
 * @author Ext Speeder
 */
@Generated("Ext Speeder")
public interface GeneratedTaxp extends Entity<Taxp> {
    
    /**
     * This Field corresponds to the {@link Taxp} field that can be obtained
     * using the {@link Taxp#getId()} method.
     */
    final ComparableField<Taxp, Integer, Integer> ID = new ComparableFieldImpl<>(Identifier.ID, Taxp::getId, Taxp::setId, new IntegerIdentityMapper(), true);
    /**
     * This Field corresponds to the {@link Taxp} field that can be obtained
     * using the {@link Taxp#getDescription()} method.
     */
    final StringField<Taxp, String> DESCRIPTION = new StringFieldImpl<>(Identifier.DESCRIPTION, o -> o.getDescription().orElse(null), Taxp::setDescription, new StringIdentityMapper(), false);
    
    /**
     * Returns the id of this Taxp. The id field corresponds to the database
     * column test.test.taxp.id.
     * 
     * @return the id of this Taxp
     */
    Integer getId();
    
    /**
     * Returns the description of this Taxp. The description field corresponds to
     * the database column test.test.taxp.description.
     * 
     * @return the description of this Taxp
     */
    Optional<String> getDescription();
    
    /**
     * Sets the id of this Taxp. The id field corresponds to the database column
     * test.test.taxp.id.
     * 
     * @param id to set of this Taxp
     * @return this Taxp instance
     */
    Taxp setId(Integer id);
    
    /**
     * Sets the description of this Taxp. The description field corresponds to
     * the database column test.test.taxp.description.
     * 
     * @param description to set of this Taxp
     * @return this Taxp instance
     */
    Taxp setDescription(String description);
    
    enum Identifier implements FieldIdentifier<Taxp> {
        
        ID ("id"),
        DESCRIPTION ("description");
        
        private final String columnName;
        
        Identifier(String columnName) {
            this.columnName = columnName;
        }
        
        @Override
        public String dbmsName() {
            return "test";
        }
        
        @Override
        public String schemaName() {
            return "test";
        }
        
        @Override
        public String tableName() {
            return "taxp";
        }
        
        @Override
        public String columnName() {
            return this.columnName;
        }
    }
}