package com.company.test.test.test.ss13pusb.generated;

import com.company.test.test.test.ss13pusb.Ss13pusb;
import com.speedment.Entity;
import com.speedment.config.db.mapper.identity.IntegerIdentityMapper;
import com.speedment.field.ComparableField;
import com.speedment.field.FieldIdentifier;
import com.speedment.internal.core.field.ComparableFieldImpl;
import java.util.Optional;
import javax.annotation.Generated;

/**
 * The generated base interface representing an entity (for example, a row)
 * in the Table test.test.test.ss13pusb.
 * <p>
 * This file has been automatically generated by Ext Speeder. Any changes
 * made to it will be overwritten.
 * 
 * @author Ext Speeder
 */
@Generated("Ext Speeder")
public interface GeneratedSs13pusb extends Entity<Ss13pusb> {
    
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getRt()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> RT = new ComparableFieldImpl<>(Identifier.RT, o -> o.getRt().orElse(null), Ss13pusb::setRt, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getSerialno()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> SERIALNO = new ComparableFieldImpl<>(Identifier.SERIALNO, o -> o.getSerialno().orElse(null), Ss13pusb::setSerialno, new IntegerIdentityMapper(), true);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getSporder()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> SPORDER = new ComparableFieldImpl<>(Identifier.SPORDER, o -> o.getSporder().orElse(null), Ss13pusb::setSporder, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getPuma()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> PUMA = new ComparableFieldImpl<>(Identifier.PUMA, o -> o.getPuma().orElse(null), Ss13pusb::setPuma, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getSt()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> ST = new ComparableFieldImpl<>(Identifier.ST, o -> o.getSt().orElse(null), Ss13pusb::setSt, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getAdjinc()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> ADJINC = new ComparableFieldImpl<>(Identifier.ADJINC, o -> o.getAdjinc().orElse(null), Ss13pusb::setAdjinc, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getPwgtp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> PWGTP = new ComparableFieldImpl<>(Identifier.PWGTP, o -> o.getPwgtp().orElse(null), Ss13pusb::setPwgtp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getAgep()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> AGEP = new ComparableFieldImpl<>(Identifier.AGEP, o -> o.getAgep().orElse(null), Ss13pusb::setAgep, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getCit()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> CIT = new ComparableFieldImpl<>(Identifier.CIT, o -> o.getCit().orElse(null), Ss13pusb::setCit, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getCitwp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> CITWP = new ComparableFieldImpl<>(Identifier.CITWP, o -> o.getCitwp().orElse(null), Ss13pusb::setCitwp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getCow()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> COW = new ComparableFieldImpl<>(Identifier.COW, o -> o.getCow().orElse(null), Ss13pusb::setCow, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getDdrs()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> DDRS = new ComparableFieldImpl<>(Identifier.DDRS, o -> o.getDdrs().orElse(null), Ss13pusb::setDdrs, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getDear()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> DEAR = new ComparableFieldImpl<>(Identifier.DEAR, o -> o.getDear().orElse(null), Ss13pusb::setDear, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getDeye()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> DEYE = new ComparableFieldImpl<>(Identifier.DEYE, o -> o.getDeye().orElse(null), Ss13pusb::setDeye, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getDout()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> DOUT = new ComparableFieldImpl<>(Identifier.DOUT, o -> o.getDout().orElse(null), Ss13pusb::setDout, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getDphy()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> DPHY = new ComparableFieldImpl<>(Identifier.DPHY, o -> o.getDphy().orElse(null), Ss13pusb::setDphy, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getDrat()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> DRAT = new ComparableFieldImpl<>(Identifier.DRAT, o -> o.getDrat().orElse(null), Ss13pusb::setDrat, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getDratx()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> DRATX = new ComparableFieldImpl<>(Identifier.DRATX, o -> o.getDratx().orElse(null), Ss13pusb::setDratx, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getDrem()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> DREM = new ComparableFieldImpl<>(Identifier.DREM, o -> o.getDrem().orElse(null), Ss13pusb::setDrem, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getEng()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> ENG = new ComparableFieldImpl<>(Identifier.ENG, o -> o.getEng().orElse(null), Ss13pusb::setEng, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFer()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FER = new ComparableFieldImpl<>(Identifier.FER, o -> o.getFer().orElse(null), Ss13pusb::setFer, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getGcl()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> GCL = new ComparableFieldImpl<>(Identifier.GCL, o -> o.getGcl().orElse(null), Ss13pusb::setGcl, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getGcm()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> GCM = new ComparableFieldImpl<>(Identifier.GCM, o -> o.getGcm().orElse(null), Ss13pusb::setGcm, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getGcr()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> GCR = new ComparableFieldImpl<>(Identifier.GCR, o -> o.getGcr().orElse(null), Ss13pusb::setGcr, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getHins1()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> HINS1 = new ComparableFieldImpl<>(Identifier.HINS1, o -> o.getHins1().orElse(null), Ss13pusb::setHins1, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getHins2()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> HINS2 = new ComparableFieldImpl<>(Identifier.HINS2, o -> o.getHins2().orElse(null), Ss13pusb::setHins2, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getHins3()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> HINS3 = new ComparableFieldImpl<>(Identifier.HINS3, o -> o.getHins3().orElse(null), Ss13pusb::setHins3, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getHins4()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> HINS4 = new ComparableFieldImpl<>(Identifier.HINS4, o -> o.getHins4().orElse(null), Ss13pusb::setHins4, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getHins5()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> HINS5 = new ComparableFieldImpl<>(Identifier.HINS5, o -> o.getHins5().orElse(null), Ss13pusb::setHins5, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getHins6()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> HINS6 = new ComparableFieldImpl<>(Identifier.HINS6, o -> o.getHins6().orElse(null), Ss13pusb::setHins6, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getHins7()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> HINS7 = new ComparableFieldImpl<>(Identifier.HINS7, o -> o.getHins7().orElse(null), Ss13pusb::setHins7, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getIntp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> INTP = new ComparableFieldImpl<>(Identifier.INTP, o -> o.getIntp().orElse(null), Ss13pusb::setIntp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getJwmnp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> JWMNP = new ComparableFieldImpl<>(Identifier.JWMNP, o -> o.getJwmnp().orElse(null), Ss13pusb::setJwmnp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getJwrip()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> JWRIP = new ComparableFieldImpl<>(Identifier.JWRIP, o -> o.getJwrip().orElse(null), Ss13pusb::setJwrip, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getJwtr()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> JWTR = new ComparableFieldImpl<>(Identifier.JWTR, o -> o.getJwtr().orElse(null), Ss13pusb::setJwtr, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getLanx()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> LANX = new ComparableFieldImpl<>(Identifier.LANX, o -> o.getLanx().orElse(null), Ss13pusb::setLanx, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getMar()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> MAR = new ComparableFieldImpl<>(Identifier.MAR, o -> o.getMar().orElse(null), Ss13pusb::setMar, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getMarhd()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> MARHD = new ComparableFieldImpl<>(Identifier.MARHD, o -> o.getMarhd().orElse(null), Ss13pusb::setMarhd, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getMarhm()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> MARHM = new ComparableFieldImpl<>(Identifier.MARHM, o -> o.getMarhm().orElse(null), Ss13pusb::setMarhm, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getMarht()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> MARHT = new ComparableFieldImpl<>(Identifier.MARHT, o -> o.getMarht().orElse(null), Ss13pusb::setMarht, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getMarhw()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> MARHW = new ComparableFieldImpl<>(Identifier.MARHW, o -> o.getMarhw().orElse(null), Ss13pusb::setMarhw, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getMarhyp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> MARHYP = new ComparableFieldImpl<>(Identifier.MARHYP, o -> o.getMarhyp().orElse(null), Ss13pusb::setMarhyp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getMig()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> MIG = new ComparableFieldImpl<>(Identifier.MIG, o -> o.getMig().orElse(null), Ss13pusb::setMig, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getMil()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> MIL = new ComparableFieldImpl<>(Identifier.MIL, o -> o.getMil().orElse(null), Ss13pusb::setMil, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getMlpa()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> MLPA = new ComparableFieldImpl<>(Identifier.MLPA, o -> o.getMlpa().orElse(null), Ss13pusb::setMlpa, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getMlpb()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> MLPB = new ComparableFieldImpl<>(Identifier.MLPB, o -> o.getMlpb().orElse(null), Ss13pusb::setMlpb, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getMlpcd()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> MLPCD = new ComparableFieldImpl<>(Identifier.MLPCD, o -> o.getMlpcd().orElse(null), Ss13pusb::setMlpcd, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getMlpe()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> MLPE = new ComparableFieldImpl<>(Identifier.MLPE, o -> o.getMlpe().orElse(null), Ss13pusb::setMlpe, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getMlpfg()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> MLPFG = new ComparableFieldImpl<>(Identifier.MLPFG, o -> o.getMlpfg().orElse(null), Ss13pusb::setMlpfg, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getMlph()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> MLPH = new ComparableFieldImpl<>(Identifier.MLPH, o -> o.getMlph().orElse(null), Ss13pusb::setMlph, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getMlpi()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> MLPI = new ComparableFieldImpl<>(Identifier.MLPI, o -> o.getMlpi().orElse(null), Ss13pusb::setMlpi, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getMlpj()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> MLPJ = new ComparableFieldImpl<>(Identifier.MLPJ, o -> o.getMlpj().orElse(null), Ss13pusb::setMlpj, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getMlpk()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> MLPK = new ComparableFieldImpl<>(Identifier.MLPK, o -> o.getMlpk().orElse(null), Ss13pusb::setMlpk, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getNwab()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> NWAB = new ComparableFieldImpl<>(Identifier.NWAB, o -> o.getNwab().orElse(null), Ss13pusb::setNwab, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getNwav()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> NWAV = new ComparableFieldImpl<>(Identifier.NWAV, o -> o.getNwav().orElse(null), Ss13pusb::setNwav, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getNwla()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> NWLA = new ComparableFieldImpl<>(Identifier.NWLA, o -> o.getNwla().orElse(null), Ss13pusb::setNwla, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getNwlk()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> NWLK = new ComparableFieldImpl<>(Identifier.NWLK, o -> o.getNwlk().orElse(null), Ss13pusb::setNwlk, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getNwre()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> NWRE = new ComparableFieldImpl<>(Identifier.NWRE, o -> o.getNwre().orElse(null), Ss13pusb::setNwre, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getOip()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> OIP = new ComparableFieldImpl<>(Identifier.OIP, o -> o.getOip().orElse(null), Ss13pusb::setOip, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getPap()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> PAP = new ComparableFieldImpl<>(Identifier.PAP, o -> o.getPap().orElse(null), Ss13pusb::setPap, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getRelp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> RELP = new ComparableFieldImpl<>(Identifier.RELP, o -> o.getRelp().orElse(null), Ss13pusb::setRelp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getRetp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> RETP = new ComparableFieldImpl<>(Identifier.RETP, o -> o.getRetp().orElse(null), Ss13pusb::setRetp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getSch()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> SCH = new ComparableFieldImpl<>(Identifier.SCH, o -> o.getSch().orElse(null), Ss13pusb::setSch, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getSchg()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> SCHG = new ComparableFieldImpl<>(Identifier.SCHG, o -> o.getSchg().orElse(null), Ss13pusb::setSchg, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getSchl()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> SCHL = new ComparableFieldImpl<>(Identifier.SCHL, o -> o.getSchl().orElse(null), Ss13pusb::setSchl, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getSemp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> SEMP = new ComparableFieldImpl<>(Identifier.SEMP, o -> o.getSemp().orElse(null), Ss13pusb::setSemp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getSex()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> SEX = new ComparableFieldImpl<>(Identifier.SEX, o -> o.getSex().orElse(null), Ss13pusb::setSex, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getSsip()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> SSIP = new ComparableFieldImpl<>(Identifier.SSIP, o -> o.getSsip().orElse(null), Ss13pusb::setSsip, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getSsp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> SSP = new ComparableFieldImpl<>(Identifier.SSP, o -> o.getSsp().orElse(null), Ss13pusb::setSsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getWagp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> WAGP = new ComparableFieldImpl<>(Identifier.WAGP, o -> o.getWagp().orElse(null), Ss13pusb::setWagp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getWkhp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> WKHP = new ComparableFieldImpl<>(Identifier.WKHP, o -> o.getWkhp().orElse(null), Ss13pusb::setWkhp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getWkl()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> WKL = new ComparableFieldImpl<>(Identifier.WKL, o -> o.getWkl().orElse(null), Ss13pusb::setWkl, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getWkw()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> WKW = new ComparableFieldImpl<>(Identifier.WKW, o -> o.getWkw().orElse(null), Ss13pusb::setWkw, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getWrk()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> WRK = new ComparableFieldImpl<>(Identifier.WRK, o -> o.getWrk().orElse(null), Ss13pusb::setWrk, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getYoep()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> YOEP = new ComparableFieldImpl<>(Identifier.YOEP, o -> o.getYoep().orElse(null), Ss13pusb::setYoep, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getAnc()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> ANC = new ComparableFieldImpl<>(Identifier.ANC, o -> o.getAnc().orElse(null), Ss13pusb::setAnc, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getAnc1P()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> ANC1_P = new ComparableFieldImpl<>(Identifier.ANC1_P, o -> o.getAnc1P().orElse(null), Ss13pusb::setAnc1P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getAnc2P()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> ANC2_P = new ComparableFieldImpl<>(Identifier.ANC2_P, o -> o.getAnc2P().orElse(null), Ss13pusb::setAnc2P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getDecade()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> DECADE = new ComparableFieldImpl<>(Identifier.DECADE, o -> o.getDecade().orElse(null), Ss13pusb::setDecade, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getDis()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> DIS = new ComparableFieldImpl<>(Identifier.DIS, o -> o.getDis().orElse(null), Ss13pusb::setDis, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getDrivesp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> DRIVESP = new ComparableFieldImpl<>(Identifier.DRIVESP, o -> o.getDrivesp().orElse(null), Ss13pusb::setDrivesp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getEsp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> ESP = new ComparableFieldImpl<>(Identifier.ESP, o -> o.getEsp().orElse(null), Ss13pusb::setEsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getEsr()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> ESR = new ComparableFieldImpl<>(Identifier.ESR, o -> o.getEsr().orElse(null), Ss13pusb::setEsr, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFod1P()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FOD1_P = new ComparableFieldImpl<>(Identifier.FOD1_P, o -> o.getFod1P().orElse(null), Ss13pusb::setFod1P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFod2P()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FOD2_P = new ComparableFieldImpl<>(Identifier.FOD2_P, o -> o.getFod2P().orElse(null), Ss13pusb::setFod2P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getHicov()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> HICOV = new ComparableFieldImpl<>(Identifier.HICOV, o -> o.getHicov().orElse(null), Ss13pusb::setHicov, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getHisp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> HISP = new ComparableFieldImpl<>(Identifier.HISP, o -> o.getHisp().orElse(null), Ss13pusb::setHisp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getIndp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> INDP = new ComparableFieldImpl<>(Identifier.INDP, o -> o.getIndp().orElse(null), Ss13pusb::setIndp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getJwap()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> JWAP = new ComparableFieldImpl<>(Identifier.JWAP, o -> o.getJwap().orElse(null), Ss13pusb::setJwap, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getJwdp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> JWDP = new ComparableFieldImpl<>(Identifier.JWDP, o -> o.getJwdp().orElse(null), Ss13pusb::setJwdp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getLanp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> LANP = new ComparableFieldImpl<>(Identifier.LANP, o -> o.getLanp().orElse(null), Ss13pusb::setLanp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getMigpuma()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> MIGPUMA = new ComparableFieldImpl<>(Identifier.MIGPUMA, o -> o.getMigpuma().orElse(null), Ss13pusb::setMigpuma, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getMigsp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> MIGSP = new ComparableFieldImpl<>(Identifier.MIGSP, o -> o.getMigsp().orElse(null), Ss13pusb::setMigsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getMsp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> MSP = new ComparableFieldImpl<>(Identifier.MSP, o -> o.getMsp().orElse(null), Ss13pusb::setMsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getNaicsp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> NAICSP = new ComparableFieldImpl<>(Identifier.NAICSP, o -> o.getNaicsp().orElse(null), Ss13pusb::setNaicsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getNativity()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> NATIVITY = new ComparableFieldImpl<>(Identifier.NATIVITY, o -> o.getNativity().orElse(null), Ss13pusb::setNativity, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getNop()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> NOP = new ComparableFieldImpl<>(Identifier.NOP, o -> o.getNop().orElse(null), Ss13pusb::setNop, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getOc()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> OC = new ComparableFieldImpl<>(Identifier.OC, o -> o.getOc().orElse(null), Ss13pusb::setOc, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getOccp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> OCCP = new ComparableFieldImpl<>(Identifier.OCCP, o -> o.getOccp().orElse(null), Ss13pusb::setOccp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getPaoc()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> PAOC = new ComparableFieldImpl<>(Identifier.PAOC, o -> o.getPaoc().orElse(null), Ss13pusb::setPaoc, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getPernp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> PERNP = new ComparableFieldImpl<>(Identifier.PERNP, o -> o.getPernp().orElse(null), Ss13pusb::setPernp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getPincp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> PINCP = new ComparableFieldImpl<>(Identifier.PINCP, o -> o.getPincp().orElse(null), Ss13pusb::setPincp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getPobp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> POBP = new ComparableFieldImpl<>(Identifier.POBP, o -> o.getPobp().orElse(null), Ss13pusb::setPobp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getPovpip()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> POVPIP = new ComparableFieldImpl<>(Identifier.POVPIP, o -> o.getPovpip().orElse(null), Ss13pusb::setPovpip, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getPowpuma()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> POWPUMA = new ComparableFieldImpl<>(Identifier.POWPUMA, o -> o.getPowpuma().orElse(null), Ss13pusb::setPowpuma, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getPowsp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> POWSP = new ComparableFieldImpl<>(Identifier.POWSP, o -> o.getPowsp().orElse(null), Ss13pusb::setPowsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getPrivcov()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> PRIVCOV = new ComparableFieldImpl<>(Identifier.PRIVCOV, o -> o.getPrivcov().orElse(null), Ss13pusb::setPrivcov, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getPubcov()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> PUBCOV = new ComparableFieldImpl<>(Identifier.PUBCOV, o -> o.getPubcov().orElse(null), Ss13pusb::setPubcov, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getQtrbir()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> QTRBIR = new ComparableFieldImpl<>(Identifier.QTRBIR, o -> o.getQtrbir().orElse(null), Ss13pusb::setQtrbir, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getRac1P()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> RAC1_P = new ComparableFieldImpl<>(Identifier.RAC1_P, o -> o.getRac1P().orElse(null), Ss13pusb::setRac1P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getRac2P()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> RAC2_P = new ComparableFieldImpl<>(Identifier.RAC2_P, o -> o.getRac2P().orElse(null), Ss13pusb::setRac2P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getRac3P()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> RAC3_P = new ComparableFieldImpl<>(Identifier.RAC3_P, o -> o.getRac3P().orElse(null), Ss13pusb::setRac3P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getRacaian()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> RACAIAN = new ComparableFieldImpl<>(Identifier.RACAIAN, o -> o.getRacaian().orElse(null), Ss13pusb::setRacaian, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getRacasn()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> RACASN = new ComparableFieldImpl<>(Identifier.RACASN, o -> o.getRacasn().orElse(null), Ss13pusb::setRacasn, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getRacblk()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> RACBLK = new ComparableFieldImpl<>(Identifier.RACBLK, o -> o.getRacblk().orElse(null), Ss13pusb::setRacblk, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getRacnh()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> RACNH = new ComparableFieldImpl<>(Identifier.RACNH, o -> o.getRacnh().orElse(null), Ss13pusb::setRacnh, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getRacnum()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> RACNUM = new ComparableFieldImpl<>(Identifier.RACNUM, o -> o.getRacnum().orElse(null), Ss13pusb::setRacnum, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getRacpi()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> RACPI = new ComparableFieldImpl<>(Identifier.RACPI, o -> o.getRacpi().orElse(null), Ss13pusb::setRacpi, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getRacsor()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> RACSOR = new ComparableFieldImpl<>(Identifier.RACSOR, o -> o.getRacsor().orElse(null), Ss13pusb::setRacsor, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getRacwht()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> RACWHT = new ComparableFieldImpl<>(Identifier.RACWHT, o -> o.getRacwht().orElse(null), Ss13pusb::setRacwht, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getRc()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> RC = new ComparableFieldImpl<>(Identifier.RC, o -> o.getRc().orElse(null), Ss13pusb::setRc, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getSciengp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> SCIENGP = new ComparableFieldImpl<>(Identifier.SCIENGP, o -> o.getSciengp().orElse(null), Ss13pusb::setSciengp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getSciengrlp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> SCIENGRLP = new ComparableFieldImpl<>(Identifier.SCIENGRLP, o -> o.getSciengrlp().orElse(null), Ss13pusb::setSciengrlp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getSfn()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> SFN = new ComparableFieldImpl<>(Identifier.SFN, o -> o.getSfn().orElse(null), Ss13pusb::setSfn, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getSfr()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> SFR = new ComparableFieldImpl<>(Identifier.SFR, o -> o.getSfr().orElse(null), Ss13pusb::setSfr, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getSocp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> SOCP = new ComparableFieldImpl<>(Identifier.SOCP, o -> o.getSocp().orElse(null), Ss13pusb::setSocp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getVps()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> VPS = new ComparableFieldImpl<>(Identifier.VPS, o -> o.getVps().orElse(null), Ss13pusb::setVps, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getWaob()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> WAOB = new ComparableFieldImpl<>(Identifier.WAOB, o -> o.getWaob().orElse(null), Ss13pusb::setWaob, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFagep()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FAGEP = new ComparableFieldImpl<>(Identifier.FAGEP, o -> o.getFagep().orElse(null), Ss13pusb::setFagep, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFancp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FANCP = new ComparableFieldImpl<>(Identifier.FANCP, o -> o.getFancp().orElse(null), Ss13pusb::setFancp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFcitp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FCITP = new ComparableFieldImpl<>(Identifier.FCITP, o -> o.getFcitp().orElse(null), Ss13pusb::setFcitp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFcitwp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FCITWP = new ComparableFieldImpl<>(Identifier.FCITWP, o -> o.getFcitwp().orElse(null), Ss13pusb::setFcitwp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFcowp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FCOWP = new ComparableFieldImpl<>(Identifier.FCOWP, o -> o.getFcowp().orElse(null), Ss13pusb::setFcowp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFddrsp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FDDRSP = new ComparableFieldImpl<>(Identifier.FDDRSP, o -> o.getFddrsp().orElse(null), Ss13pusb::setFddrsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFdearp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FDEARP = new ComparableFieldImpl<>(Identifier.FDEARP, o -> o.getFdearp().orElse(null), Ss13pusb::setFdearp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFdeyep()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FDEYEP = new ComparableFieldImpl<>(Identifier.FDEYEP, o -> o.getFdeyep().orElse(null), Ss13pusb::setFdeyep, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFdisp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FDISP = new ComparableFieldImpl<>(Identifier.FDISP, o -> o.getFdisp().orElse(null), Ss13pusb::setFdisp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFdoutp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FDOUTP = new ComparableFieldImpl<>(Identifier.FDOUTP, o -> o.getFdoutp().orElse(null), Ss13pusb::setFdoutp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFdphyp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FDPHYP = new ComparableFieldImpl<>(Identifier.FDPHYP, o -> o.getFdphyp().orElse(null), Ss13pusb::setFdphyp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFdratp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FDRATP = new ComparableFieldImpl<>(Identifier.FDRATP, o -> o.getFdratp().orElse(null), Ss13pusb::setFdratp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFdratxp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FDRATXP = new ComparableFieldImpl<>(Identifier.FDRATXP, o -> o.getFdratxp().orElse(null), Ss13pusb::setFdratxp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFdremp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FDREMP = new ComparableFieldImpl<>(Identifier.FDREMP, o -> o.getFdremp().orElse(null), Ss13pusb::setFdremp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFengp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FENGP = new ComparableFieldImpl<>(Identifier.FENGP, o -> o.getFengp().orElse(null), Ss13pusb::setFengp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFesrp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FESRP = new ComparableFieldImpl<>(Identifier.FESRP, o -> o.getFesrp().orElse(null), Ss13pusb::setFesrp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFferp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FFERP = new ComparableFieldImpl<>(Identifier.FFERP, o -> o.getFferp().orElse(null), Ss13pusb::setFferp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFfodp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FFODP = new ComparableFieldImpl<>(Identifier.FFODP, o -> o.getFfodp().orElse(null), Ss13pusb::setFfodp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFgclp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FGCLP = new ComparableFieldImpl<>(Identifier.FGCLP, o -> o.getFgclp().orElse(null), Ss13pusb::setFgclp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFgcmp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FGCMP = new ComparableFieldImpl<>(Identifier.FGCMP, o -> o.getFgcmp().orElse(null), Ss13pusb::setFgcmp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFgcrp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FGCRP = new ComparableFieldImpl<>(Identifier.FGCRP, o -> o.getFgcrp().orElse(null), Ss13pusb::setFgcrp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFhins1P()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FHINS1_P = new ComparableFieldImpl<>(Identifier.FHINS1_P, o -> o.getFhins1P().orElse(null), Ss13pusb::setFhins1P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFhins2P()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FHINS2_P = new ComparableFieldImpl<>(Identifier.FHINS2_P, o -> o.getFhins2P().orElse(null), Ss13pusb::setFhins2P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFhins3C()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FHINS3_C = new ComparableFieldImpl<>(Identifier.FHINS3_C, o -> o.getFhins3C().orElse(null), Ss13pusb::setFhins3C, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFhins3P()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FHINS3_P = new ComparableFieldImpl<>(Identifier.FHINS3_P, o -> o.getFhins3P().orElse(null), Ss13pusb::setFhins3P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFhins4C()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FHINS4_C = new ComparableFieldImpl<>(Identifier.FHINS4_C, o -> o.getFhins4C().orElse(null), Ss13pusb::setFhins4C, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFhins4P()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FHINS4_P = new ComparableFieldImpl<>(Identifier.FHINS4_P, o -> o.getFhins4P().orElse(null), Ss13pusb::setFhins4P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFhins5C()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FHINS5_C = new ComparableFieldImpl<>(Identifier.FHINS5_C, o -> o.getFhins5C().orElse(null), Ss13pusb::setFhins5C, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFhins5P()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FHINS5_P = new ComparableFieldImpl<>(Identifier.FHINS5_P, o -> o.getFhins5P().orElse(null), Ss13pusb::setFhins5P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFhins6P()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FHINS6_P = new ComparableFieldImpl<>(Identifier.FHINS6_P, o -> o.getFhins6P().orElse(null), Ss13pusb::setFhins6P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFhins7P()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FHINS7_P = new ComparableFieldImpl<>(Identifier.FHINS7_P, o -> o.getFhins7P().orElse(null), Ss13pusb::setFhins7P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFhisp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FHISP = new ComparableFieldImpl<>(Identifier.FHISP, o -> o.getFhisp().orElse(null), Ss13pusb::setFhisp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFindp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FINDP = new ComparableFieldImpl<>(Identifier.FINDP, o -> o.getFindp().orElse(null), Ss13pusb::setFindp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFintp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FINTP = new ComparableFieldImpl<>(Identifier.FINTP, o -> o.getFintp().orElse(null), Ss13pusb::setFintp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFjwdp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FJWDP = new ComparableFieldImpl<>(Identifier.FJWDP, o -> o.getFjwdp().orElse(null), Ss13pusb::setFjwdp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFjwmnp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FJWMNP = new ComparableFieldImpl<>(Identifier.FJWMNP, o -> o.getFjwmnp().orElse(null), Ss13pusb::setFjwmnp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFjwrip()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FJWRIP = new ComparableFieldImpl<>(Identifier.FJWRIP, o -> o.getFjwrip().orElse(null), Ss13pusb::setFjwrip, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFjwtrp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FJWTRP = new ComparableFieldImpl<>(Identifier.FJWTRP, o -> o.getFjwtrp().orElse(null), Ss13pusb::setFjwtrp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFlanp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FLANP = new ComparableFieldImpl<>(Identifier.FLANP, o -> o.getFlanp().orElse(null), Ss13pusb::setFlanp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFlanxp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FLANXP = new ComparableFieldImpl<>(Identifier.FLANXP, o -> o.getFlanxp().orElse(null), Ss13pusb::setFlanxp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFmarhdp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FMARHDP = new ComparableFieldImpl<>(Identifier.FMARHDP, o -> o.getFmarhdp().orElse(null), Ss13pusb::setFmarhdp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFmarhmp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FMARHMP = new ComparableFieldImpl<>(Identifier.FMARHMP, o -> o.getFmarhmp().orElse(null), Ss13pusb::setFmarhmp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFmarhtp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FMARHTP = new ComparableFieldImpl<>(Identifier.FMARHTP, o -> o.getFmarhtp().orElse(null), Ss13pusb::setFmarhtp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFmarhwp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FMARHWP = new ComparableFieldImpl<>(Identifier.FMARHWP, o -> o.getFmarhwp().orElse(null), Ss13pusb::setFmarhwp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFmarhyp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FMARHYP = new ComparableFieldImpl<>(Identifier.FMARHYP, o -> o.getFmarhyp().orElse(null), Ss13pusb::setFmarhyp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFmarp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FMARP = new ComparableFieldImpl<>(Identifier.FMARP, o -> o.getFmarp().orElse(null), Ss13pusb::setFmarp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFmigp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FMIGP = new ComparableFieldImpl<>(Identifier.FMIGP, o -> o.getFmigp().orElse(null), Ss13pusb::setFmigp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFmigsp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FMIGSP = new ComparableFieldImpl<>(Identifier.FMIGSP, o -> o.getFmigsp().orElse(null), Ss13pusb::setFmigsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFmilpp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FMILPP = new ComparableFieldImpl<>(Identifier.FMILPP, o -> o.getFmilpp().orElse(null), Ss13pusb::setFmilpp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFmilsp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FMILSP = new ComparableFieldImpl<>(Identifier.FMILSP, o -> o.getFmilsp().orElse(null), Ss13pusb::setFmilsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFoccp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FOCCP = new ComparableFieldImpl<>(Identifier.FOCCP, o -> o.getFoccp().orElse(null), Ss13pusb::setFoccp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFoip()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FOIP = new ComparableFieldImpl<>(Identifier.FOIP, o -> o.getFoip().orElse(null), Ss13pusb::setFoip, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFpap()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FPAP = new ComparableFieldImpl<>(Identifier.FPAP, o -> o.getFpap().orElse(null), Ss13pusb::setFpap, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFpernp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FPERNP = new ComparableFieldImpl<>(Identifier.FPERNP, o -> o.getFpernp().orElse(null), Ss13pusb::setFpernp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFpincp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FPINCP = new ComparableFieldImpl<>(Identifier.FPINCP, o -> o.getFpincp().orElse(null), Ss13pusb::setFpincp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFpobp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FPOBP = new ComparableFieldImpl<>(Identifier.FPOBP, o -> o.getFpobp().orElse(null), Ss13pusb::setFpobp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFpowsp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FPOWSP = new ComparableFieldImpl<>(Identifier.FPOWSP, o -> o.getFpowsp().orElse(null), Ss13pusb::setFpowsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFprivcovp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FPRIVCOVP = new ComparableFieldImpl<>(Identifier.FPRIVCOVP, o -> o.getFprivcovp().orElse(null), Ss13pusb::setFprivcovp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFpubcovp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FPUBCOVP = new ComparableFieldImpl<>(Identifier.FPUBCOVP, o -> o.getFpubcovp().orElse(null), Ss13pusb::setFpubcovp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFracp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FRACP = new ComparableFieldImpl<>(Identifier.FRACP, o -> o.getFracp().orElse(null), Ss13pusb::setFracp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFrelp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FRELP = new ComparableFieldImpl<>(Identifier.FRELP, o -> o.getFrelp().orElse(null), Ss13pusb::setFrelp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFretp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FRETP = new ComparableFieldImpl<>(Identifier.FRETP, o -> o.getFretp().orElse(null), Ss13pusb::setFretp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFschgp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FSCHGP = new ComparableFieldImpl<>(Identifier.FSCHGP, o -> o.getFschgp().orElse(null), Ss13pusb::setFschgp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFschlp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FSCHLP = new ComparableFieldImpl<>(Identifier.FSCHLP, o -> o.getFschlp().orElse(null), Ss13pusb::setFschlp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFschp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FSCHP = new ComparableFieldImpl<>(Identifier.FSCHP, o -> o.getFschp().orElse(null), Ss13pusb::setFschp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFsemp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FSEMP = new ComparableFieldImpl<>(Identifier.FSEMP, o -> o.getFsemp().orElse(null), Ss13pusb::setFsemp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFsexp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FSEXP = new ComparableFieldImpl<>(Identifier.FSEXP, o -> o.getFsexp().orElse(null), Ss13pusb::setFsexp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFssip()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FSSIP = new ComparableFieldImpl<>(Identifier.FSSIP, o -> o.getFssip().orElse(null), Ss13pusb::setFssip, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFssp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FSSP = new ComparableFieldImpl<>(Identifier.FSSP, o -> o.getFssp().orElse(null), Ss13pusb::setFssp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFwagp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FWAGP = new ComparableFieldImpl<>(Identifier.FWAGP, o -> o.getFwagp().orElse(null), Ss13pusb::setFwagp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFwkhp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FWKHP = new ComparableFieldImpl<>(Identifier.FWKHP, o -> o.getFwkhp().orElse(null), Ss13pusb::setFwkhp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFwklp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FWKLP = new ComparableFieldImpl<>(Identifier.FWKLP, o -> o.getFwklp().orElse(null), Ss13pusb::setFwklp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFwkwp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FWKWP = new ComparableFieldImpl<>(Identifier.FWKWP, o -> o.getFwkwp().orElse(null), Ss13pusb::setFwkwp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFwrkp()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FWRKP = new ComparableFieldImpl<>(Identifier.FWRKP, o -> o.getFwrkp().orElse(null), Ss13pusb::setFwrkp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusb} field that can be obtained
     * using the {@link Ss13pusb#getFyoep()} method.
     */
    final ComparableField<Ss13pusb, Integer, Integer> FYOEP = new ComparableFieldImpl<>(Identifier.FYOEP, o -> o.getFyoep().orElse(null), Ss13pusb::setFyoep, new IntegerIdentityMapper(), false);
    
    /**
     * Returns the rt of this Ss13pusb. The rt field corresponds to the database
     * column test.test.ss13pusb.RT.
     * 
     * @return the rt of this Ss13pusb
     */
    Optional<Integer> getRt();
    
    /**
     * Returns the serialno of this Ss13pusb. The serialno field corresponds to
     * the database column test.test.ss13pusb.SERIALNO.
     * 
     * @return the serialno of this Ss13pusb
     */
    Optional<Integer> getSerialno();
    
    /**
     * Returns the sporder of this Ss13pusb. The sporder field corresponds to the
     * database column test.test.ss13pusb.SPORDER.
     * 
     * @return the sporder of this Ss13pusb
     */
    Optional<Integer> getSporder();
    
    /**
     * Returns the puma of this Ss13pusb. The puma field corresponds to the
     * database column test.test.ss13pusb.PUMA.
     * 
     * @return the puma of this Ss13pusb
     */
    Optional<Integer> getPuma();
    
    /**
     * Returns the st of this Ss13pusb. The st field corresponds to the database
     * column test.test.ss13pusb.ST.
     * 
     * @return the st of this Ss13pusb
     */
    Optional<Integer> getSt();
    
    /**
     * Returns the adjinc of this Ss13pusb. The adjinc field corresponds to the
     * database column test.test.ss13pusb.ADJINC.
     * 
     * @return the adjinc of this Ss13pusb
     */
    Optional<Integer> getAdjinc();
    
    /**
     * Returns the pwgtp of this Ss13pusb. The pwgtp field corresponds to the
     * database column test.test.ss13pusb.PWGTP.
     * 
     * @return the pwgtp of this Ss13pusb
     */
    Optional<Integer> getPwgtp();
    
    /**
     * Returns the agep of this Ss13pusb. The agep field corresponds to the
     * database column test.test.ss13pusb.AGEP.
     * 
     * @return the agep of this Ss13pusb
     */
    Optional<Integer> getAgep();
    
    /**
     * Returns the cit of this Ss13pusb. The cit field corresponds to the
     * database column test.test.ss13pusb.CIT.
     * 
     * @return the cit of this Ss13pusb
     */
    Optional<Integer> getCit();
    
    /**
     * Returns the citwp of this Ss13pusb. The citwp field corresponds to the
     * database column test.test.ss13pusb.CITWP.
     * 
     * @return the citwp of this Ss13pusb
     */
    Optional<Integer> getCitwp();
    
    /**
     * Returns the cow of this Ss13pusb. The cow field corresponds to the
     * database column test.test.ss13pusb.COW.
     * 
     * @return the cow of this Ss13pusb
     */
    Optional<Integer> getCow();
    
    /**
     * Returns the ddrs of this Ss13pusb. The ddrs field corresponds to the
     * database column test.test.ss13pusb.DDRS.
     * 
     * @return the ddrs of this Ss13pusb
     */
    Optional<Integer> getDdrs();
    
    /**
     * Returns the dear of this Ss13pusb. The dear field corresponds to the
     * database column test.test.ss13pusb.DEAR.
     * 
     * @return the dear of this Ss13pusb
     */
    Optional<Integer> getDear();
    
    /**
     * Returns the deye of this Ss13pusb. The deye field corresponds to the
     * database column test.test.ss13pusb.DEYE.
     * 
     * @return the deye of this Ss13pusb
     */
    Optional<Integer> getDeye();
    
    /**
     * Returns the dout of this Ss13pusb. The dout field corresponds to the
     * database column test.test.ss13pusb.DOUT.
     * 
     * @return the dout of this Ss13pusb
     */
    Optional<Integer> getDout();
    
    /**
     * Returns the dphy of this Ss13pusb. The dphy field corresponds to the
     * database column test.test.ss13pusb.DPHY.
     * 
     * @return the dphy of this Ss13pusb
     */
    Optional<Integer> getDphy();
    
    /**
     * Returns the drat of this Ss13pusb. The drat field corresponds to the
     * database column test.test.ss13pusb.DRAT.
     * 
     * @return the drat of this Ss13pusb
     */
    Optional<Integer> getDrat();
    
    /**
     * Returns the dratx of this Ss13pusb. The dratx field corresponds to the
     * database column test.test.ss13pusb.DRATX.
     * 
     * @return the dratx of this Ss13pusb
     */
    Optional<Integer> getDratx();
    
    /**
     * Returns the drem of this Ss13pusb. The drem field corresponds to the
     * database column test.test.ss13pusb.DREM.
     * 
     * @return the drem of this Ss13pusb
     */
    Optional<Integer> getDrem();
    
    /**
     * Returns the eng of this Ss13pusb. The eng field corresponds to the
     * database column test.test.ss13pusb.ENG.
     * 
     * @return the eng of this Ss13pusb
     */
    Optional<Integer> getEng();
    
    /**
     * Returns the fer of this Ss13pusb. The fer field corresponds to the
     * database column test.test.ss13pusb.FER.
     * 
     * @return the fer of this Ss13pusb
     */
    Optional<Integer> getFer();
    
    /**
     * Returns the gcl of this Ss13pusb. The gcl field corresponds to the
     * database column test.test.ss13pusb.GCL.
     * 
     * @return the gcl of this Ss13pusb
     */
    Optional<Integer> getGcl();
    
    /**
     * Returns the gcm of this Ss13pusb. The gcm field corresponds to the
     * database column test.test.ss13pusb.GCM.
     * 
     * @return the gcm of this Ss13pusb
     */
    Optional<Integer> getGcm();
    
    /**
     * Returns the gcr of this Ss13pusb. The gcr field corresponds to the
     * database column test.test.ss13pusb.GCR.
     * 
     * @return the gcr of this Ss13pusb
     */
    Optional<Integer> getGcr();
    
    /**
     * Returns the hins1 of this Ss13pusb. The hins1 field corresponds to the
     * database column test.test.ss13pusb.HINS1.
     * 
     * @return the hins1 of this Ss13pusb
     */
    Optional<Integer> getHins1();
    
    /**
     * Returns the hins2 of this Ss13pusb. The hins2 field corresponds to the
     * database column test.test.ss13pusb.HINS2.
     * 
     * @return the hins2 of this Ss13pusb
     */
    Optional<Integer> getHins2();
    
    /**
     * Returns the hins3 of this Ss13pusb. The hins3 field corresponds to the
     * database column test.test.ss13pusb.HINS3.
     * 
     * @return the hins3 of this Ss13pusb
     */
    Optional<Integer> getHins3();
    
    /**
     * Returns the hins4 of this Ss13pusb. The hins4 field corresponds to the
     * database column test.test.ss13pusb.HINS4.
     * 
     * @return the hins4 of this Ss13pusb
     */
    Optional<Integer> getHins4();
    
    /**
     * Returns the hins5 of this Ss13pusb. The hins5 field corresponds to the
     * database column test.test.ss13pusb.HINS5.
     * 
     * @return the hins5 of this Ss13pusb
     */
    Optional<Integer> getHins5();
    
    /**
     * Returns the hins6 of this Ss13pusb. The hins6 field corresponds to the
     * database column test.test.ss13pusb.HINS6.
     * 
     * @return the hins6 of this Ss13pusb
     */
    Optional<Integer> getHins6();
    
    /**
     * Returns the hins7 of this Ss13pusb. The hins7 field corresponds to the
     * database column test.test.ss13pusb.HINS7.
     * 
     * @return the hins7 of this Ss13pusb
     */
    Optional<Integer> getHins7();
    
    /**
     * Returns the intp of this Ss13pusb. The intp field corresponds to the
     * database column test.test.ss13pusb.INTP.
     * 
     * @return the intp of this Ss13pusb
     */
    Optional<Integer> getIntp();
    
    /**
     * Returns the jwmnp of this Ss13pusb. The jwmnp field corresponds to the
     * database column test.test.ss13pusb.JWMNP.
     * 
     * @return the jwmnp of this Ss13pusb
     */
    Optional<Integer> getJwmnp();
    
    /**
     * Returns the jwrip of this Ss13pusb. The jwrip field corresponds to the
     * database column test.test.ss13pusb.JWRIP.
     * 
     * @return the jwrip of this Ss13pusb
     */
    Optional<Integer> getJwrip();
    
    /**
     * Returns the jwtr of this Ss13pusb. The jwtr field corresponds to the
     * database column test.test.ss13pusb.JWTR.
     * 
     * @return the jwtr of this Ss13pusb
     */
    Optional<Integer> getJwtr();
    
    /**
     * Returns the lanx of this Ss13pusb. The lanx field corresponds to the
     * database column test.test.ss13pusb.LANX.
     * 
     * @return the lanx of this Ss13pusb
     */
    Optional<Integer> getLanx();
    
    /**
     * Returns the mar of this Ss13pusb. The mar field corresponds to the
     * database column test.test.ss13pusb.MAR.
     * 
     * @return the mar of this Ss13pusb
     */
    Optional<Integer> getMar();
    
    /**
     * Returns the marhd of this Ss13pusb. The marhd field corresponds to the
     * database column test.test.ss13pusb.MARHD.
     * 
     * @return the marhd of this Ss13pusb
     */
    Optional<Integer> getMarhd();
    
    /**
     * Returns the marhm of this Ss13pusb. The marhm field corresponds to the
     * database column test.test.ss13pusb.MARHM.
     * 
     * @return the marhm of this Ss13pusb
     */
    Optional<Integer> getMarhm();
    
    /**
     * Returns the marht of this Ss13pusb. The marht field corresponds to the
     * database column test.test.ss13pusb.MARHT.
     * 
     * @return the marht of this Ss13pusb
     */
    Optional<Integer> getMarht();
    
    /**
     * Returns the marhw of this Ss13pusb. The marhw field corresponds to the
     * database column test.test.ss13pusb.MARHW.
     * 
     * @return the marhw of this Ss13pusb
     */
    Optional<Integer> getMarhw();
    
    /**
     * Returns the marhyp of this Ss13pusb. The marhyp field corresponds to the
     * database column test.test.ss13pusb.MARHYP.
     * 
     * @return the marhyp of this Ss13pusb
     */
    Optional<Integer> getMarhyp();
    
    /**
     * Returns the mig of this Ss13pusb. The mig field corresponds to the
     * database column test.test.ss13pusb.MIG.
     * 
     * @return the mig of this Ss13pusb
     */
    Optional<Integer> getMig();
    
    /**
     * Returns the mil of this Ss13pusb. The mil field corresponds to the
     * database column test.test.ss13pusb.MIL.
     * 
     * @return the mil of this Ss13pusb
     */
    Optional<Integer> getMil();
    
    /**
     * Returns the mlpa of this Ss13pusb. The mlpa field corresponds to the
     * database column test.test.ss13pusb.MLPA.
     * 
     * @return the mlpa of this Ss13pusb
     */
    Optional<Integer> getMlpa();
    
    /**
     * Returns the mlpb of this Ss13pusb. The mlpb field corresponds to the
     * database column test.test.ss13pusb.MLPB.
     * 
     * @return the mlpb of this Ss13pusb
     */
    Optional<Integer> getMlpb();
    
    /**
     * Returns the mlpcd of this Ss13pusb. The mlpcd field corresponds to the
     * database column test.test.ss13pusb.MLPCD.
     * 
     * @return the mlpcd of this Ss13pusb
     */
    Optional<Integer> getMlpcd();
    
    /**
     * Returns the mlpe of this Ss13pusb. The mlpe field corresponds to the
     * database column test.test.ss13pusb.MLPE.
     * 
     * @return the mlpe of this Ss13pusb
     */
    Optional<Integer> getMlpe();
    
    /**
     * Returns the mlpfg of this Ss13pusb. The mlpfg field corresponds to the
     * database column test.test.ss13pusb.MLPFG.
     * 
     * @return the mlpfg of this Ss13pusb
     */
    Optional<Integer> getMlpfg();
    
    /**
     * Returns the mlph of this Ss13pusb. The mlph field corresponds to the
     * database column test.test.ss13pusb.MLPH.
     * 
     * @return the mlph of this Ss13pusb
     */
    Optional<Integer> getMlph();
    
    /**
     * Returns the mlpi of this Ss13pusb. The mlpi field corresponds to the
     * database column test.test.ss13pusb.MLPI.
     * 
     * @return the mlpi of this Ss13pusb
     */
    Optional<Integer> getMlpi();
    
    /**
     * Returns the mlpj of this Ss13pusb. The mlpj field corresponds to the
     * database column test.test.ss13pusb.MLPJ.
     * 
     * @return the mlpj of this Ss13pusb
     */
    Optional<Integer> getMlpj();
    
    /**
     * Returns the mlpk of this Ss13pusb. The mlpk field corresponds to the
     * database column test.test.ss13pusb.MLPK.
     * 
     * @return the mlpk of this Ss13pusb
     */
    Optional<Integer> getMlpk();
    
    /**
     * Returns the nwab of this Ss13pusb. The nwab field corresponds to the
     * database column test.test.ss13pusb.NWAB.
     * 
     * @return the nwab of this Ss13pusb
     */
    Optional<Integer> getNwab();
    
    /**
     * Returns the nwav of this Ss13pusb. The nwav field corresponds to the
     * database column test.test.ss13pusb.NWAV.
     * 
     * @return the nwav of this Ss13pusb
     */
    Optional<Integer> getNwav();
    
    /**
     * Returns the nwla of this Ss13pusb. The nwla field corresponds to the
     * database column test.test.ss13pusb.NWLA.
     * 
     * @return the nwla of this Ss13pusb
     */
    Optional<Integer> getNwla();
    
    /**
     * Returns the nwlk of this Ss13pusb. The nwlk field corresponds to the
     * database column test.test.ss13pusb.NWLK.
     * 
     * @return the nwlk of this Ss13pusb
     */
    Optional<Integer> getNwlk();
    
    /**
     * Returns the nwre of this Ss13pusb. The nwre field corresponds to the
     * database column test.test.ss13pusb.NWRE.
     * 
     * @return the nwre of this Ss13pusb
     */
    Optional<Integer> getNwre();
    
    /**
     * Returns the oip of this Ss13pusb. The oip field corresponds to the
     * database column test.test.ss13pusb.OIP.
     * 
     * @return the oip of this Ss13pusb
     */
    Optional<Integer> getOip();
    
    /**
     * Returns the pap of this Ss13pusb. The pap field corresponds to the
     * database column test.test.ss13pusb.PAP.
     * 
     * @return the pap of this Ss13pusb
     */
    Optional<Integer> getPap();
    
    /**
     * Returns the relp of this Ss13pusb. The relp field corresponds to the
     * database column test.test.ss13pusb.RELP.
     * 
     * @return the relp of this Ss13pusb
     */
    Optional<Integer> getRelp();
    
    /**
     * Returns the retp of this Ss13pusb. The retp field corresponds to the
     * database column test.test.ss13pusb.RETP.
     * 
     * @return the retp of this Ss13pusb
     */
    Optional<Integer> getRetp();
    
    /**
     * Returns the sch of this Ss13pusb. The sch field corresponds to the
     * database column test.test.ss13pusb.SCH.
     * 
     * @return the sch of this Ss13pusb
     */
    Optional<Integer> getSch();
    
    /**
     * Returns the schg of this Ss13pusb. The schg field corresponds to the
     * database column test.test.ss13pusb.SCHG.
     * 
     * @return the schg of this Ss13pusb
     */
    Optional<Integer> getSchg();
    
    /**
     * Returns the schl of this Ss13pusb. The schl field corresponds to the
     * database column test.test.ss13pusb.SCHL.
     * 
     * @return the schl of this Ss13pusb
     */
    Optional<Integer> getSchl();
    
    /**
     * Returns the semp of this Ss13pusb. The semp field corresponds to the
     * database column test.test.ss13pusb.SEMP.
     * 
     * @return the semp of this Ss13pusb
     */
    Optional<Integer> getSemp();
    
    /**
     * Returns the sex of this Ss13pusb. The sex field corresponds to the
     * database column test.test.ss13pusb.SEX.
     * 
     * @return the sex of this Ss13pusb
     */
    Optional<Integer> getSex();
    
    /**
     * Returns the ssip of this Ss13pusb. The ssip field corresponds to the
     * database column test.test.ss13pusb.SSIP.
     * 
     * @return the ssip of this Ss13pusb
     */
    Optional<Integer> getSsip();
    
    /**
     * Returns the ssp of this Ss13pusb. The ssp field corresponds to the
     * database column test.test.ss13pusb.SSP.
     * 
     * @return the ssp of this Ss13pusb
     */
    Optional<Integer> getSsp();
    
    /**
     * Returns the wagp of this Ss13pusb. The wagp field corresponds to the
     * database column test.test.ss13pusb.WAGP.
     * 
     * @return the wagp of this Ss13pusb
     */
    Optional<Integer> getWagp();
    
    /**
     * Returns the wkhp of this Ss13pusb. The wkhp field corresponds to the
     * database column test.test.ss13pusb.WKHP.
     * 
     * @return the wkhp of this Ss13pusb
     */
    Optional<Integer> getWkhp();
    
    /**
     * Returns the wkl of this Ss13pusb. The wkl field corresponds to the
     * database column test.test.ss13pusb.WKL.
     * 
     * @return the wkl of this Ss13pusb
     */
    Optional<Integer> getWkl();
    
    /**
     * Returns the wkw of this Ss13pusb. The wkw field corresponds to the
     * database column test.test.ss13pusb.WKW.
     * 
     * @return the wkw of this Ss13pusb
     */
    Optional<Integer> getWkw();
    
    /**
     * Returns the wrk of this Ss13pusb. The wrk field corresponds to the
     * database column test.test.ss13pusb.WRK.
     * 
     * @return the wrk of this Ss13pusb
     */
    Optional<Integer> getWrk();
    
    /**
     * Returns the yoep of this Ss13pusb. The yoep field corresponds to the
     * database column test.test.ss13pusb.YOEP.
     * 
     * @return the yoep of this Ss13pusb
     */
    Optional<Integer> getYoep();
    
    /**
     * Returns the anc of this Ss13pusb. The anc field corresponds to the
     * database column test.test.ss13pusb.ANC.
     * 
     * @return the anc of this Ss13pusb
     */
    Optional<Integer> getAnc();
    
    /**
     * Returns the anc1P of this Ss13pusb. The anc1P field corresponds to the
     * database column test.test.ss13pusb.ANC1P.
     * 
     * @return the anc1P of this Ss13pusb
     */
    Optional<Integer> getAnc1P();
    
    /**
     * Returns the anc2P of this Ss13pusb. The anc2P field corresponds to the
     * database column test.test.ss13pusb.ANC2P.
     * 
     * @return the anc2P of this Ss13pusb
     */
    Optional<Integer> getAnc2P();
    
    /**
     * Returns the decade of this Ss13pusb. The decade field corresponds to the
     * database column test.test.ss13pusb.DECADE.
     * 
     * @return the decade of this Ss13pusb
     */
    Optional<Integer> getDecade();
    
    /**
     * Returns the dis of this Ss13pusb. The dis field corresponds to the
     * database column test.test.ss13pusb.DIS.
     * 
     * @return the dis of this Ss13pusb
     */
    Optional<Integer> getDis();
    
    /**
     * Returns the drivesp of this Ss13pusb. The drivesp field corresponds to the
     * database column test.test.ss13pusb.DRIVESP.
     * 
     * @return the drivesp of this Ss13pusb
     */
    Optional<Integer> getDrivesp();
    
    /**
     * Returns the esp of this Ss13pusb. The esp field corresponds to the
     * database column test.test.ss13pusb.ESP.
     * 
     * @return the esp of this Ss13pusb
     */
    Optional<Integer> getEsp();
    
    /**
     * Returns the esr of this Ss13pusb. The esr field corresponds to the
     * database column test.test.ss13pusb.ESR.
     * 
     * @return the esr of this Ss13pusb
     */
    Optional<Integer> getEsr();
    
    /**
     * Returns the fod1P of this Ss13pusb. The fod1P field corresponds to the
     * database column test.test.ss13pusb.FOD1P.
     * 
     * @return the fod1P of this Ss13pusb
     */
    Optional<Integer> getFod1P();
    
    /**
     * Returns the fod2P of this Ss13pusb. The fod2P field corresponds to the
     * database column test.test.ss13pusb.FOD2P.
     * 
     * @return the fod2P of this Ss13pusb
     */
    Optional<Integer> getFod2P();
    
    /**
     * Returns the hicov of this Ss13pusb. The hicov field corresponds to the
     * database column test.test.ss13pusb.HICOV.
     * 
     * @return the hicov of this Ss13pusb
     */
    Optional<Integer> getHicov();
    
    /**
     * Returns the hisp of this Ss13pusb. The hisp field corresponds to the
     * database column test.test.ss13pusb.HISP.
     * 
     * @return the hisp of this Ss13pusb
     */
    Optional<Integer> getHisp();
    
    /**
     * Returns the indp of this Ss13pusb. The indp field corresponds to the
     * database column test.test.ss13pusb.INDP.
     * 
     * @return the indp of this Ss13pusb
     */
    Optional<Integer> getIndp();
    
    /**
     * Returns the jwap of this Ss13pusb. The jwap field corresponds to the
     * database column test.test.ss13pusb.JWAP.
     * 
     * @return the jwap of this Ss13pusb
     */
    Optional<Integer> getJwap();
    
    /**
     * Returns the jwdp of this Ss13pusb. The jwdp field corresponds to the
     * database column test.test.ss13pusb.JWDP.
     * 
     * @return the jwdp of this Ss13pusb
     */
    Optional<Integer> getJwdp();
    
    /**
     * Returns the lanp of this Ss13pusb. The lanp field corresponds to the
     * database column test.test.ss13pusb.LANP.
     * 
     * @return the lanp of this Ss13pusb
     */
    Optional<Integer> getLanp();
    
    /**
     * Returns the migpuma of this Ss13pusb. The migpuma field corresponds to the
     * database column test.test.ss13pusb.MIGPUMA.
     * 
     * @return the migpuma of this Ss13pusb
     */
    Optional<Integer> getMigpuma();
    
    /**
     * Returns the migsp of this Ss13pusb. The migsp field corresponds to the
     * database column test.test.ss13pusb.MIGSP.
     * 
     * @return the migsp of this Ss13pusb
     */
    Optional<Integer> getMigsp();
    
    /**
     * Returns the msp of this Ss13pusb. The msp field corresponds to the
     * database column test.test.ss13pusb.MSP.
     * 
     * @return the msp of this Ss13pusb
     */
    Optional<Integer> getMsp();
    
    /**
     * Returns the naicsp of this Ss13pusb. The naicsp field corresponds to the
     * database column test.test.ss13pusb.NAICSP.
     * 
     * @return the naicsp of this Ss13pusb
     */
    Optional<Integer> getNaicsp();
    
    /**
     * Returns the nativity of this Ss13pusb. The nativity field corresponds to
     * the database column test.test.ss13pusb.NATIVITY.
     * 
     * @return the nativity of this Ss13pusb
     */
    Optional<Integer> getNativity();
    
    /**
     * Returns the nop of this Ss13pusb. The nop field corresponds to the
     * database column test.test.ss13pusb.NOP.
     * 
     * @return the nop of this Ss13pusb
     */
    Optional<Integer> getNop();
    
    /**
     * Returns the oc of this Ss13pusb. The oc field corresponds to the database
     * column test.test.ss13pusb.OC.
     * 
     * @return the oc of this Ss13pusb
     */
    Optional<Integer> getOc();
    
    /**
     * Returns the occp of this Ss13pusb. The occp field corresponds to the
     * database column test.test.ss13pusb.OCCP.
     * 
     * @return the occp of this Ss13pusb
     */
    Optional<Integer> getOccp();
    
    /**
     * Returns the paoc of this Ss13pusb. The paoc field corresponds to the
     * database column test.test.ss13pusb.PAOC.
     * 
     * @return the paoc of this Ss13pusb
     */
    Optional<Integer> getPaoc();
    
    /**
     * Returns the pernp of this Ss13pusb. The pernp field corresponds to the
     * database column test.test.ss13pusb.PERNP.
     * 
     * @return the pernp of this Ss13pusb
     */
    Optional<Integer> getPernp();
    
    /**
     * Returns the pincp of this Ss13pusb. The pincp field corresponds to the
     * database column test.test.ss13pusb.PINCP.
     * 
     * @return the pincp of this Ss13pusb
     */
    Optional<Integer> getPincp();
    
    /**
     * Returns the pobp of this Ss13pusb. The pobp field corresponds to the
     * database column test.test.ss13pusb.POBP.
     * 
     * @return the pobp of this Ss13pusb
     */
    Optional<Integer> getPobp();
    
    /**
     * Returns the povpip of this Ss13pusb. The povpip field corresponds to the
     * database column test.test.ss13pusb.POVPIP.
     * 
     * @return the povpip of this Ss13pusb
     */
    Optional<Integer> getPovpip();
    
    /**
     * Returns the powpuma of this Ss13pusb. The powpuma field corresponds to the
     * database column test.test.ss13pusb.POWPUMA.
     * 
     * @return the powpuma of this Ss13pusb
     */
    Optional<Integer> getPowpuma();
    
    /**
     * Returns the powsp of this Ss13pusb. The powsp field corresponds to the
     * database column test.test.ss13pusb.POWSP.
     * 
     * @return the powsp of this Ss13pusb
     */
    Optional<Integer> getPowsp();
    
    /**
     * Returns the privcov of this Ss13pusb. The privcov field corresponds to the
     * database column test.test.ss13pusb.PRIVCOV.
     * 
     * @return the privcov of this Ss13pusb
     */
    Optional<Integer> getPrivcov();
    
    /**
     * Returns the pubcov of this Ss13pusb. The pubcov field corresponds to the
     * database column test.test.ss13pusb.PUBCOV.
     * 
     * @return the pubcov of this Ss13pusb
     */
    Optional<Integer> getPubcov();
    
    /**
     * Returns the qtrbir of this Ss13pusb. The qtrbir field corresponds to the
     * database column test.test.ss13pusb.QTRBIR.
     * 
     * @return the qtrbir of this Ss13pusb
     */
    Optional<Integer> getQtrbir();
    
    /**
     * Returns the rac1P of this Ss13pusb. The rac1P field corresponds to the
     * database column test.test.ss13pusb.RAC1P.
     * 
     * @return the rac1P of this Ss13pusb
     */
    Optional<Integer> getRac1P();
    
    /**
     * Returns the rac2P of this Ss13pusb. The rac2P field corresponds to the
     * database column test.test.ss13pusb.RAC2P.
     * 
     * @return the rac2P of this Ss13pusb
     */
    Optional<Integer> getRac2P();
    
    /**
     * Returns the rac3P of this Ss13pusb. The rac3P field corresponds to the
     * database column test.test.ss13pusb.RAC3P.
     * 
     * @return the rac3P of this Ss13pusb
     */
    Optional<Integer> getRac3P();
    
    /**
     * Returns the racaian of this Ss13pusb. The racaian field corresponds to the
     * database column test.test.ss13pusb.RACAIAN.
     * 
     * @return the racaian of this Ss13pusb
     */
    Optional<Integer> getRacaian();
    
    /**
     * Returns the racasn of this Ss13pusb. The racasn field corresponds to the
     * database column test.test.ss13pusb.RACASN.
     * 
     * @return the racasn of this Ss13pusb
     */
    Optional<Integer> getRacasn();
    
    /**
     * Returns the racblk of this Ss13pusb. The racblk field corresponds to the
     * database column test.test.ss13pusb.RACBLK.
     * 
     * @return the racblk of this Ss13pusb
     */
    Optional<Integer> getRacblk();
    
    /**
     * Returns the racnh of this Ss13pusb. The racnh field corresponds to the
     * database column test.test.ss13pusb.RACNH.
     * 
     * @return the racnh of this Ss13pusb
     */
    Optional<Integer> getRacnh();
    
    /**
     * Returns the racnum of this Ss13pusb. The racnum field corresponds to the
     * database column test.test.ss13pusb.RACNUM.
     * 
     * @return the racnum of this Ss13pusb
     */
    Optional<Integer> getRacnum();
    
    /**
     * Returns the racpi of this Ss13pusb. The racpi field corresponds to the
     * database column test.test.ss13pusb.RACPI.
     * 
     * @return the racpi of this Ss13pusb
     */
    Optional<Integer> getRacpi();
    
    /**
     * Returns the racsor of this Ss13pusb. The racsor field corresponds to the
     * database column test.test.ss13pusb.RACSOR.
     * 
     * @return the racsor of this Ss13pusb
     */
    Optional<Integer> getRacsor();
    
    /**
     * Returns the racwht of this Ss13pusb. The racwht field corresponds to the
     * database column test.test.ss13pusb.RACWHT.
     * 
     * @return the racwht of this Ss13pusb
     */
    Optional<Integer> getRacwht();
    
    /**
     * Returns the rc of this Ss13pusb. The rc field corresponds to the database
     * column test.test.ss13pusb.RC.
     * 
     * @return the rc of this Ss13pusb
     */
    Optional<Integer> getRc();
    
    /**
     * Returns the sciengp of this Ss13pusb. The sciengp field corresponds to the
     * database column test.test.ss13pusb.SCIENGP.
     * 
     * @return the sciengp of this Ss13pusb
     */
    Optional<Integer> getSciengp();
    
    /**
     * Returns the sciengrlp of this Ss13pusb. The sciengrlp field corresponds to
     * the database column test.test.ss13pusb.SCIENGRLP.
     * 
     * @return the sciengrlp of this Ss13pusb
     */
    Optional<Integer> getSciengrlp();
    
    /**
     * Returns the sfn of this Ss13pusb. The sfn field corresponds to the
     * database column test.test.ss13pusb.SFN.
     * 
     * @return the sfn of this Ss13pusb
     */
    Optional<Integer> getSfn();
    
    /**
     * Returns the sfr of this Ss13pusb. The sfr field corresponds to the
     * database column test.test.ss13pusb.SFR.
     * 
     * @return the sfr of this Ss13pusb
     */
    Optional<Integer> getSfr();
    
    /**
     * Returns the socp of this Ss13pusb. The socp field corresponds to the
     * database column test.test.ss13pusb.SOCP.
     * 
     * @return the socp of this Ss13pusb
     */
    Optional<Integer> getSocp();
    
    /**
     * Returns the vps of this Ss13pusb. The vps field corresponds to the
     * database column test.test.ss13pusb.VPS.
     * 
     * @return the vps of this Ss13pusb
     */
    Optional<Integer> getVps();
    
    /**
     * Returns the waob of this Ss13pusb. The waob field corresponds to the
     * database column test.test.ss13pusb.WAOB.
     * 
     * @return the waob of this Ss13pusb
     */
    Optional<Integer> getWaob();
    
    /**
     * Returns the fagep of this Ss13pusb. The fagep field corresponds to the
     * database column test.test.ss13pusb.FAGEP.
     * 
     * @return the fagep of this Ss13pusb
     */
    Optional<Integer> getFagep();
    
    /**
     * Returns the fancp of this Ss13pusb. The fancp field corresponds to the
     * database column test.test.ss13pusb.FANCP.
     * 
     * @return the fancp of this Ss13pusb
     */
    Optional<Integer> getFancp();
    
    /**
     * Returns the fcitp of this Ss13pusb. The fcitp field corresponds to the
     * database column test.test.ss13pusb.FCITP.
     * 
     * @return the fcitp of this Ss13pusb
     */
    Optional<Integer> getFcitp();
    
    /**
     * Returns the fcitwp of this Ss13pusb. The fcitwp field corresponds to the
     * database column test.test.ss13pusb.FCITWP.
     * 
     * @return the fcitwp of this Ss13pusb
     */
    Optional<Integer> getFcitwp();
    
    /**
     * Returns the fcowp of this Ss13pusb. The fcowp field corresponds to the
     * database column test.test.ss13pusb.FCOWP.
     * 
     * @return the fcowp of this Ss13pusb
     */
    Optional<Integer> getFcowp();
    
    /**
     * Returns the fddrsp of this Ss13pusb. The fddrsp field corresponds to the
     * database column test.test.ss13pusb.FDDRSP.
     * 
     * @return the fddrsp of this Ss13pusb
     */
    Optional<Integer> getFddrsp();
    
    /**
     * Returns the fdearp of this Ss13pusb. The fdearp field corresponds to the
     * database column test.test.ss13pusb.FDEARP.
     * 
     * @return the fdearp of this Ss13pusb
     */
    Optional<Integer> getFdearp();
    
    /**
     * Returns the fdeyep of this Ss13pusb. The fdeyep field corresponds to the
     * database column test.test.ss13pusb.FDEYEP.
     * 
     * @return the fdeyep of this Ss13pusb
     */
    Optional<Integer> getFdeyep();
    
    /**
     * Returns the fdisp of this Ss13pusb. The fdisp field corresponds to the
     * database column test.test.ss13pusb.FDISP.
     * 
     * @return the fdisp of this Ss13pusb
     */
    Optional<Integer> getFdisp();
    
    /**
     * Returns the fdoutp of this Ss13pusb. The fdoutp field corresponds to the
     * database column test.test.ss13pusb.FDOUTP.
     * 
     * @return the fdoutp of this Ss13pusb
     */
    Optional<Integer> getFdoutp();
    
    /**
     * Returns the fdphyp of this Ss13pusb. The fdphyp field corresponds to the
     * database column test.test.ss13pusb.FDPHYP.
     * 
     * @return the fdphyp of this Ss13pusb
     */
    Optional<Integer> getFdphyp();
    
    /**
     * Returns the fdratp of this Ss13pusb. The fdratp field corresponds to the
     * database column test.test.ss13pusb.FDRATP.
     * 
     * @return the fdratp of this Ss13pusb
     */
    Optional<Integer> getFdratp();
    
    /**
     * Returns the fdratxp of this Ss13pusb. The fdratxp field corresponds to the
     * database column test.test.ss13pusb.FDRATXP.
     * 
     * @return the fdratxp of this Ss13pusb
     */
    Optional<Integer> getFdratxp();
    
    /**
     * Returns the fdremp of this Ss13pusb. The fdremp field corresponds to the
     * database column test.test.ss13pusb.FDREMP.
     * 
     * @return the fdremp of this Ss13pusb
     */
    Optional<Integer> getFdremp();
    
    /**
     * Returns the fengp of this Ss13pusb. The fengp field corresponds to the
     * database column test.test.ss13pusb.FENGP.
     * 
     * @return the fengp of this Ss13pusb
     */
    Optional<Integer> getFengp();
    
    /**
     * Returns the fesrp of this Ss13pusb. The fesrp field corresponds to the
     * database column test.test.ss13pusb.FESRP.
     * 
     * @return the fesrp of this Ss13pusb
     */
    Optional<Integer> getFesrp();
    
    /**
     * Returns the fferp of this Ss13pusb. The fferp field corresponds to the
     * database column test.test.ss13pusb.FFERP.
     * 
     * @return the fferp of this Ss13pusb
     */
    Optional<Integer> getFferp();
    
    /**
     * Returns the ffodp of this Ss13pusb. The ffodp field corresponds to the
     * database column test.test.ss13pusb.FFODP.
     * 
     * @return the ffodp of this Ss13pusb
     */
    Optional<Integer> getFfodp();
    
    /**
     * Returns the fgclp of this Ss13pusb. The fgclp field corresponds to the
     * database column test.test.ss13pusb.FGCLP.
     * 
     * @return the fgclp of this Ss13pusb
     */
    Optional<Integer> getFgclp();
    
    /**
     * Returns the fgcmp of this Ss13pusb. The fgcmp field corresponds to the
     * database column test.test.ss13pusb.FGCMP.
     * 
     * @return the fgcmp of this Ss13pusb
     */
    Optional<Integer> getFgcmp();
    
    /**
     * Returns the fgcrp of this Ss13pusb. The fgcrp field corresponds to the
     * database column test.test.ss13pusb.FGCRP.
     * 
     * @return the fgcrp of this Ss13pusb
     */
    Optional<Integer> getFgcrp();
    
    /**
     * Returns the fhins1P of this Ss13pusb. The fhins1P field corresponds to the
     * database column test.test.ss13pusb.FHINS1P.
     * 
     * @return the fhins1P of this Ss13pusb
     */
    Optional<Integer> getFhins1P();
    
    /**
     * Returns the fhins2P of this Ss13pusb. The fhins2P field corresponds to the
     * database column test.test.ss13pusb.FHINS2P.
     * 
     * @return the fhins2P of this Ss13pusb
     */
    Optional<Integer> getFhins2P();
    
    /**
     * Returns the fhins3C of this Ss13pusb. The fhins3C field corresponds to the
     * database column test.test.ss13pusb.FHINS3C.
     * 
     * @return the fhins3C of this Ss13pusb
     */
    Optional<Integer> getFhins3C();
    
    /**
     * Returns the fhins3P of this Ss13pusb. The fhins3P field corresponds to the
     * database column test.test.ss13pusb.FHINS3P.
     * 
     * @return the fhins3P of this Ss13pusb
     */
    Optional<Integer> getFhins3P();
    
    /**
     * Returns the fhins4C of this Ss13pusb. The fhins4C field corresponds to the
     * database column test.test.ss13pusb.FHINS4C.
     * 
     * @return the fhins4C of this Ss13pusb
     */
    Optional<Integer> getFhins4C();
    
    /**
     * Returns the fhins4P of this Ss13pusb. The fhins4P field corresponds to the
     * database column test.test.ss13pusb.FHINS4P.
     * 
     * @return the fhins4P of this Ss13pusb
     */
    Optional<Integer> getFhins4P();
    
    /**
     * Returns the fhins5C of this Ss13pusb. The fhins5C field corresponds to the
     * database column test.test.ss13pusb.FHINS5C.
     * 
     * @return the fhins5C of this Ss13pusb
     */
    Optional<Integer> getFhins5C();
    
    /**
     * Returns the fhins5P of this Ss13pusb. The fhins5P field corresponds to the
     * database column test.test.ss13pusb.FHINS5P.
     * 
     * @return the fhins5P of this Ss13pusb
     */
    Optional<Integer> getFhins5P();
    
    /**
     * Returns the fhins6P of this Ss13pusb. The fhins6P field corresponds to the
     * database column test.test.ss13pusb.FHINS6P.
     * 
     * @return the fhins6P of this Ss13pusb
     */
    Optional<Integer> getFhins6P();
    
    /**
     * Returns the fhins7P of this Ss13pusb. The fhins7P field corresponds to the
     * database column test.test.ss13pusb.FHINS7P.
     * 
     * @return the fhins7P of this Ss13pusb
     */
    Optional<Integer> getFhins7P();
    
    /**
     * Returns the fhisp of this Ss13pusb. The fhisp field corresponds to the
     * database column test.test.ss13pusb.FHISP.
     * 
     * @return the fhisp of this Ss13pusb
     */
    Optional<Integer> getFhisp();
    
    /**
     * Returns the findp of this Ss13pusb. The findp field corresponds to the
     * database column test.test.ss13pusb.FINDP.
     * 
     * @return the findp of this Ss13pusb
     */
    Optional<Integer> getFindp();
    
    /**
     * Returns the fintp of this Ss13pusb. The fintp field corresponds to the
     * database column test.test.ss13pusb.FINTP.
     * 
     * @return the fintp of this Ss13pusb
     */
    Optional<Integer> getFintp();
    
    /**
     * Returns the fjwdp of this Ss13pusb. The fjwdp field corresponds to the
     * database column test.test.ss13pusb.FJWDP.
     * 
     * @return the fjwdp of this Ss13pusb
     */
    Optional<Integer> getFjwdp();
    
    /**
     * Returns the fjwmnp of this Ss13pusb. The fjwmnp field corresponds to the
     * database column test.test.ss13pusb.FJWMNP.
     * 
     * @return the fjwmnp of this Ss13pusb
     */
    Optional<Integer> getFjwmnp();
    
    /**
     * Returns the fjwrip of this Ss13pusb. The fjwrip field corresponds to the
     * database column test.test.ss13pusb.FJWRIP.
     * 
     * @return the fjwrip of this Ss13pusb
     */
    Optional<Integer> getFjwrip();
    
    /**
     * Returns the fjwtrp of this Ss13pusb. The fjwtrp field corresponds to the
     * database column test.test.ss13pusb.FJWTRP.
     * 
     * @return the fjwtrp of this Ss13pusb
     */
    Optional<Integer> getFjwtrp();
    
    /**
     * Returns the flanp of this Ss13pusb. The flanp field corresponds to the
     * database column test.test.ss13pusb.FLANP.
     * 
     * @return the flanp of this Ss13pusb
     */
    Optional<Integer> getFlanp();
    
    /**
     * Returns the flanxp of this Ss13pusb. The flanxp field corresponds to the
     * database column test.test.ss13pusb.FLANXP.
     * 
     * @return the flanxp of this Ss13pusb
     */
    Optional<Integer> getFlanxp();
    
    /**
     * Returns the fmarhdp of this Ss13pusb. The fmarhdp field corresponds to the
     * database column test.test.ss13pusb.FMARHDP.
     * 
     * @return the fmarhdp of this Ss13pusb
     */
    Optional<Integer> getFmarhdp();
    
    /**
     * Returns the fmarhmp of this Ss13pusb. The fmarhmp field corresponds to the
     * database column test.test.ss13pusb.FMARHMP.
     * 
     * @return the fmarhmp of this Ss13pusb
     */
    Optional<Integer> getFmarhmp();
    
    /**
     * Returns the fmarhtp of this Ss13pusb. The fmarhtp field corresponds to the
     * database column test.test.ss13pusb.FMARHTP.
     * 
     * @return the fmarhtp of this Ss13pusb
     */
    Optional<Integer> getFmarhtp();
    
    /**
     * Returns the fmarhwp of this Ss13pusb. The fmarhwp field corresponds to the
     * database column test.test.ss13pusb.FMARHWP.
     * 
     * @return the fmarhwp of this Ss13pusb
     */
    Optional<Integer> getFmarhwp();
    
    /**
     * Returns the fmarhyp of this Ss13pusb. The fmarhyp field corresponds to the
     * database column test.test.ss13pusb.FMARHYP.
     * 
     * @return the fmarhyp of this Ss13pusb
     */
    Optional<Integer> getFmarhyp();
    
    /**
     * Returns the fmarp of this Ss13pusb. The fmarp field corresponds to the
     * database column test.test.ss13pusb.FMARP.
     * 
     * @return the fmarp of this Ss13pusb
     */
    Optional<Integer> getFmarp();
    
    /**
     * Returns the fmigp of this Ss13pusb. The fmigp field corresponds to the
     * database column test.test.ss13pusb.FMIGP.
     * 
     * @return the fmigp of this Ss13pusb
     */
    Optional<Integer> getFmigp();
    
    /**
     * Returns the fmigsp of this Ss13pusb. The fmigsp field corresponds to the
     * database column test.test.ss13pusb.FMIGSP.
     * 
     * @return the fmigsp of this Ss13pusb
     */
    Optional<Integer> getFmigsp();
    
    /**
     * Returns the fmilpp of this Ss13pusb. The fmilpp field corresponds to the
     * database column test.test.ss13pusb.FMILPP.
     * 
     * @return the fmilpp of this Ss13pusb
     */
    Optional<Integer> getFmilpp();
    
    /**
     * Returns the fmilsp of this Ss13pusb. The fmilsp field corresponds to the
     * database column test.test.ss13pusb.FMILSP.
     * 
     * @return the fmilsp of this Ss13pusb
     */
    Optional<Integer> getFmilsp();
    
    /**
     * Returns the foccp of this Ss13pusb. The foccp field corresponds to the
     * database column test.test.ss13pusb.FOCCP.
     * 
     * @return the foccp of this Ss13pusb
     */
    Optional<Integer> getFoccp();
    
    /**
     * Returns the foip of this Ss13pusb. The foip field corresponds to the
     * database column test.test.ss13pusb.FOIP.
     * 
     * @return the foip of this Ss13pusb
     */
    Optional<Integer> getFoip();
    
    /**
     * Returns the fpap of this Ss13pusb. The fpap field corresponds to the
     * database column test.test.ss13pusb.FPAP.
     * 
     * @return the fpap of this Ss13pusb
     */
    Optional<Integer> getFpap();
    
    /**
     * Returns the fpernp of this Ss13pusb. The fpernp field corresponds to the
     * database column test.test.ss13pusb.FPERNP.
     * 
     * @return the fpernp of this Ss13pusb
     */
    Optional<Integer> getFpernp();
    
    /**
     * Returns the fpincp of this Ss13pusb. The fpincp field corresponds to the
     * database column test.test.ss13pusb.FPINCP.
     * 
     * @return the fpincp of this Ss13pusb
     */
    Optional<Integer> getFpincp();
    
    /**
     * Returns the fpobp of this Ss13pusb. The fpobp field corresponds to the
     * database column test.test.ss13pusb.FPOBP.
     * 
     * @return the fpobp of this Ss13pusb
     */
    Optional<Integer> getFpobp();
    
    /**
     * Returns the fpowsp of this Ss13pusb. The fpowsp field corresponds to the
     * database column test.test.ss13pusb.FPOWSP.
     * 
     * @return the fpowsp of this Ss13pusb
     */
    Optional<Integer> getFpowsp();
    
    /**
     * Returns the fprivcovp of this Ss13pusb. The fprivcovp field corresponds to
     * the database column test.test.ss13pusb.FPRIVCOVP.
     * 
     * @return the fprivcovp of this Ss13pusb
     */
    Optional<Integer> getFprivcovp();
    
    /**
     * Returns the fpubcovp of this Ss13pusb. The fpubcovp field corresponds to
     * the database column test.test.ss13pusb.FPUBCOVP.
     * 
     * @return the fpubcovp of this Ss13pusb
     */
    Optional<Integer> getFpubcovp();
    
    /**
     * Returns the fracp of this Ss13pusb. The fracp field corresponds to the
     * database column test.test.ss13pusb.FRACP.
     * 
     * @return the fracp of this Ss13pusb
     */
    Optional<Integer> getFracp();
    
    /**
     * Returns the frelp of this Ss13pusb. The frelp field corresponds to the
     * database column test.test.ss13pusb.FRELP.
     * 
     * @return the frelp of this Ss13pusb
     */
    Optional<Integer> getFrelp();
    
    /**
     * Returns the fretp of this Ss13pusb. The fretp field corresponds to the
     * database column test.test.ss13pusb.FRETP.
     * 
     * @return the fretp of this Ss13pusb
     */
    Optional<Integer> getFretp();
    
    /**
     * Returns the fschgp of this Ss13pusb. The fschgp field corresponds to the
     * database column test.test.ss13pusb.FSCHGP.
     * 
     * @return the fschgp of this Ss13pusb
     */
    Optional<Integer> getFschgp();
    
    /**
     * Returns the fschlp of this Ss13pusb. The fschlp field corresponds to the
     * database column test.test.ss13pusb.FSCHLP.
     * 
     * @return the fschlp of this Ss13pusb
     */
    Optional<Integer> getFschlp();
    
    /**
     * Returns the fschp of this Ss13pusb. The fschp field corresponds to the
     * database column test.test.ss13pusb.FSCHP.
     * 
     * @return the fschp of this Ss13pusb
     */
    Optional<Integer> getFschp();
    
    /**
     * Returns the fsemp of this Ss13pusb. The fsemp field corresponds to the
     * database column test.test.ss13pusb.FSEMP.
     * 
     * @return the fsemp of this Ss13pusb
     */
    Optional<Integer> getFsemp();
    
    /**
     * Returns the fsexp of this Ss13pusb. The fsexp field corresponds to the
     * database column test.test.ss13pusb.FSEXP.
     * 
     * @return the fsexp of this Ss13pusb
     */
    Optional<Integer> getFsexp();
    
    /**
     * Returns the fssip of this Ss13pusb. The fssip field corresponds to the
     * database column test.test.ss13pusb.FSSIP.
     * 
     * @return the fssip of this Ss13pusb
     */
    Optional<Integer> getFssip();
    
    /**
     * Returns the fssp of this Ss13pusb. The fssp field corresponds to the
     * database column test.test.ss13pusb.FSSP.
     * 
     * @return the fssp of this Ss13pusb
     */
    Optional<Integer> getFssp();
    
    /**
     * Returns the fwagp of this Ss13pusb. The fwagp field corresponds to the
     * database column test.test.ss13pusb.FWAGP.
     * 
     * @return the fwagp of this Ss13pusb
     */
    Optional<Integer> getFwagp();
    
    /**
     * Returns the fwkhp of this Ss13pusb. The fwkhp field corresponds to the
     * database column test.test.ss13pusb.FWKHP.
     * 
     * @return the fwkhp of this Ss13pusb
     */
    Optional<Integer> getFwkhp();
    
    /**
     * Returns the fwklp of this Ss13pusb. The fwklp field corresponds to the
     * database column test.test.ss13pusb.FWKLP.
     * 
     * @return the fwklp of this Ss13pusb
     */
    Optional<Integer> getFwklp();
    
    /**
     * Returns the fwkwp of this Ss13pusb. The fwkwp field corresponds to the
     * database column test.test.ss13pusb.FWKWP.
     * 
     * @return the fwkwp of this Ss13pusb
     */
    Optional<Integer> getFwkwp();
    
    /**
     * Returns the fwrkp of this Ss13pusb. The fwrkp field corresponds to the
     * database column test.test.ss13pusb.FWRKP.
     * 
     * @return the fwrkp of this Ss13pusb
     */
    Optional<Integer> getFwrkp();
    
    /**
     * Returns the fyoep of this Ss13pusb. The fyoep field corresponds to the
     * database column test.test.ss13pusb.FYOEP.
     * 
     * @return the fyoep of this Ss13pusb
     */
    Optional<Integer> getFyoep();
    
    /**
     * Sets the rt of this Ss13pusb. The rt field corresponds to the database
     * column test.test.ss13pusb.RT.
     * 
     * @param rt to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setRt(Integer rt);
    
    /**
     * Sets the serialno of this Ss13pusb. The serialno field corresponds to the
     * database column test.test.ss13pusb.SERIALNO.
     * 
     * @param serialno to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setSerialno(Integer serialno);
    
    /**
     * Sets the sporder of this Ss13pusb. The sporder field corresponds to the
     * database column test.test.ss13pusb.SPORDER.
     * 
     * @param sporder to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setSporder(Integer sporder);
    
    /**
     * Sets the puma of this Ss13pusb. The puma field corresponds to the database
     * column test.test.ss13pusb.PUMA.
     * 
     * @param puma to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setPuma(Integer puma);
    
    /**
     * Sets the st of this Ss13pusb. The st field corresponds to the database
     * column test.test.ss13pusb.ST.
     * 
     * @param st to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setSt(Integer st);
    
    /**
     * Sets the adjinc of this Ss13pusb. The adjinc field corresponds to the
     * database column test.test.ss13pusb.ADJINC.
     * 
     * @param adjinc to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setAdjinc(Integer adjinc);
    
    /**
     * Sets the pwgtp of this Ss13pusb. The pwgtp field corresponds to the
     * database column test.test.ss13pusb.PWGTP.
     * 
     * @param pwgtp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setPwgtp(Integer pwgtp);
    
    /**
     * Sets the agep of this Ss13pusb. The agep field corresponds to the database
     * column test.test.ss13pusb.AGEP.
     * 
     * @param agep to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setAgep(Integer agep);
    
    /**
     * Sets the cit of this Ss13pusb. The cit field corresponds to the database
     * column test.test.ss13pusb.CIT.
     * 
     * @param cit to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setCit(Integer cit);
    
    /**
     * Sets the citwp of this Ss13pusb. The citwp field corresponds to the
     * database column test.test.ss13pusb.CITWP.
     * 
     * @param citwp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setCitwp(Integer citwp);
    
    /**
     * Sets the cow of this Ss13pusb. The cow field corresponds to the database
     * column test.test.ss13pusb.COW.
     * 
     * @param cow to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setCow(Integer cow);
    
    /**
     * Sets the ddrs of this Ss13pusb. The ddrs field corresponds to the database
     * column test.test.ss13pusb.DDRS.
     * 
     * @param ddrs to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setDdrs(Integer ddrs);
    
    /**
     * Sets the dear of this Ss13pusb. The dear field corresponds to the database
     * column test.test.ss13pusb.DEAR.
     * 
     * @param dear to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setDear(Integer dear);
    
    /**
     * Sets the deye of this Ss13pusb. The deye field corresponds to the database
     * column test.test.ss13pusb.DEYE.
     * 
     * @param deye to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setDeye(Integer deye);
    
    /**
     * Sets the dout of this Ss13pusb. The dout field corresponds to the database
     * column test.test.ss13pusb.DOUT.
     * 
     * @param dout to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setDout(Integer dout);
    
    /**
     * Sets the dphy of this Ss13pusb. The dphy field corresponds to the database
     * column test.test.ss13pusb.DPHY.
     * 
     * @param dphy to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setDphy(Integer dphy);
    
    /**
     * Sets the drat of this Ss13pusb. The drat field corresponds to the database
     * column test.test.ss13pusb.DRAT.
     * 
     * @param drat to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setDrat(Integer drat);
    
    /**
     * Sets the dratx of this Ss13pusb. The dratx field corresponds to the
     * database column test.test.ss13pusb.DRATX.
     * 
     * @param dratx to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setDratx(Integer dratx);
    
    /**
     * Sets the drem of this Ss13pusb. The drem field corresponds to the database
     * column test.test.ss13pusb.DREM.
     * 
     * @param drem to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setDrem(Integer drem);
    
    /**
     * Sets the eng of this Ss13pusb. The eng field corresponds to the database
     * column test.test.ss13pusb.ENG.
     * 
     * @param eng to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setEng(Integer eng);
    
    /**
     * Sets the fer of this Ss13pusb. The fer field corresponds to the database
     * column test.test.ss13pusb.FER.
     * 
     * @param fer to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFer(Integer fer);
    
    /**
     * Sets the gcl of this Ss13pusb. The gcl field corresponds to the database
     * column test.test.ss13pusb.GCL.
     * 
     * @param gcl to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setGcl(Integer gcl);
    
    /**
     * Sets the gcm of this Ss13pusb. The gcm field corresponds to the database
     * column test.test.ss13pusb.GCM.
     * 
     * @param gcm to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setGcm(Integer gcm);
    
    /**
     * Sets the gcr of this Ss13pusb. The gcr field corresponds to the database
     * column test.test.ss13pusb.GCR.
     * 
     * @param gcr to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setGcr(Integer gcr);
    
    /**
     * Sets the hins1 of this Ss13pusb. The hins1 field corresponds to the
     * database column test.test.ss13pusb.HINS1.
     * 
     * @param hins1 to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setHins1(Integer hins1);
    
    /**
     * Sets the hins2 of this Ss13pusb. The hins2 field corresponds to the
     * database column test.test.ss13pusb.HINS2.
     * 
     * @param hins2 to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setHins2(Integer hins2);
    
    /**
     * Sets the hins3 of this Ss13pusb. The hins3 field corresponds to the
     * database column test.test.ss13pusb.HINS3.
     * 
     * @param hins3 to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setHins3(Integer hins3);
    
    /**
     * Sets the hins4 of this Ss13pusb. The hins4 field corresponds to the
     * database column test.test.ss13pusb.HINS4.
     * 
     * @param hins4 to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setHins4(Integer hins4);
    
    /**
     * Sets the hins5 of this Ss13pusb. The hins5 field corresponds to the
     * database column test.test.ss13pusb.HINS5.
     * 
     * @param hins5 to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setHins5(Integer hins5);
    
    /**
     * Sets the hins6 of this Ss13pusb. The hins6 field corresponds to the
     * database column test.test.ss13pusb.HINS6.
     * 
     * @param hins6 to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setHins6(Integer hins6);
    
    /**
     * Sets the hins7 of this Ss13pusb. The hins7 field corresponds to the
     * database column test.test.ss13pusb.HINS7.
     * 
     * @param hins7 to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setHins7(Integer hins7);
    
    /**
     * Sets the intp of this Ss13pusb. The intp field corresponds to the database
     * column test.test.ss13pusb.INTP.
     * 
     * @param intp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setIntp(Integer intp);
    
    /**
     * Sets the jwmnp of this Ss13pusb. The jwmnp field corresponds to the
     * database column test.test.ss13pusb.JWMNP.
     * 
     * @param jwmnp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setJwmnp(Integer jwmnp);
    
    /**
     * Sets the jwrip of this Ss13pusb. The jwrip field corresponds to the
     * database column test.test.ss13pusb.JWRIP.
     * 
     * @param jwrip to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setJwrip(Integer jwrip);
    
    /**
     * Sets the jwtr of this Ss13pusb. The jwtr field corresponds to the database
     * column test.test.ss13pusb.JWTR.
     * 
     * @param jwtr to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setJwtr(Integer jwtr);
    
    /**
     * Sets the lanx of this Ss13pusb. The lanx field corresponds to the database
     * column test.test.ss13pusb.LANX.
     * 
     * @param lanx to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setLanx(Integer lanx);
    
    /**
     * Sets the mar of this Ss13pusb. The mar field corresponds to the database
     * column test.test.ss13pusb.MAR.
     * 
     * @param mar to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setMar(Integer mar);
    
    /**
     * Sets the marhd of this Ss13pusb. The marhd field corresponds to the
     * database column test.test.ss13pusb.MARHD.
     * 
     * @param marhd to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setMarhd(Integer marhd);
    
    /**
     * Sets the marhm of this Ss13pusb. The marhm field corresponds to the
     * database column test.test.ss13pusb.MARHM.
     * 
     * @param marhm to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setMarhm(Integer marhm);
    
    /**
     * Sets the marht of this Ss13pusb. The marht field corresponds to the
     * database column test.test.ss13pusb.MARHT.
     * 
     * @param marht to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setMarht(Integer marht);
    
    /**
     * Sets the marhw of this Ss13pusb. The marhw field corresponds to the
     * database column test.test.ss13pusb.MARHW.
     * 
     * @param marhw to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setMarhw(Integer marhw);
    
    /**
     * Sets the marhyp of this Ss13pusb. The marhyp field corresponds to the
     * database column test.test.ss13pusb.MARHYP.
     * 
     * @param marhyp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setMarhyp(Integer marhyp);
    
    /**
     * Sets the mig of this Ss13pusb. The mig field corresponds to the database
     * column test.test.ss13pusb.MIG.
     * 
     * @param mig to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setMig(Integer mig);
    
    /**
     * Sets the mil of this Ss13pusb. The mil field corresponds to the database
     * column test.test.ss13pusb.MIL.
     * 
     * @param mil to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setMil(Integer mil);
    
    /**
     * Sets the mlpa of this Ss13pusb. The mlpa field corresponds to the database
     * column test.test.ss13pusb.MLPA.
     * 
     * @param mlpa to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setMlpa(Integer mlpa);
    
    /**
     * Sets the mlpb of this Ss13pusb. The mlpb field corresponds to the database
     * column test.test.ss13pusb.MLPB.
     * 
     * @param mlpb to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setMlpb(Integer mlpb);
    
    /**
     * Sets the mlpcd of this Ss13pusb. The mlpcd field corresponds to the
     * database column test.test.ss13pusb.MLPCD.
     * 
     * @param mlpcd to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setMlpcd(Integer mlpcd);
    
    /**
     * Sets the mlpe of this Ss13pusb. The mlpe field corresponds to the database
     * column test.test.ss13pusb.MLPE.
     * 
     * @param mlpe to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setMlpe(Integer mlpe);
    
    /**
     * Sets the mlpfg of this Ss13pusb. The mlpfg field corresponds to the
     * database column test.test.ss13pusb.MLPFG.
     * 
     * @param mlpfg to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setMlpfg(Integer mlpfg);
    
    /**
     * Sets the mlph of this Ss13pusb. The mlph field corresponds to the database
     * column test.test.ss13pusb.MLPH.
     * 
     * @param mlph to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setMlph(Integer mlph);
    
    /**
     * Sets the mlpi of this Ss13pusb. The mlpi field corresponds to the database
     * column test.test.ss13pusb.MLPI.
     * 
     * @param mlpi to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setMlpi(Integer mlpi);
    
    /**
     * Sets the mlpj of this Ss13pusb. The mlpj field corresponds to the database
     * column test.test.ss13pusb.MLPJ.
     * 
     * @param mlpj to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setMlpj(Integer mlpj);
    
    /**
     * Sets the mlpk of this Ss13pusb. The mlpk field corresponds to the database
     * column test.test.ss13pusb.MLPK.
     * 
     * @param mlpk to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setMlpk(Integer mlpk);
    
    /**
     * Sets the nwab of this Ss13pusb. The nwab field corresponds to the database
     * column test.test.ss13pusb.NWAB.
     * 
     * @param nwab to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setNwab(Integer nwab);
    
    /**
     * Sets the nwav of this Ss13pusb. The nwav field corresponds to the database
     * column test.test.ss13pusb.NWAV.
     * 
     * @param nwav to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setNwav(Integer nwav);
    
    /**
     * Sets the nwla of this Ss13pusb. The nwla field corresponds to the database
     * column test.test.ss13pusb.NWLA.
     * 
     * @param nwla to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setNwla(Integer nwla);
    
    /**
     * Sets the nwlk of this Ss13pusb. The nwlk field corresponds to the database
     * column test.test.ss13pusb.NWLK.
     * 
     * @param nwlk to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setNwlk(Integer nwlk);
    
    /**
     * Sets the nwre of this Ss13pusb. The nwre field corresponds to the database
     * column test.test.ss13pusb.NWRE.
     * 
     * @param nwre to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setNwre(Integer nwre);
    
    /**
     * Sets the oip of this Ss13pusb. The oip field corresponds to the database
     * column test.test.ss13pusb.OIP.
     * 
     * @param oip to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setOip(Integer oip);
    
    /**
     * Sets the pap of this Ss13pusb. The pap field corresponds to the database
     * column test.test.ss13pusb.PAP.
     * 
     * @param pap to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setPap(Integer pap);
    
    /**
     * Sets the relp of this Ss13pusb. The relp field corresponds to the database
     * column test.test.ss13pusb.RELP.
     * 
     * @param relp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setRelp(Integer relp);
    
    /**
     * Sets the retp of this Ss13pusb. The retp field corresponds to the database
     * column test.test.ss13pusb.RETP.
     * 
     * @param retp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setRetp(Integer retp);
    
    /**
     * Sets the sch of this Ss13pusb. The sch field corresponds to the database
     * column test.test.ss13pusb.SCH.
     * 
     * @param sch to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setSch(Integer sch);
    
    /**
     * Sets the schg of this Ss13pusb. The schg field corresponds to the database
     * column test.test.ss13pusb.SCHG.
     * 
     * @param schg to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setSchg(Integer schg);
    
    /**
     * Sets the schl of this Ss13pusb. The schl field corresponds to the database
     * column test.test.ss13pusb.SCHL.
     * 
     * @param schl to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setSchl(Integer schl);
    
    /**
     * Sets the semp of this Ss13pusb. The semp field corresponds to the database
     * column test.test.ss13pusb.SEMP.
     * 
     * @param semp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setSemp(Integer semp);
    
    /**
     * Sets the sex of this Ss13pusb. The sex field corresponds to the database
     * column test.test.ss13pusb.SEX.
     * 
     * @param sex to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setSex(Integer sex);
    
    /**
     * Sets the ssip of this Ss13pusb. The ssip field corresponds to the database
     * column test.test.ss13pusb.SSIP.
     * 
     * @param ssip to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setSsip(Integer ssip);
    
    /**
     * Sets the ssp of this Ss13pusb. The ssp field corresponds to the database
     * column test.test.ss13pusb.SSP.
     * 
     * @param ssp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setSsp(Integer ssp);
    
    /**
     * Sets the wagp of this Ss13pusb. The wagp field corresponds to the database
     * column test.test.ss13pusb.WAGP.
     * 
     * @param wagp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setWagp(Integer wagp);
    
    /**
     * Sets the wkhp of this Ss13pusb. The wkhp field corresponds to the database
     * column test.test.ss13pusb.WKHP.
     * 
     * @param wkhp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setWkhp(Integer wkhp);
    
    /**
     * Sets the wkl of this Ss13pusb. The wkl field corresponds to the database
     * column test.test.ss13pusb.WKL.
     * 
     * @param wkl to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setWkl(Integer wkl);
    
    /**
     * Sets the wkw of this Ss13pusb. The wkw field corresponds to the database
     * column test.test.ss13pusb.WKW.
     * 
     * @param wkw to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setWkw(Integer wkw);
    
    /**
     * Sets the wrk of this Ss13pusb. The wrk field corresponds to the database
     * column test.test.ss13pusb.WRK.
     * 
     * @param wrk to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setWrk(Integer wrk);
    
    /**
     * Sets the yoep of this Ss13pusb. The yoep field corresponds to the database
     * column test.test.ss13pusb.YOEP.
     * 
     * @param yoep to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setYoep(Integer yoep);
    
    /**
     * Sets the anc of this Ss13pusb. The anc field corresponds to the database
     * column test.test.ss13pusb.ANC.
     * 
     * @param anc to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setAnc(Integer anc);
    
    /**
     * Sets the anc1P of this Ss13pusb. The anc1P field corresponds to the
     * database column test.test.ss13pusb.ANC1P.
     * 
     * @param anc1P to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setAnc1P(Integer anc1P);
    
    /**
     * Sets the anc2P of this Ss13pusb. The anc2P field corresponds to the
     * database column test.test.ss13pusb.ANC2P.
     * 
     * @param anc2P to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setAnc2P(Integer anc2P);
    
    /**
     * Sets the decade of this Ss13pusb. The decade field corresponds to the
     * database column test.test.ss13pusb.DECADE.
     * 
     * @param decade to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setDecade(Integer decade);
    
    /**
     * Sets the dis of this Ss13pusb. The dis field corresponds to the database
     * column test.test.ss13pusb.DIS.
     * 
     * @param dis to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setDis(Integer dis);
    
    /**
     * Sets the drivesp of this Ss13pusb. The drivesp field corresponds to the
     * database column test.test.ss13pusb.DRIVESP.
     * 
     * @param drivesp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setDrivesp(Integer drivesp);
    
    /**
     * Sets the esp of this Ss13pusb. The esp field corresponds to the database
     * column test.test.ss13pusb.ESP.
     * 
     * @param esp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setEsp(Integer esp);
    
    /**
     * Sets the esr of this Ss13pusb. The esr field corresponds to the database
     * column test.test.ss13pusb.ESR.
     * 
     * @param esr to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setEsr(Integer esr);
    
    /**
     * Sets the fod1P of this Ss13pusb. The fod1P field corresponds to the
     * database column test.test.ss13pusb.FOD1P.
     * 
     * @param fod1P to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFod1P(Integer fod1P);
    
    /**
     * Sets the fod2P of this Ss13pusb. The fod2P field corresponds to the
     * database column test.test.ss13pusb.FOD2P.
     * 
     * @param fod2P to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFod2P(Integer fod2P);
    
    /**
     * Sets the hicov of this Ss13pusb. The hicov field corresponds to the
     * database column test.test.ss13pusb.HICOV.
     * 
     * @param hicov to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setHicov(Integer hicov);
    
    /**
     * Sets the hisp of this Ss13pusb. The hisp field corresponds to the database
     * column test.test.ss13pusb.HISP.
     * 
     * @param hisp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setHisp(Integer hisp);
    
    /**
     * Sets the indp of this Ss13pusb. The indp field corresponds to the database
     * column test.test.ss13pusb.INDP.
     * 
     * @param indp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setIndp(Integer indp);
    
    /**
     * Sets the jwap of this Ss13pusb. The jwap field corresponds to the database
     * column test.test.ss13pusb.JWAP.
     * 
     * @param jwap to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setJwap(Integer jwap);
    
    /**
     * Sets the jwdp of this Ss13pusb. The jwdp field corresponds to the database
     * column test.test.ss13pusb.JWDP.
     * 
     * @param jwdp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setJwdp(Integer jwdp);
    
    /**
     * Sets the lanp of this Ss13pusb. The lanp field corresponds to the database
     * column test.test.ss13pusb.LANP.
     * 
     * @param lanp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setLanp(Integer lanp);
    
    /**
     * Sets the migpuma of this Ss13pusb. The migpuma field corresponds to the
     * database column test.test.ss13pusb.MIGPUMA.
     * 
     * @param migpuma to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setMigpuma(Integer migpuma);
    
    /**
     * Sets the migsp of this Ss13pusb. The migsp field corresponds to the
     * database column test.test.ss13pusb.MIGSP.
     * 
     * @param migsp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setMigsp(Integer migsp);
    
    /**
     * Sets the msp of this Ss13pusb. The msp field corresponds to the database
     * column test.test.ss13pusb.MSP.
     * 
     * @param msp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setMsp(Integer msp);
    
    /**
     * Sets the naicsp of this Ss13pusb. The naicsp field corresponds to the
     * database column test.test.ss13pusb.NAICSP.
     * 
     * @param naicsp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setNaicsp(Integer naicsp);
    
    /**
     * Sets the nativity of this Ss13pusb. The nativity field corresponds to the
     * database column test.test.ss13pusb.NATIVITY.
     * 
     * @param nativity to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setNativity(Integer nativity);
    
    /**
     * Sets the nop of this Ss13pusb. The nop field corresponds to the database
     * column test.test.ss13pusb.NOP.
     * 
     * @param nop to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setNop(Integer nop);
    
    /**
     * Sets the oc of this Ss13pusb. The oc field corresponds to the database
     * column test.test.ss13pusb.OC.
     * 
     * @param oc to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setOc(Integer oc);
    
    /**
     * Sets the occp of this Ss13pusb. The occp field corresponds to the database
     * column test.test.ss13pusb.OCCP.
     * 
     * @param occp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setOccp(Integer occp);
    
    /**
     * Sets the paoc of this Ss13pusb. The paoc field corresponds to the database
     * column test.test.ss13pusb.PAOC.
     * 
     * @param paoc to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setPaoc(Integer paoc);
    
    /**
     * Sets the pernp of this Ss13pusb. The pernp field corresponds to the
     * database column test.test.ss13pusb.PERNP.
     * 
     * @param pernp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setPernp(Integer pernp);
    
    /**
     * Sets the pincp of this Ss13pusb. The pincp field corresponds to the
     * database column test.test.ss13pusb.PINCP.
     * 
     * @param pincp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setPincp(Integer pincp);
    
    /**
     * Sets the pobp of this Ss13pusb. The pobp field corresponds to the database
     * column test.test.ss13pusb.POBP.
     * 
     * @param pobp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setPobp(Integer pobp);
    
    /**
     * Sets the povpip of this Ss13pusb. The povpip field corresponds to the
     * database column test.test.ss13pusb.POVPIP.
     * 
     * @param povpip to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setPovpip(Integer povpip);
    
    /**
     * Sets the powpuma of this Ss13pusb. The powpuma field corresponds to the
     * database column test.test.ss13pusb.POWPUMA.
     * 
     * @param powpuma to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setPowpuma(Integer powpuma);
    
    /**
     * Sets the powsp of this Ss13pusb. The powsp field corresponds to the
     * database column test.test.ss13pusb.POWSP.
     * 
     * @param powsp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setPowsp(Integer powsp);
    
    /**
     * Sets the privcov of this Ss13pusb. The privcov field corresponds to the
     * database column test.test.ss13pusb.PRIVCOV.
     * 
     * @param privcov to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setPrivcov(Integer privcov);
    
    /**
     * Sets the pubcov of this Ss13pusb. The pubcov field corresponds to the
     * database column test.test.ss13pusb.PUBCOV.
     * 
     * @param pubcov to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setPubcov(Integer pubcov);
    
    /**
     * Sets the qtrbir of this Ss13pusb. The qtrbir field corresponds to the
     * database column test.test.ss13pusb.QTRBIR.
     * 
     * @param qtrbir to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setQtrbir(Integer qtrbir);
    
    /**
     * Sets the rac1P of this Ss13pusb. The rac1P field corresponds to the
     * database column test.test.ss13pusb.RAC1P.
     * 
     * @param rac1P to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setRac1P(Integer rac1P);
    
    /**
     * Sets the rac2P of this Ss13pusb. The rac2P field corresponds to the
     * database column test.test.ss13pusb.RAC2P.
     * 
     * @param rac2P to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setRac2P(Integer rac2P);
    
    /**
     * Sets the rac3P of this Ss13pusb. The rac3P field corresponds to the
     * database column test.test.ss13pusb.RAC3P.
     * 
     * @param rac3P to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setRac3P(Integer rac3P);
    
    /**
     * Sets the racaian of this Ss13pusb. The racaian field corresponds to the
     * database column test.test.ss13pusb.RACAIAN.
     * 
     * @param racaian to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setRacaian(Integer racaian);
    
    /**
     * Sets the racasn of this Ss13pusb. The racasn field corresponds to the
     * database column test.test.ss13pusb.RACASN.
     * 
     * @param racasn to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setRacasn(Integer racasn);
    
    /**
     * Sets the racblk of this Ss13pusb. The racblk field corresponds to the
     * database column test.test.ss13pusb.RACBLK.
     * 
     * @param racblk to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setRacblk(Integer racblk);
    
    /**
     * Sets the racnh of this Ss13pusb. The racnh field corresponds to the
     * database column test.test.ss13pusb.RACNH.
     * 
     * @param racnh to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setRacnh(Integer racnh);
    
    /**
     * Sets the racnum of this Ss13pusb. The racnum field corresponds to the
     * database column test.test.ss13pusb.RACNUM.
     * 
     * @param racnum to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setRacnum(Integer racnum);
    
    /**
     * Sets the racpi of this Ss13pusb. The racpi field corresponds to the
     * database column test.test.ss13pusb.RACPI.
     * 
     * @param racpi to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setRacpi(Integer racpi);
    
    /**
     * Sets the racsor of this Ss13pusb. The racsor field corresponds to the
     * database column test.test.ss13pusb.RACSOR.
     * 
     * @param racsor to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setRacsor(Integer racsor);
    
    /**
     * Sets the racwht of this Ss13pusb. The racwht field corresponds to the
     * database column test.test.ss13pusb.RACWHT.
     * 
     * @param racwht to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setRacwht(Integer racwht);
    
    /**
     * Sets the rc of this Ss13pusb. The rc field corresponds to the database
     * column test.test.ss13pusb.RC.
     * 
     * @param rc to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setRc(Integer rc);
    
    /**
     * Sets the sciengp of this Ss13pusb. The sciengp field corresponds to the
     * database column test.test.ss13pusb.SCIENGP.
     * 
     * @param sciengp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setSciengp(Integer sciengp);
    
    /**
     * Sets the sciengrlp of this Ss13pusb. The sciengrlp field corresponds to
     * the database column test.test.ss13pusb.SCIENGRLP.
     * 
     * @param sciengrlp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setSciengrlp(Integer sciengrlp);
    
    /**
     * Sets the sfn of this Ss13pusb. The sfn field corresponds to the database
     * column test.test.ss13pusb.SFN.
     * 
     * @param sfn to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setSfn(Integer sfn);
    
    /**
     * Sets the sfr of this Ss13pusb. The sfr field corresponds to the database
     * column test.test.ss13pusb.SFR.
     * 
     * @param sfr to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setSfr(Integer sfr);
    
    /**
     * Sets the socp of this Ss13pusb. The socp field corresponds to the database
     * column test.test.ss13pusb.SOCP.
     * 
     * @param socp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setSocp(Integer socp);
    
    /**
     * Sets the vps of this Ss13pusb. The vps field corresponds to the database
     * column test.test.ss13pusb.VPS.
     * 
     * @param vps to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setVps(Integer vps);
    
    /**
     * Sets the waob of this Ss13pusb. The waob field corresponds to the database
     * column test.test.ss13pusb.WAOB.
     * 
     * @param waob to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setWaob(Integer waob);
    
    /**
     * Sets the fagep of this Ss13pusb. The fagep field corresponds to the
     * database column test.test.ss13pusb.FAGEP.
     * 
     * @param fagep to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFagep(Integer fagep);
    
    /**
     * Sets the fancp of this Ss13pusb. The fancp field corresponds to the
     * database column test.test.ss13pusb.FANCP.
     * 
     * @param fancp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFancp(Integer fancp);
    
    /**
     * Sets the fcitp of this Ss13pusb. The fcitp field corresponds to the
     * database column test.test.ss13pusb.FCITP.
     * 
     * @param fcitp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFcitp(Integer fcitp);
    
    /**
     * Sets the fcitwp of this Ss13pusb. The fcitwp field corresponds to the
     * database column test.test.ss13pusb.FCITWP.
     * 
     * @param fcitwp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFcitwp(Integer fcitwp);
    
    /**
     * Sets the fcowp of this Ss13pusb. The fcowp field corresponds to the
     * database column test.test.ss13pusb.FCOWP.
     * 
     * @param fcowp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFcowp(Integer fcowp);
    
    /**
     * Sets the fddrsp of this Ss13pusb. The fddrsp field corresponds to the
     * database column test.test.ss13pusb.FDDRSP.
     * 
     * @param fddrsp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFddrsp(Integer fddrsp);
    
    /**
     * Sets the fdearp of this Ss13pusb. The fdearp field corresponds to the
     * database column test.test.ss13pusb.FDEARP.
     * 
     * @param fdearp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFdearp(Integer fdearp);
    
    /**
     * Sets the fdeyep of this Ss13pusb. The fdeyep field corresponds to the
     * database column test.test.ss13pusb.FDEYEP.
     * 
     * @param fdeyep to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFdeyep(Integer fdeyep);
    
    /**
     * Sets the fdisp of this Ss13pusb. The fdisp field corresponds to the
     * database column test.test.ss13pusb.FDISP.
     * 
     * @param fdisp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFdisp(Integer fdisp);
    
    /**
     * Sets the fdoutp of this Ss13pusb. The fdoutp field corresponds to the
     * database column test.test.ss13pusb.FDOUTP.
     * 
     * @param fdoutp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFdoutp(Integer fdoutp);
    
    /**
     * Sets the fdphyp of this Ss13pusb. The fdphyp field corresponds to the
     * database column test.test.ss13pusb.FDPHYP.
     * 
     * @param fdphyp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFdphyp(Integer fdphyp);
    
    /**
     * Sets the fdratp of this Ss13pusb. The fdratp field corresponds to the
     * database column test.test.ss13pusb.FDRATP.
     * 
     * @param fdratp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFdratp(Integer fdratp);
    
    /**
     * Sets the fdratxp of this Ss13pusb. The fdratxp field corresponds to the
     * database column test.test.ss13pusb.FDRATXP.
     * 
     * @param fdratxp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFdratxp(Integer fdratxp);
    
    /**
     * Sets the fdremp of this Ss13pusb. The fdremp field corresponds to the
     * database column test.test.ss13pusb.FDREMP.
     * 
     * @param fdremp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFdremp(Integer fdremp);
    
    /**
     * Sets the fengp of this Ss13pusb. The fengp field corresponds to the
     * database column test.test.ss13pusb.FENGP.
     * 
     * @param fengp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFengp(Integer fengp);
    
    /**
     * Sets the fesrp of this Ss13pusb. The fesrp field corresponds to the
     * database column test.test.ss13pusb.FESRP.
     * 
     * @param fesrp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFesrp(Integer fesrp);
    
    /**
     * Sets the fferp of this Ss13pusb. The fferp field corresponds to the
     * database column test.test.ss13pusb.FFERP.
     * 
     * @param fferp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFferp(Integer fferp);
    
    /**
     * Sets the ffodp of this Ss13pusb. The ffodp field corresponds to the
     * database column test.test.ss13pusb.FFODP.
     * 
     * @param ffodp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFfodp(Integer ffodp);
    
    /**
     * Sets the fgclp of this Ss13pusb. The fgclp field corresponds to the
     * database column test.test.ss13pusb.FGCLP.
     * 
     * @param fgclp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFgclp(Integer fgclp);
    
    /**
     * Sets the fgcmp of this Ss13pusb. The fgcmp field corresponds to the
     * database column test.test.ss13pusb.FGCMP.
     * 
     * @param fgcmp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFgcmp(Integer fgcmp);
    
    /**
     * Sets the fgcrp of this Ss13pusb. The fgcrp field corresponds to the
     * database column test.test.ss13pusb.FGCRP.
     * 
     * @param fgcrp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFgcrp(Integer fgcrp);
    
    /**
     * Sets the fhins1P of this Ss13pusb. The fhins1P field corresponds to the
     * database column test.test.ss13pusb.FHINS1P.
     * 
     * @param fhins1P to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFhins1P(Integer fhins1P);
    
    /**
     * Sets the fhins2P of this Ss13pusb. The fhins2P field corresponds to the
     * database column test.test.ss13pusb.FHINS2P.
     * 
     * @param fhins2P to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFhins2P(Integer fhins2P);
    
    /**
     * Sets the fhins3C of this Ss13pusb. The fhins3C field corresponds to the
     * database column test.test.ss13pusb.FHINS3C.
     * 
     * @param fhins3C to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFhins3C(Integer fhins3C);
    
    /**
     * Sets the fhins3P of this Ss13pusb. The fhins3P field corresponds to the
     * database column test.test.ss13pusb.FHINS3P.
     * 
     * @param fhins3P to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFhins3P(Integer fhins3P);
    
    /**
     * Sets the fhins4C of this Ss13pusb. The fhins4C field corresponds to the
     * database column test.test.ss13pusb.FHINS4C.
     * 
     * @param fhins4C to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFhins4C(Integer fhins4C);
    
    /**
     * Sets the fhins4P of this Ss13pusb. The fhins4P field corresponds to the
     * database column test.test.ss13pusb.FHINS4P.
     * 
     * @param fhins4P to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFhins4P(Integer fhins4P);
    
    /**
     * Sets the fhins5C of this Ss13pusb. The fhins5C field corresponds to the
     * database column test.test.ss13pusb.FHINS5C.
     * 
     * @param fhins5C to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFhins5C(Integer fhins5C);
    
    /**
     * Sets the fhins5P of this Ss13pusb. The fhins5P field corresponds to the
     * database column test.test.ss13pusb.FHINS5P.
     * 
     * @param fhins5P to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFhins5P(Integer fhins5P);
    
    /**
     * Sets the fhins6P of this Ss13pusb. The fhins6P field corresponds to the
     * database column test.test.ss13pusb.FHINS6P.
     * 
     * @param fhins6P to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFhins6P(Integer fhins6P);
    
    /**
     * Sets the fhins7P of this Ss13pusb. The fhins7P field corresponds to the
     * database column test.test.ss13pusb.FHINS7P.
     * 
     * @param fhins7P to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFhins7P(Integer fhins7P);
    
    /**
     * Sets the fhisp of this Ss13pusb. The fhisp field corresponds to the
     * database column test.test.ss13pusb.FHISP.
     * 
     * @param fhisp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFhisp(Integer fhisp);
    
    /**
     * Sets the findp of this Ss13pusb. The findp field corresponds to the
     * database column test.test.ss13pusb.FINDP.
     * 
     * @param findp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFindp(Integer findp);
    
    /**
     * Sets the fintp of this Ss13pusb. The fintp field corresponds to the
     * database column test.test.ss13pusb.FINTP.
     * 
     * @param fintp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFintp(Integer fintp);
    
    /**
     * Sets the fjwdp of this Ss13pusb. The fjwdp field corresponds to the
     * database column test.test.ss13pusb.FJWDP.
     * 
     * @param fjwdp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFjwdp(Integer fjwdp);
    
    /**
     * Sets the fjwmnp of this Ss13pusb. The fjwmnp field corresponds to the
     * database column test.test.ss13pusb.FJWMNP.
     * 
     * @param fjwmnp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFjwmnp(Integer fjwmnp);
    
    /**
     * Sets the fjwrip of this Ss13pusb. The fjwrip field corresponds to the
     * database column test.test.ss13pusb.FJWRIP.
     * 
     * @param fjwrip to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFjwrip(Integer fjwrip);
    
    /**
     * Sets the fjwtrp of this Ss13pusb. The fjwtrp field corresponds to the
     * database column test.test.ss13pusb.FJWTRP.
     * 
     * @param fjwtrp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFjwtrp(Integer fjwtrp);
    
    /**
     * Sets the flanp of this Ss13pusb. The flanp field corresponds to the
     * database column test.test.ss13pusb.FLANP.
     * 
     * @param flanp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFlanp(Integer flanp);
    
    /**
     * Sets the flanxp of this Ss13pusb. The flanxp field corresponds to the
     * database column test.test.ss13pusb.FLANXP.
     * 
     * @param flanxp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFlanxp(Integer flanxp);
    
    /**
     * Sets the fmarhdp of this Ss13pusb. The fmarhdp field corresponds to the
     * database column test.test.ss13pusb.FMARHDP.
     * 
     * @param fmarhdp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFmarhdp(Integer fmarhdp);
    
    /**
     * Sets the fmarhmp of this Ss13pusb. The fmarhmp field corresponds to the
     * database column test.test.ss13pusb.FMARHMP.
     * 
     * @param fmarhmp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFmarhmp(Integer fmarhmp);
    
    /**
     * Sets the fmarhtp of this Ss13pusb. The fmarhtp field corresponds to the
     * database column test.test.ss13pusb.FMARHTP.
     * 
     * @param fmarhtp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFmarhtp(Integer fmarhtp);
    
    /**
     * Sets the fmarhwp of this Ss13pusb. The fmarhwp field corresponds to the
     * database column test.test.ss13pusb.FMARHWP.
     * 
     * @param fmarhwp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFmarhwp(Integer fmarhwp);
    
    /**
     * Sets the fmarhyp of this Ss13pusb. The fmarhyp field corresponds to the
     * database column test.test.ss13pusb.FMARHYP.
     * 
     * @param fmarhyp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFmarhyp(Integer fmarhyp);
    
    /**
     * Sets the fmarp of this Ss13pusb. The fmarp field corresponds to the
     * database column test.test.ss13pusb.FMARP.
     * 
     * @param fmarp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFmarp(Integer fmarp);
    
    /**
     * Sets the fmigp of this Ss13pusb. The fmigp field corresponds to the
     * database column test.test.ss13pusb.FMIGP.
     * 
     * @param fmigp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFmigp(Integer fmigp);
    
    /**
     * Sets the fmigsp of this Ss13pusb. The fmigsp field corresponds to the
     * database column test.test.ss13pusb.FMIGSP.
     * 
     * @param fmigsp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFmigsp(Integer fmigsp);
    
    /**
     * Sets the fmilpp of this Ss13pusb. The fmilpp field corresponds to the
     * database column test.test.ss13pusb.FMILPP.
     * 
     * @param fmilpp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFmilpp(Integer fmilpp);
    
    /**
     * Sets the fmilsp of this Ss13pusb. The fmilsp field corresponds to the
     * database column test.test.ss13pusb.FMILSP.
     * 
     * @param fmilsp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFmilsp(Integer fmilsp);
    
    /**
     * Sets the foccp of this Ss13pusb. The foccp field corresponds to the
     * database column test.test.ss13pusb.FOCCP.
     * 
     * @param foccp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFoccp(Integer foccp);
    
    /**
     * Sets the foip of this Ss13pusb. The foip field corresponds to the database
     * column test.test.ss13pusb.FOIP.
     * 
     * @param foip to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFoip(Integer foip);
    
    /**
     * Sets the fpap of this Ss13pusb. The fpap field corresponds to the database
     * column test.test.ss13pusb.FPAP.
     * 
     * @param fpap to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFpap(Integer fpap);
    
    /**
     * Sets the fpernp of this Ss13pusb. The fpernp field corresponds to the
     * database column test.test.ss13pusb.FPERNP.
     * 
     * @param fpernp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFpernp(Integer fpernp);
    
    /**
     * Sets the fpincp of this Ss13pusb. The fpincp field corresponds to the
     * database column test.test.ss13pusb.FPINCP.
     * 
     * @param fpincp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFpincp(Integer fpincp);
    
    /**
     * Sets the fpobp of this Ss13pusb. The fpobp field corresponds to the
     * database column test.test.ss13pusb.FPOBP.
     * 
     * @param fpobp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFpobp(Integer fpobp);
    
    /**
     * Sets the fpowsp of this Ss13pusb. The fpowsp field corresponds to the
     * database column test.test.ss13pusb.FPOWSP.
     * 
     * @param fpowsp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFpowsp(Integer fpowsp);
    
    /**
     * Sets the fprivcovp of this Ss13pusb. The fprivcovp field corresponds to
     * the database column test.test.ss13pusb.FPRIVCOVP.
     * 
     * @param fprivcovp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFprivcovp(Integer fprivcovp);
    
    /**
     * Sets the fpubcovp of this Ss13pusb. The fpubcovp field corresponds to the
     * database column test.test.ss13pusb.FPUBCOVP.
     * 
     * @param fpubcovp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFpubcovp(Integer fpubcovp);
    
    /**
     * Sets the fracp of this Ss13pusb. The fracp field corresponds to the
     * database column test.test.ss13pusb.FRACP.
     * 
     * @param fracp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFracp(Integer fracp);
    
    /**
     * Sets the frelp of this Ss13pusb. The frelp field corresponds to the
     * database column test.test.ss13pusb.FRELP.
     * 
     * @param frelp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFrelp(Integer frelp);
    
    /**
     * Sets the fretp of this Ss13pusb. The fretp field corresponds to the
     * database column test.test.ss13pusb.FRETP.
     * 
     * @param fretp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFretp(Integer fretp);
    
    /**
     * Sets the fschgp of this Ss13pusb. The fschgp field corresponds to the
     * database column test.test.ss13pusb.FSCHGP.
     * 
     * @param fschgp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFschgp(Integer fschgp);
    
    /**
     * Sets the fschlp of this Ss13pusb. The fschlp field corresponds to the
     * database column test.test.ss13pusb.FSCHLP.
     * 
     * @param fschlp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFschlp(Integer fschlp);
    
    /**
     * Sets the fschp of this Ss13pusb. The fschp field corresponds to the
     * database column test.test.ss13pusb.FSCHP.
     * 
     * @param fschp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFschp(Integer fschp);
    
    /**
     * Sets the fsemp of this Ss13pusb. The fsemp field corresponds to the
     * database column test.test.ss13pusb.FSEMP.
     * 
     * @param fsemp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFsemp(Integer fsemp);
    
    /**
     * Sets the fsexp of this Ss13pusb. The fsexp field corresponds to the
     * database column test.test.ss13pusb.FSEXP.
     * 
     * @param fsexp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFsexp(Integer fsexp);
    
    /**
     * Sets the fssip of this Ss13pusb. The fssip field corresponds to the
     * database column test.test.ss13pusb.FSSIP.
     * 
     * @param fssip to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFssip(Integer fssip);
    
    /**
     * Sets the fssp of this Ss13pusb. The fssp field corresponds to the database
     * column test.test.ss13pusb.FSSP.
     * 
     * @param fssp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFssp(Integer fssp);
    
    /**
     * Sets the fwagp of this Ss13pusb. The fwagp field corresponds to the
     * database column test.test.ss13pusb.FWAGP.
     * 
     * @param fwagp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFwagp(Integer fwagp);
    
    /**
     * Sets the fwkhp of this Ss13pusb. The fwkhp field corresponds to the
     * database column test.test.ss13pusb.FWKHP.
     * 
     * @param fwkhp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFwkhp(Integer fwkhp);
    
    /**
     * Sets the fwklp of this Ss13pusb. The fwklp field corresponds to the
     * database column test.test.ss13pusb.FWKLP.
     * 
     * @param fwklp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFwklp(Integer fwklp);
    
    /**
     * Sets the fwkwp of this Ss13pusb. The fwkwp field corresponds to the
     * database column test.test.ss13pusb.FWKWP.
     * 
     * @param fwkwp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFwkwp(Integer fwkwp);
    
    /**
     * Sets the fwrkp of this Ss13pusb. The fwrkp field corresponds to the
     * database column test.test.ss13pusb.FWRKP.
     * 
     * @param fwrkp to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFwrkp(Integer fwrkp);
    
    /**
     * Sets the fyoep of this Ss13pusb. The fyoep field corresponds to the
     * database column test.test.ss13pusb.FYOEP.
     * 
     * @param fyoep to set of this Ss13pusb
     * @return this Ss13pusb instance
     */
    Ss13pusb setFyoep(Integer fyoep);
    
    enum Identifier implements FieldIdentifier<Ss13pusb> {
        
        RT ("RT"),
        SERIALNO ("SERIALNO"),
        SPORDER ("SPORDER"),
        PUMA ("PUMA"),
        ST ("ST"),
        ADJINC ("ADJINC"),
        PWGTP ("PWGTP"),
        AGEP ("AGEP"),
        CIT ("CIT"),
        CITWP ("CITWP"),
        COW ("COW"),
        DDRS ("DDRS"),
        DEAR ("DEAR"),
        DEYE ("DEYE"),
        DOUT ("DOUT"),
        DPHY ("DPHY"),
        DRAT ("DRAT"),
        DRATX ("DRATX"),
        DREM ("DREM"),
        ENG ("ENG"),
        FER ("FER"),
        GCL ("GCL"),
        GCM ("GCM"),
        GCR ("GCR"),
        HINS1 ("HINS1"),
        HINS2 ("HINS2"),
        HINS3 ("HINS3"),
        HINS4 ("HINS4"),
        HINS5 ("HINS5"),
        HINS6 ("HINS6"),
        HINS7 ("HINS7"),
        INTP ("INTP"),
        JWMNP ("JWMNP"),
        JWRIP ("JWRIP"),
        JWTR ("JWTR"),
        LANX ("LANX"),
        MAR ("MAR"),
        MARHD ("MARHD"),
        MARHM ("MARHM"),
        MARHT ("MARHT"),
        MARHW ("MARHW"),
        MARHYP ("MARHYP"),
        MIG ("MIG"),
        MIL ("MIL"),
        MLPA ("MLPA"),
        MLPB ("MLPB"),
        MLPCD ("MLPCD"),
        MLPE ("MLPE"),
        MLPFG ("MLPFG"),
        MLPH ("MLPH"),
        MLPI ("MLPI"),
        MLPJ ("MLPJ"),
        MLPK ("MLPK"),
        NWAB ("NWAB"),
        NWAV ("NWAV"),
        NWLA ("NWLA"),
        NWLK ("NWLK"),
        NWRE ("NWRE"),
        OIP ("OIP"),
        PAP ("PAP"),
        RELP ("RELP"),
        RETP ("RETP"),
        SCH ("SCH"),
        SCHG ("SCHG"),
        SCHL ("SCHL"),
        SEMP ("SEMP"),
        SEX ("SEX"),
        SSIP ("SSIP"),
        SSP ("SSP"),
        WAGP ("WAGP"),
        WKHP ("WKHP"),
        WKL ("WKL"),
        WKW ("WKW"),
        WRK ("WRK"),
        YOEP ("YOEP"),
        ANC ("ANC"),
        ANC1_P ("ANC1P"),
        ANC2_P ("ANC2P"),
        DECADE ("DECADE"),
        DIS ("DIS"),
        DRIVESP ("DRIVESP"),
        ESP ("ESP"),
        ESR ("ESR"),
        FOD1_P ("FOD1P"),
        FOD2_P ("FOD2P"),
        HICOV ("HICOV"),
        HISP ("HISP"),
        INDP ("INDP"),
        JWAP ("JWAP"),
        JWDP ("JWDP"),
        LANP ("LANP"),
        MIGPUMA ("MIGPUMA"),
        MIGSP ("MIGSP"),
        MSP ("MSP"),
        NAICSP ("NAICSP"),
        NATIVITY ("NATIVITY"),
        NOP ("NOP"),
        OC ("OC"),
        OCCP ("OCCP"),
        PAOC ("PAOC"),
        PERNP ("PERNP"),
        PINCP ("PINCP"),
        POBP ("POBP"),
        POVPIP ("POVPIP"),
        POWPUMA ("POWPUMA"),
        POWSP ("POWSP"),
        PRIVCOV ("PRIVCOV"),
        PUBCOV ("PUBCOV"),
        QTRBIR ("QTRBIR"),
        RAC1_P ("RAC1P"),
        RAC2_P ("RAC2P"),
        RAC3_P ("RAC3P"),
        RACAIAN ("RACAIAN"),
        RACASN ("RACASN"),
        RACBLK ("RACBLK"),
        RACNH ("RACNH"),
        RACNUM ("RACNUM"),
        RACPI ("RACPI"),
        RACSOR ("RACSOR"),
        RACWHT ("RACWHT"),
        RC ("RC"),
        SCIENGP ("SCIENGP"),
        SCIENGRLP ("SCIENGRLP"),
        SFN ("SFN"),
        SFR ("SFR"),
        SOCP ("SOCP"),
        VPS ("VPS"),
        WAOB ("WAOB"),
        FAGEP ("FAGEP"),
        FANCP ("FANCP"),
        FCITP ("FCITP"),
        FCITWP ("FCITWP"),
        FCOWP ("FCOWP"),
        FDDRSP ("FDDRSP"),
        FDEARP ("FDEARP"),
        FDEYEP ("FDEYEP"),
        FDISP ("FDISP"),
        FDOUTP ("FDOUTP"),
        FDPHYP ("FDPHYP"),
        FDRATP ("FDRATP"),
        FDRATXP ("FDRATXP"),
        FDREMP ("FDREMP"),
        FENGP ("FENGP"),
        FESRP ("FESRP"),
        FFERP ("FFERP"),
        FFODP ("FFODP"),
        FGCLP ("FGCLP"),
        FGCMP ("FGCMP"),
        FGCRP ("FGCRP"),
        FHINS1_P ("FHINS1P"),
        FHINS2_P ("FHINS2P"),
        FHINS3_C ("FHINS3C"),
        FHINS3_P ("FHINS3P"),
        FHINS4_C ("FHINS4C"),
        FHINS4_P ("FHINS4P"),
        FHINS5_C ("FHINS5C"),
        FHINS5_P ("FHINS5P"),
        FHINS6_P ("FHINS6P"),
        FHINS7_P ("FHINS7P"),
        FHISP ("FHISP"),
        FINDP ("FINDP"),
        FINTP ("FINTP"),
        FJWDP ("FJWDP"),
        FJWMNP ("FJWMNP"),
        FJWRIP ("FJWRIP"),
        FJWTRP ("FJWTRP"),
        FLANP ("FLANP"),
        FLANXP ("FLANXP"),
        FMARHDP ("FMARHDP"),
        FMARHMP ("FMARHMP"),
        FMARHTP ("FMARHTP"),
        FMARHWP ("FMARHWP"),
        FMARHYP ("FMARHYP"),
        FMARP ("FMARP"),
        FMIGP ("FMIGP"),
        FMIGSP ("FMIGSP"),
        FMILPP ("FMILPP"),
        FMILSP ("FMILSP"),
        FOCCP ("FOCCP"),
        FOIP ("FOIP"),
        FPAP ("FPAP"),
        FPERNP ("FPERNP"),
        FPINCP ("FPINCP"),
        FPOBP ("FPOBP"),
        FPOWSP ("FPOWSP"),
        FPRIVCOVP ("FPRIVCOVP"),
        FPUBCOVP ("FPUBCOVP"),
        FRACP ("FRACP"),
        FRELP ("FRELP"),
        FRETP ("FRETP"),
        FSCHGP ("FSCHGP"),
        FSCHLP ("FSCHLP"),
        FSCHP ("FSCHP"),
        FSEMP ("FSEMP"),
        FSEXP ("FSEXP"),
        FSSIP ("FSSIP"),
        FSSP ("FSSP"),
        FWAGP ("FWAGP"),
        FWKHP ("FWKHP"),
        FWKLP ("FWKLP"),
        FWKWP ("FWKWP"),
        FWRKP ("FWRKP"),
        FYOEP ("FYOEP");
        
        private final String columnName;
        
        Identifier(String columnName) {
            this.columnName = columnName;
        }
        
        @Override
        public String dbmsName() {
            return "test";
        }
        
        @Override
        public String schemaName() {
            return "test";
        }
        
        @Override
        public String tableName() {
            return "ss13pusb";
        }
        
        @Override
        public String columnName() {
            return this.columnName;
        }
    }
}