package com.company.test.test.test.ss13husb.generated;

import com.company.test.test.test.ss13husb.Ss13husb;
import com.speedment.plugin.extspeeder.runtime.FieldMapper;
import com.speedment.plugin.extspeeder.runtime.servlet.ExtSpeederHttpServlet;
import javax.annotation.Generated;
import static com.speedment.encoder.JsonEncoder.jsonValue;

/**
 * The generated servlet representing an entity (for example, a row) in the
 * Table test.test.test.ss13husb.
 * <p>
 * This file has been automatically generated by Ext Speeder. Any changes
 * made to it will be overwritten.
 * 
 * @author Ext Speeder
 */
@Generated("Ext Speeder")
public class GeneratedSs13husbServlet extends ExtSpeederHttpServlet<Ss13husb> {
    
    private final static long serialVersionUID = 748930128;
    public static FieldMapper<Ss13husb> FIELD_MAPPER = columnName -> {
            switch (columnName) {
                case "RT" : return Ss13husb.RT;
                case "SERIALNO" : return Ss13husb.SERIALNO;
                case "DIVISION" : return Ss13husb.DIVISION;
                case "PUMA" : return Ss13husb.PUMA;
                case "REGION" : return Ss13husb.REGION;
                case "ST" : return Ss13husb.ST;
                case "ADJHSG" : return Ss13husb.ADJHSG;
                case "ADJINC" : return Ss13husb.ADJINC;
                case "WGTP" : return Ss13husb.WGTP;
                case "NP" : return Ss13husb.NP;
                case "TYPE" : return Ss13husb.TYPE;
                case "ACCESS" : return Ss13husb.ACCESS;
                case "ACR" : return Ss13husb.ACR;
                case "AGS" : return Ss13husb.AGS;
                case "BATH" : return Ss13husb.BATH;
                case "BDSP" : return Ss13husb.BDSP;
                case "BLD" : return Ss13husb.BLD;
                case "BROADBND" : return Ss13husb.BROADBND;
                case "BUS" : return Ss13husb.BUS;
                case "COMPOTHX" : return Ss13husb.COMPOTHX;
                case "CONP" : return Ss13husb.CONP;
                case "DIALUP" : return Ss13husb.DIALUP;
                case "DSL" : return Ss13husb.DSL;
                case "ELEP" : return Ss13husb.ELEP;
                case "FIBEROP" : return Ss13husb.FIBEROP;
                case "FS" : return Ss13husb.FS;
                case "FULP" : return Ss13husb.FULP;
                case "GASP" : return Ss13husb.GASP;
                case "HANDHELD" : return Ss13husb.HANDHELD;
                case "HFL" : return Ss13husb.HFL;
                case "INSP" : return Ss13husb.INSP;
                case "LAPTOP" : return Ss13husb.LAPTOP;
                case "MHP" : return Ss13husb.MHP;
                case "MODEM" : return Ss13husb.MODEM;
                case "MRGI" : return Ss13husb.MRGI;
                case "MRGP" : return Ss13husb.MRGP;
                case "MRGT" : return Ss13husb.MRGT;
                case "MRGX" : return Ss13husb.MRGX;
                case "OTHSVCEX" : return Ss13husb.OTHSVCEX;
                case "REFR" : return Ss13husb.REFR;
                case "RMSP" : return Ss13husb.RMSP;
                case "RNTM" : return Ss13husb.RNTM;
                case "RNTP" : return Ss13husb.RNTP;
                case "RWAT" : return Ss13husb.RWAT;
                case "RWATPR" : return Ss13husb.RWATPR;
                case "SATELLITE" : return Ss13husb.SATELLITE;
                case "SINK" : return Ss13husb.SINK;
                case "SMP" : return Ss13husb.SMP;
                case "STOV" : return Ss13husb.STOV;
                case "TEL" : return Ss13husb.TEL;
                case "TEN" : return Ss13husb.TEN;
                case "TOIL" : return Ss13husb.TOIL;
                case "VACS" : return Ss13husb.VACS;
                case "VALP" : return Ss13husb.VALP;
                case "VEH" : return Ss13husb.VEH;
                case "WATP" : return Ss13husb.WATP;
                case "YBL" : return Ss13husb.YBL;
                case "FES" : return Ss13husb.FES;
                case "FFINCP" : return Ss13husb.FFINCP;
                case "FGRNTP" : return Ss13husb.FGRNTP;
                case "FHINCP" : return Ss13husb.FHINCP;
                case "FINCP" : return Ss13husb.FINCP;
                case "FPARC" : return Ss13husb.FPARC;
                case "FSMOCP" : return Ss13husb.FSMOCP;
                case "GRNTP" : return Ss13husb.GRNTP;
                case "GRPIP" : return Ss13husb.GRPIP;
                case "HHL" : return Ss13husb.HHL;
                case "HHT" : return Ss13husb.HHT;
                case "HINCP" : return Ss13husb.HINCP;
                case "HUGCL" : return Ss13husb.HUGCL;
                case "HUPAC" : return Ss13husb.HUPAC;
                case "HUPAOC" : return Ss13husb.HUPAOC;
                case "HUPARC" : return Ss13husb.HUPARC;
                case "KIT" : return Ss13husb.KIT;
                case "LNGI" : return Ss13husb.LNGI;
                case "MULTG" : return Ss13husb.MULTG;
                case "MV" : return Ss13husb.MV;
                case "NOC" : return Ss13husb.NOC;
                case "NPF" : return Ss13husb.NPF;
                case "NPP" : return Ss13husb.NPP;
                case "NR" : return Ss13husb.NR;
                case "NRC" : return Ss13husb.NRC;
                case "OCPIP" : return Ss13husb.OCPIP;
                case "PARTNER" : return Ss13husb.PARTNER;
                case "PLM" : return Ss13husb.PLM;
                case "PSF" : return Ss13husb.PSF;
                case "R18" : return Ss13husb.R18;
                case "R60" : return Ss13husb.R60;
                case "R65" : return Ss13husb.R65;
                case "RESMODE" : return Ss13husb.RESMODE;
                case "SMOCP" : return Ss13husb.SMOCP;
                case "SMX" : return Ss13husb.SMX;
                case "SRNT" : return Ss13husb.SRNT;
                case "SSMC" : return Ss13husb.SSMC;
                case "SVAL" : return Ss13husb.SVAL;
                case "TAXP" : return Ss13husb.TAXP;
                case "WIF" : return Ss13husb.WIF;
                case "WKEXREL" : return Ss13husb.WKEXREL;
                case "WORKSTAT" : return Ss13husb.WORKSTAT;
                case "FACCESSP" : return Ss13husb.FACCESSP;
                case "FACRP" : return Ss13husb.FACRP;
                case "FAGSP" : return Ss13husb.FAGSP;
                case "FBATHP" : return Ss13husb.FBATHP;
                case "FBDSP" : return Ss13husb.FBDSP;
                case "FBLDP" : return Ss13husb.FBLDP;
                case "FBROADBNDP" : return Ss13husb.FBROADBNDP;
                case "FBUSP" : return Ss13husb.FBUSP;
                case "FCOMPOTHXP" : return Ss13husb.FCOMPOTHXP;
                case "FCONP" : return Ss13husb.FCONP;
                case "FDIALUPP" : return Ss13husb.FDIALUPP;
                case "FDSLP" : return Ss13husb.FDSLP;
                case "FELEP" : return Ss13husb.FELEP;
                case "FFIBEROPP" : return Ss13husb.FFIBEROPP;
                case "FFSP" : return Ss13husb.FFSP;
                case "FFULP" : return Ss13husb.FFULP;
                case "FGASP" : return Ss13husb.FGASP;
                case "FHANDHELDP" : return Ss13husb.FHANDHELDP;
                case "FHFLP" : return Ss13husb.FHFLP;
                case "FINSP" : return Ss13husb.FINSP;
                case "FKITP" : return Ss13husb.FKITP;
                case "FLAPTOPP" : return Ss13husb.FLAPTOPP;
                case "FMHP" : return Ss13husb.FMHP;
                case "FMODEMP" : return Ss13husb.FMODEMP;
                case "FMRGIP" : return Ss13husb.FMRGIP;
                case "FMRGP" : return Ss13husb.FMRGP;
                case "FMRGTP" : return Ss13husb.FMRGTP;
                case "FMRGXP" : return Ss13husb.FMRGXP;
                case "FMVP" : return Ss13husb.FMVP;
                case "FOTHSVCEXP" : return Ss13husb.FOTHSVCEXP;
                case "FPLMP" : return Ss13husb.FPLMP;
                case "FREFRP" : return Ss13husb.FREFRP;
                case "FRMSP" : return Ss13husb.FRMSP;
                case "FRNTMP" : return Ss13husb.FRNTMP;
                case "FRNTP" : return Ss13husb.FRNTP;
                case "FRWATP" : return Ss13husb.FRWATP;
                case "FRWATPRP" : return Ss13husb.FRWATPRP;
                case "FSATELLITEP" : return Ss13husb.FSATELLITEP;
                case "FSINKP" : return Ss13husb.FSINKP;
                case "FSMP" : return Ss13husb.FSMP;
                case "FSMXHP" : return Ss13husb.FSMXHP;
                case "FSMXSP" : return Ss13husb.FSMXSP;
                case "FSTOVP" : return Ss13husb.FSTOVP;
                case "FTAXP" : return Ss13husb.FTAXP;
                case "FTELP" : return Ss13husb.FTELP;
                case "FTENP" : return Ss13husb.FTENP;
                case "FTOILP" : return Ss13husb.FTOILP;
                case "FVACSP" : return Ss13husb.FVACSP;
                case "FVALP" : return Ss13husb.FVALP;
                case "FVEHP" : return Ss13husb.FVEHP;
                case "FWATP" : return Ss13husb.FWATP;
                case "FYBLP" : return Ss13husb.FYBLP;
                default : return null;
            }
    };
    
    @Override
    public Class<Ss13husb> entityClass() {
        return Ss13husb.class;
    }
    
    @Override
    public FieldMapper<Ss13husb> fieldMapper() {
        return FIELD_MAPPER;
    }
    
    @Override
    public String toJson(Ss13husb entity) {
        return entity == null ? "null" : new StringBuilder()
            .append('{')
            .append("\"RT\":").append(jsonValue(entity.getRt())).append(", ")
            .append("\"SERIALNO\":").append(jsonValue(entity.getSerialno())).append(", ")
            .append("\"DIVISION\":").append(jsonValue(entity.getDivision())).append(", ")
            .append("\"PUMA\":").append(jsonValue(entity.getPuma())).append(", ")
            .append("\"REGION\":").append(jsonValue(entity.getRegion())).append(", ")
            .append("\"ST\":").append(jsonValue(entity.getSt())).append(", ")
            .append("\"ADJHSG\":").append(jsonValue(entity.getAdjhsg())).append(", ")
            .append("\"ADJINC\":").append(jsonValue(entity.getAdjinc())).append(", ")
            .append("\"WGTP\":").append(jsonValue(entity.getWgtp())).append(", ")
            .append("\"NP\":").append(jsonValue(entity.getNp())).append(", ")
            .append("\"TYPE\":").append(jsonValue(entity.getType())).append(", ")
            .append("\"ACCESS\":").append(jsonValue(entity.getAccess())).append(", ")
            .append("\"ACR\":").append(jsonValue(entity.getAcr())).append(", ")
            .append("\"AGS\":").append(jsonValue(entity.getAgs())).append(", ")
            .append("\"BATH\":").append(jsonValue(entity.getBath())).append(", ")
            .append("\"BDSP\":").append(jsonValue(entity.getBdsp())).append(", ")
            .append("\"BLD\":").append(jsonValue(entity.getBld())).append(", ")
            .append("\"BROADBND\":").append(jsonValue(entity.getBroadbnd())).append(", ")
            .append("\"BUS\":").append(jsonValue(entity.getBus())).append(", ")
            .append("\"COMPOTHX\":").append(jsonValue(entity.getCompothx())).append(", ")
            .append("\"CONP\":").append(jsonValue(entity.getConp())).append(", ")
            .append("\"DIALUP\":").append(jsonValue(entity.getDialup())).append(", ")
            .append("\"DSL\":").append(jsonValue(entity.getDsl())).append(", ")
            .append("\"ELEP\":").append(jsonValue(entity.getElep())).append(", ")
            .append("\"FIBEROP\":").append(jsonValue(entity.getFiberop())).append(", ")
            .append("\"FS\":").append(jsonValue(entity.getFs())).append(", ")
            .append("\"FULP\":").append(jsonValue(entity.getFulp())).append(", ")
            .append("\"GASP\":").append(jsonValue(entity.getGasp())).append(", ")
            .append("\"HANDHELD\":").append(jsonValue(entity.getHandheld())).append(", ")
            .append("\"HFL\":").append(jsonValue(entity.getHfl())).append(", ")
            .append("\"INSP\":").append(jsonValue(entity.getInsp())).append(", ")
            .append("\"LAPTOP\":").append(jsonValue(entity.getLaptop())).append(", ")
            .append("\"MHP\":").append(jsonValue(entity.getMhp())).append(", ")
            .append("\"MODEM\":").append(jsonValue(entity.getModem())).append(", ")
            .append("\"MRGI\":").append(jsonValue(entity.getMrgi())).append(", ")
            .append("\"MRGP\":").append(jsonValue(entity.getMrgp())).append(", ")
            .append("\"MRGT\":").append(jsonValue(entity.getMrgt())).append(", ")
            .append("\"MRGX\":").append(jsonValue(entity.getMrgx())).append(", ")
            .append("\"OTHSVCEX\":").append(jsonValue(entity.getOthsvcex())).append(", ")
            .append("\"REFR\":").append(jsonValue(entity.getRefr())).append(", ")
            .append("\"RMSP\":").append(jsonValue(entity.getRmsp())).append(", ")
            .append("\"RNTM\":").append(jsonValue(entity.getRntm())).append(", ")
            .append("\"RNTP\":").append(jsonValue(entity.getRntp())).append(", ")
            .append("\"RWAT\":").append(jsonValue(entity.getRwat())).append(", ")
            .append("\"RWATPR\":").append(jsonValue(entity.getRwatpr())).append(", ")
            .append("\"SATELLITE\":").append(jsonValue(entity.getSatellite())).append(", ")
            .append("\"SINK\":").append(jsonValue(entity.getSink())).append(", ")
            .append("\"SMP\":").append(jsonValue(entity.getSmp())).append(", ")
            .append("\"STOV\":").append(jsonValue(entity.getStov())).append(", ")
            .append("\"TEL\":").append(jsonValue(entity.getTel())).append(", ")
            .append("\"TEN\":").append(jsonValue(entity.getTen())).append(", ")
            .append("\"TOIL\":").append(jsonValue(entity.getToil())).append(", ")
            .append("\"VACS\":").append(jsonValue(entity.getVacs())).append(", ")
            .append("\"VALP\":").append(jsonValue(entity.getValp())).append(", ")
            .append("\"VEH\":").append(jsonValue(entity.getVeh())).append(", ")
            .append("\"WATP\":").append(jsonValue(entity.getWatp())).append(", ")
            .append("\"YBL\":").append(jsonValue(entity.getYbl())).append(", ")
            .append("\"FES\":").append(jsonValue(entity.getFes())).append(", ")
            .append("\"FFINCP\":").append(jsonValue(entity.getFfincp())).append(", ")
            .append("\"FGRNTP\":").append(jsonValue(entity.getFgrntp())).append(", ")
            .append("\"FHINCP\":").append(jsonValue(entity.getFhincp())).append(", ")
            .append("\"FINCP\":").append(jsonValue(entity.getFincp())).append(", ")
            .append("\"FPARC\":").append(jsonValue(entity.getFparc())).append(", ")
            .append("\"FSMOCP\":").append(jsonValue(entity.getFsmocp())).append(", ")
            .append("\"GRNTP\":").append(jsonValue(entity.getGrntp())).append(", ")
            .append("\"GRPIP\":").append(jsonValue(entity.getGrpip())).append(", ")
            .append("\"HHL\":").append(jsonValue(entity.getHhl())).append(", ")
            .append("\"HHT\":").append(jsonValue(entity.getHht())).append(", ")
            .append("\"HINCP\":").append(jsonValue(entity.getHincp())).append(", ")
            .append("\"HUGCL\":").append(jsonValue(entity.getHugcl())).append(", ")
            .append("\"HUPAC\":").append(jsonValue(entity.getHupac())).append(", ")
            .append("\"HUPAOC\":").append(jsonValue(entity.getHupaoc())).append(", ")
            .append("\"HUPARC\":").append(jsonValue(entity.getHuparc())).append(", ")
            .append("\"KIT\":").append(jsonValue(entity.getKit())).append(", ")
            .append("\"LNGI\":").append(jsonValue(entity.getLngi())).append(", ")
            .append("\"MULTG\":").append(jsonValue(entity.getMultg())).append(", ")
            .append("\"MV\":").append(jsonValue(entity.getMv())).append(", ")
            .append("\"NOC\":").append(jsonValue(entity.getNoc())).append(", ")
            .append("\"NPF\":").append(jsonValue(entity.getNpf())).append(", ")
            .append("\"NPP\":").append(jsonValue(entity.getNpp())).append(", ")
            .append("\"NR\":").append(jsonValue(entity.getNr())).append(", ")
            .append("\"NRC\":").append(jsonValue(entity.getNrc())).append(", ")
            .append("\"OCPIP\":").append(jsonValue(entity.getOcpip())).append(", ")
            .append("\"PARTNER\":").append(jsonValue(entity.getPartner())).append(", ")
            .append("\"PLM\":").append(jsonValue(entity.getPlm())).append(", ")
            .append("\"PSF\":").append(jsonValue(entity.getPsf())).append(", ")
            .append("\"R18\":").append(jsonValue(entity.getR18())).append(", ")
            .append("\"R60\":").append(jsonValue(entity.getR60())).append(", ")
            .append("\"R65\":").append(jsonValue(entity.getR65())).append(", ")
            .append("\"RESMODE\":").append(jsonValue(entity.getResmode())).append(", ")
            .append("\"SMOCP\":").append(jsonValue(entity.getSmocp())).append(", ")
            .append("\"SMX\":").append(jsonValue(entity.getSmx())).append(", ")
            .append("\"SRNT\":").append(jsonValue(entity.getSrnt())).append(", ")
            .append("\"SSMC\":").append(jsonValue(entity.getSsmc())).append(", ")
            .append("\"SVAL\":").append(jsonValue(entity.getSval())).append(", ")
            .append("\"TAXP\":").append(jsonValue(entity.getTaxp())).append(", ")
            .append("\"WIF\":").append(jsonValue(entity.getWif())).append(", ")
            .append("\"WKEXREL\":").append(jsonValue(entity.getWkexrel())).append(", ")
            .append("\"WORKSTAT\":").append(jsonValue(entity.getWorkstat())).append(", ")
            .append("\"FACCESSP\":").append(jsonValue(entity.getFaccessp())).append(", ")
            .append("\"FACRP\":").append(jsonValue(entity.getFacrp())).append(", ")
            .append("\"FAGSP\":").append(jsonValue(entity.getFagsp())).append(", ")
            .append("\"FBATHP\":").append(jsonValue(entity.getFbathp())).append(", ")
            .append("\"FBDSP\":").append(jsonValue(entity.getFbdsp())).append(", ")
            .append("\"FBLDP\":").append(jsonValue(entity.getFbldp())).append(", ")
            .append("\"FBROADBNDP\":").append(jsonValue(entity.getFbroadbndp())).append(", ")
            .append("\"FBUSP\":").append(jsonValue(entity.getFbusp())).append(", ")
            .append("\"FCOMPOTHXP\":").append(jsonValue(entity.getFcompothxp())).append(", ")
            .append("\"FCONP\":").append(jsonValue(entity.getFconp())).append(", ")
            .append("\"FDIALUPP\":").append(jsonValue(entity.getFdialupp())).append(", ")
            .append("\"FDSLP\":").append(jsonValue(entity.getFdslp())).append(", ")
            .append("\"FELEP\":").append(jsonValue(entity.getFelep())).append(", ")
            .append("\"FFIBEROPP\":").append(jsonValue(entity.getFfiberopp())).append(", ")
            .append("\"FFSP\":").append(jsonValue(entity.getFfsp())).append(", ")
            .append("\"FFULP\":").append(jsonValue(entity.getFfulp())).append(", ")
            .append("\"FGASP\":").append(jsonValue(entity.getFgasp())).append(", ")
            .append("\"FHANDHELDP\":").append(jsonValue(entity.getFhandheldp())).append(", ")
            .append("\"FHFLP\":").append(jsonValue(entity.getFhflp())).append(", ")
            .append("\"FINSP\":").append(jsonValue(entity.getFinsp())).append(", ")
            .append("\"FKITP\":").append(jsonValue(entity.getFkitp())).append(", ")
            .append("\"FLAPTOPP\":").append(jsonValue(entity.getFlaptopp())).append(", ")
            .append("\"FMHP\":").append(jsonValue(entity.getFmhp())).append(", ")
            .append("\"FMODEMP\":").append(jsonValue(entity.getFmodemp())).append(", ")
            .append("\"FMRGIP\":").append(jsonValue(entity.getFmrgip())).append(", ")
            .append("\"FMRGP\":").append(jsonValue(entity.getFmrgp())).append(", ")
            .append("\"FMRGTP\":").append(jsonValue(entity.getFmrgtp())).append(", ")
            .append("\"FMRGXP\":").append(jsonValue(entity.getFmrgxp())).append(", ")
            .append("\"FMVP\":").append(jsonValue(entity.getFmvp())).append(", ")
            .append("\"FOTHSVCEXP\":").append(jsonValue(entity.getFothsvcexp())).append(", ")
            .append("\"FPLMP\":").append(jsonValue(entity.getFplmp())).append(", ")
            .append("\"FREFRP\":").append(jsonValue(entity.getFrefrp())).append(", ")
            .append("\"FRMSP\":").append(jsonValue(entity.getFrmsp())).append(", ")
            .append("\"FRNTMP\":").append(jsonValue(entity.getFrntmp())).append(", ")
            .append("\"FRNTP\":").append(jsonValue(entity.getFrntp())).append(", ")
            .append("\"FRWATP\":").append(jsonValue(entity.getFrwatp())).append(", ")
            .append("\"FRWATPRP\":").append(jsonValue(entity.getFrwatprp())).append(", ")
            .append("\"FSATELLITEP\":").append(jsonValue(entity.getFsatellitep())).append(", ")
            .append("\"FSINKP\":").append(jsonValue(entity.getFsinkp())).append(", ")
            .append("\"FSMP\":").append(jsonValue(entity.getFsmp())).append(", ")
            .append("\"FSMXHP\":").append(jsonValue(entity.getFsmxhp())).append(", ")
            .append("\"FSMXSP\":").append(jsonValue(entity.getFsmxsp())).append(", ")
            .append("\"FSTOVP\":").append(jsonValue(entity.getFstovp())).append(", ")
            .append("\"FTAXP\":").append(jsonValue(entity.getFtaxp())).append(", ")
            .append("\"FTELP\":").append(jsonValue(entity.getFtelp())).append(", ")
            .append("\"FTENP\":").append(jsonValue(entity.getFtenp())).append(", ")
            .append("\"FTOILP\":").append(jsonValue(entity.getFtoilp())).append(", ")
            .append("\"FVACSP\":").append(jsonValue(entity.getFvacsp())).append(", ")
            .append("\"FVALP\":").append(jsonValue(entity.getFvalp())).append(", ")
            .append("\"FVEHP\":").append(jsonValue(entity.getFvehp())).append(", ")
            .append("\"FWATP\":").append(jsonValue(entity.getFwatp())).append(", ")
            .append("\"FYBLP\":").append(jsonValue(entity.getFyblp()))
            .append('}')
        .toString();
    }
    
    @Override
    public String getServletInfo() {
        return "Servlet for the ss13husb table in the test schema.";
    }
}