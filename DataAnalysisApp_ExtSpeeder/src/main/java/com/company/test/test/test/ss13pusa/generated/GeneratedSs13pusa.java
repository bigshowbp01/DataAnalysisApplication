package com.company.test.test.test.ss13pusa.generated;

import com.company.test.test.test.ss13pusa.Ss13pusa;
import com.speedment.Entity;
import com.speedment.config.db.mapper.identity.IntegerIdentityMapper;
import com.speedment.field.ComparableField;
import com.speedment.field.FieldIdentifier;
import com.speedment.internal.core.field.ComparableFieldImpl;
import java.util.Optional;
import javax.annotation.Generated;

/**
 * The generated base interface representing an entity (for example, a row)
 * in the Table test.test.test.ss13pusa.
 * <p>
 * This file has been automatically generated by Ext Speeder. Any changes
 * made to it will be overwritten.
 * 
 * @author Ext Speeder
 */
@Generated("Ext Speeder")
public interface GeneratedSs13pusa extends Entity<Ss13pusa> {
    
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getRt()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> RT = new ComparableFieldImpl<>(Identifier.RT, o -> o.getRt().orElse(null), Ss13pusa::setRt, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getSerialno()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> SERIALNO = new ComparableFieldImpl<>(Identifier.SERIALNO, o -> o.getSerialno().orElse(null), Ss13pusa::setSerialno, new IntegerIdentityMapper(), true);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getSporder()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> SPORDER = new ComparableFieldImpl<>(Identifier.SPORDER, o -> o.getSporder().orElse(null), Ss13pusa::setSporder, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getPuma()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> PUMA = new ComparableFieldImpl<>(Identifier.PUMA, o -> o.getPuma().orElse(null), Ss13pusa::setPuma, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getSt()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> ST = new ComparableFieldImpl<>(Identifier.ST, o -> o.getSt().orElse(null), Ss13pusa::setSt, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getAdjinc()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> ADJINC = new ComparableFieldImpl<>(Identifier.ADJINC, o -> o.getAdjinc().orElse(null), Ss13pusa::setAdjinc, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getPwgtp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> PWGTP = new ComparableFieldImpl<>(Identifier.PWGTP, o -> o.getPwgtp().orElse(null), Ss13pusa::setPwgtp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getAgep()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> AGEP = new ComparableFieldImpl<>(Identifier.AGEP, o -> o.getAgep().orElse(null), Ss13pusa::setAgep, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getCit()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> CIT = new ComparableFieldImpl<>(Identifier.CIT, o -> o.getCit().orElse(null), Ss13pusa::setCit, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getCitwp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> CITWP = new ComparableFieldImpl<>(Identifier.CITWP, o -> o.getCitwp().orElse(null), Ss13pusa::setCitwp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getCow()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> COW = new ComparableFieldImpl<>(Identifier.COW, o -> o.getCow().orElse(null), Ss13pusa::setCow, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getDdrs()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> DDRS = new ComparableFieldImpl<>(Identifier.DDRS, o -> o.getDdrs().orElse(null), Ss13pusa::setDdrs, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getDear()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> DEAR = new ComparableFieldImpl<>(Identifier.DEAR, o -> o.getDear().orElse(null), Ss13pusa::setDear, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getDeye()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> DEYE = new ComparableFieldImpl<>(Identifier.DEYE, o -> o.getDeye().orElse(null), Ss13pusa::setDeye, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getDout()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> DOUT = new ComparableFieldImpl<>(Identifier.DOUT, o -> o.getDout().orElse(null), Ss13pusa::setDout, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getDphy()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> DPHY = new ComparableFieldImpl<>(Identifier.DPHY, o -> o.getDphy().orElse(null), Ss13pusa::setDphy, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getDrat()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> DRAT = new ComparableFieldImpl<>(Identifier.DRAT, o -> o.getDrat().orElse(null), Ss13pusa::setDrat, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getDratx()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> DRATX = new ComparableFieldImpl<>(Identifier.DRATX, o -> o.getDratx().orElse(null), Ss13pusa::setDratx, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getDrem()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> DREM = new ComparableFieldImpl<>(Identifier.DREM, o -> o.getDrem().orElse(null), Ss13pusa::setDrem, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getEng()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> ENG = new ComparableFieldImpl<>(Identifier.ENG, o -> o.getEng().orElse(null), Ss13pusa::setEng, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFer()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FER = new ComparableFieldImpl<>(Identifier.FER, o -> o.getFer().orElse(null), Ss13pusa::setFer, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getGcl()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> GCL = new ComparableFieldImpl<>(Identifier.GCL, o -> o.getGcl().orElse(null), Ss13pusa::setGcl, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getGcm()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> GCM = new ComparableFieldImpl<>(Identifier.GCM, o -> o.getGcm().orElse(null), Ss13pusa::setGcm, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getGcr()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> GCR = new ComparableFieldImpl<>(Identifier.GCR, o -> o.getGcr().orElse(null), Ss13pusa::setGcr, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getHins1()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> HINS1 = new ComparableFieldImpl<>(Identifier.HINS1, o -> o.getHins1().orElse(null), Ss13pusa::setHins1, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getHins2()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> HINS2 = new ComparableFieldImpl<>(Identifier.HINS2, o -> o.getHins2().orElse(null), Ss13pusa::setHins2, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getHins3()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> HINS3 = new ComparableFieldImpl<>(Identifier.HINS3, o -> o.getHins3().orElse(null), Ss13pusa::setHins3, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getHins4()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> HINS4 = new ComparableFieldImpl<>(Identifier.HINS4, o -> o.getHins4().orElse(null), Ss13pusa::setHins4, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getHins5()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> HINS5 = new ComparableFieldImpl<>(Identifier.HINS5, o -> o.getHins5().orElse(null), Ss13pusa::setHins5, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getHins6()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> HINS6 = new ComparableFieldImpl<>(Identifier.HINS6, o -> o.getHins6().orElse(null), Ss13pusa::setHins6, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getHins7()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> HINS7 = new ComparableFieldImpl<>(Identifier.HINS7, o -> o.getHins7().orElse(null), Ss13pusa::setHins7, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getIntp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> INTP = new ComparableFieldImpl<>(Identifier.INTP, o -> o.getIntp().orElse(null), Ss13pusa::setIntp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getJwmnp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> JWMNP = new ComparableFieldImpl<>(Identifier.JWMNP, o -> o.getJwmnp().orElse(null), Ss13pusa::setJwmnp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getJwrip()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> JWRIP = new ComparableFieldImpl<>(Identifier.JWRIP, o -> o.getJwrip().orElse(null), Ss13pusa::setJwrip, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getJwtr()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> JWTR = new ComparableFieldImpl<>(Identifier.JWTR, o -> o.getJwtr().orElse(null), Ss13pusa::setJwtr, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getLanx()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> LANX = new ComparableFieldImpl<>(Identifier.LANX, o -> o.getLanx().orElse(null), Ss13pusa::setLanx, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getMar()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> MAR = new ComparableFieldImpl<>(Identifier.MAR, o -> o.getMar().orElse(null), Ss13pusa::setMar, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getMarhd()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> MARHD = new ComparableFieldImpl<>(Identifier.MARHD, o -> o.getMarhd().orElse(null), Ss13pusa::setMarhd, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getMarhm()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> MARHM = new ComparableFieldImpl<>(Identifier.MARHM, o -> o.getMarhm().orElse(null), Ss13pusa::setMarhm, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getMarht()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> MARHT = new ComparableFieldImpl<>(Identifier.MARHT, o -> o.getMarht().orElse(null), Ss13pusa::setMarht, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getMarhw()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> MARHW = new ComparableFieldImpl<>(Identifier.MARHW, o -> o.getMarhw().orElse(null), Ss13pusa::setMarhw, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getMarhyp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> MARHYP = new ComparableFieldImpl<>(Identifier.MARHYP, o -> o.getMarhyp().orElse(null), Ss13pusa::setMarhyp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getMig()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> MIG = new ComparableFieldImpl<>(Identifier.MIG, o -> o.getMig().orElse(null), Ss13pusa::setMig, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getMil()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> MIL = new ComparableFieldImpl<>(Identifier.MIL, o -> o.getMil().orElse(null), Ss13pusa::setMil, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getMlpa()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> MLPA = new ComparableFieldImpl<>(Identifier.MLPA, o -> o.getMlpa().orElse(null), Ss13pusa::setMlpa, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getMlpb()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> MLPB = new ComparableFieldImpl<>(Identifier.MLPB, o -> o.getMlpb().orElse(null), Ss13pusa::setMlpb, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getMlpcd()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> MLPCD = new ComparableFieldImpl<>(Identifier.MLPCD, o -> o.getMlpcd().orElse(null), Ss13pusa::setMlpcd, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getMlpe()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> MLPE = new ComparableFieldImpl<>(Identifier.MLPE, o -> o.getMlpe().orElse(null), Ss13pusa::setMlpe, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getMlpfg()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> MLPFG = new ComparableFieldImpl<>(Identifier.MLPFG, o -> o.getMlpfg().orElse(null), Ss13pusa::setMlpfg, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getMlph()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> MLPH = new ComparableFieldImpl<>(Identifier.MLPH, o -> o.getMlph().orElse(null), Ss13pusa::setMlph, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getMlpi()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> MLPI = new ComparableFieldImpl<>(Identifier.MLPI, o -> o.getMlpi().orElse(null), Ss13pusa::setMlpi, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getMlpj()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> MLPJ = new ComparableFieldImpl<>(Identifier.MLPJ, o -> o.getMlpj().orElse(null), Ss13pusa::setMlpj, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getMlpk()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> MLPK = new ComparableFieldImpl<>(Identifier.MLPK, o -> o.getMlpk().orElse(null), Ss13pusa::setMlpk, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getNwab()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> NWAB = new ComparableFieldImpl<>(Identifier.NWAB, o -> o.getNwab().orElse(null), Ss13pusa::setNwab, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getNwav()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> NWAV = new ComparableFieldImpl<>(Identifier.NWAV, o -> o.getNwav().orElse(null), Ss13pusa::setNwav, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getNwla()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> NWLA = new ComparableFieldImpl<>(Identifier.NWLA, o -> o.getNwla().orElse(null), Ss13pusa::setNwla, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getNwlk()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> NWLK = new ComparableFieldImpl<>(Identifier.NWLK, o -> o.getNwlk().orElse(null), Ss13pusa::setNwlk, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getNwre()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> NWRE = new ComparableFieldImpl<>(Identifier.NWRE, o -> o.getNwre().orElse(null), Ss13pusa::setNwre, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getOip()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> OIP = new ComparableFieldImpl<>(Identifier.OIP, o -> o.getOip().orElse(null), Ss13pusa::setOip, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getPap()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> PAP = new ComparableFieldImpl<>(Identifier.PAP, o -> o.getPap().orElse(null), Ss13pusa::setPap, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getRelp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> RELP = new ComparableFieldImpl<>(Identifier.RELP, o -> o.getRelp().orElse(null), Ss13pusa::setRelp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getRetp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> RETP = new ComparableFieldImpl<>(Identifier.RETP, o -> o.getRetp().orElse(null), Ss13pusa::setRetp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getSch()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> SCH = new ComparableFieldImpl<>(Identifier.SCH, o -> o.getSch().orElse(null), Ss13pusa::setSch, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getSchg()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> SCHG = new ComparableFieldImpl<>(Identifier.SCHG, o -> o.getSchg().orElse(null), Ss13pusa::setSchg, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getSchl()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> SCHL = new ComparableFieldImpl<>(Identifier.SCHL, o -> o.getSchl().orElse(null), Ss13pusa::setSchl, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getSemp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> SEMP = new ComparableFieldImpl<>(Identifier.SEMP, o -> o.getSemp().orElse(null), Ss13pusa::setSemp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getSex()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> SEX = new ComparableFieldImpl<>(Identifier.SEX, o -> o.getSex().orElse(null), Ss13pusa::setSex, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getSsip()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> SSIP = new ComparableFieldImpl<>(Identifier.SSIP, o -> o.getSsip().orElse(null), Ss13pusa::setSsip, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getSsp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> SSP = new ComparableFieldImpl<>(Identifier.SSP, o -> o.getSsp().orElse(null), Ss13pusa::setSsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getWagp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> WAGP = new ComparableFieldImpl<>(Identifier.WAGP, o -> o.getWagp().orElse(null), Ss13pusa::setWagp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getWkhp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> WKHP = new ComparableFieldImpl<>(Identifier.WKHP, o -> o.getWkhp().orElse(null), Ss13pusa::setWkhp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getWkl()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> WKL = new ComparableFieldImpl<>(Identifier.WKL, o -> o.getWkl().orElse(null), Ss13pusa::setWkl, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getWkw()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> WKW = new ComparableFieldImpl<>(Identifier.WKW, o -> o.getWkw().orElse(null), Ss13pusa::setWkw, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getWrk()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> WRK = new ComparableFieldImpl<>(Identifier.WRK, o -> o.getWrk().orElse(null), Ss13pusa::setWrk, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getYoep()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> YOEP = new ComparableFieldImpl<>(Identifier.YOEP, o -> o.getYoep().orElse(null), Ss13pusa::setYoep, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getAnc()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> ANC = new ComparableFieldImpl<>(Identifier.ANC, o -> o.getAnc().orElse(null), Ss13pusa::setAnc, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getAnc1P()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> ANC1_P = new ComparableFieldImpl<>(Identifier.ANC1_P, o -> o.getAnc1P().orElse(null), Ss13pusa::setAnc1P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getAnc2P()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> ANC2_P = new ComparableFieldImpl<>(Identifier.ANC2_P, o -> o.getAnc2P().orElse(null), Ss13pusa::setAnc2P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getDecade()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> DECADE = new ComparableFieldImpl<>(Identifier.DECADE, o -> o.getDecade().orElse(null), Ss13pusa::setDecade, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getDis()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> DIS = new ComparableFieldImpl<>(Identifier.DIS, o -> o.getDis().orElse(null), Ss13pusa::setDis, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getDrivesp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> DRIVESP = new ComparableFieldImpl<>(Identifier.DRIVESP, o -> o.getDrivesp().orElse(null), Ss13pusa::setDrivesp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getEsp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> ESP = new ComparableFieldImpl<>(Identifier.ESP, o -> o.getEsp().orElse(null), Ss13pusa::setEsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getEsr()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> ESR = new ComparableFieldImpl<>(Identifier.ESR, o -> o.getEsr().orElse(null), Ss13pusa::setEsr, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFod1P()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FOD1_P = new ComparableFieldImpl<>(Identifier.FOD1_P, o -> o.getFod1P().orElse(null), Ss13pusa::setFod1P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFod2P()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FOD2_P = new ComparableFieldImpl<>(Identifier.FOD2_P, o -> o.getFod2P().orElse(null), Ss13pusa::setFod2P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getHicov()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> HICOV = new ComparableFieldImpl<>(Identifier.HICOV, o -> o.getHicov().orElse(null), Ss13pusa::setHicov, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getHisp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> HISP = new ComparableFieldImpl<>(Identifier.HISP, o -> o.getHisp().orElse(null), Ss13pusa::setHisp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getIndp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> INDP = new ComparableFieldImpl<>(Identifier.INDP, o -> o.getIndp().orElse(null), Ss13pusa::setIndp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getJwap()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> JWAP = new ComparableFieldImpl<>(Identifier.JWAP, o -> o.getJwap().orElse(null), Ss13pusa::setJwap, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getJwdp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> JWDP = new ComparableFieldImpl<>(Identifier.JWDP, o -> o.getJwdp().orElse(null), Ss13pusa::setJwdp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getLanp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> LANP = new ComparableFieldImpl<>(Identifier.LANP, o -> o.getLanp().orElse(null), Ss13pusa::setLanp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getMigpuma()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> MIGPUMA = new ComparableFieldImpl<>(Identifier.MIGPUMA, o -> o.getMigpuma().orElse(null), Ss13pusa::setMigpuma, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getMigsp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> MIGSP = new ComparableFieldImpl<>(Identifier.MIGSP, o -> o.getMigsp().orElse(null), Ss13pusa::setMigsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getMsp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> MSP = new ComparableFieldImpl<>(Identifier.MSP, o -> o.getMsp().orElse(null), Ss13pusa::setMsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getNaicsp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> NAICSP = new ComparableFieldImpl<>(Identifier.NAICSP, o -> o.getNaicsp().orElse(null), Ss13pusa::setNaicsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getNativity()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> NATIVITY = new ComparableFieldImpl<>(Identifier.NATIVITY, o -> o.getNativity().orElse(null), Ss13pusa::setNativity, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getNop()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> NOP = new ComparableFieldImpl<>(Identifier.NOP, o -> o.getNop().orElse(null), Ss13pusa::setNop, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getOc()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> OC = new ComparableFieldImpl<>(Identifier.OC, o -> o.getOc().orElse(null), Ss13pusa::setOc, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getOccp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> OCCP = new ComparableFieldImpl<>(Identifier.OCCP, o -> o.getOccp().orElse(null), Ss13pusa::setOccp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getPaoc()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> PAOC = new ComparableFieldImpl<>(Identifier.PAOC, o -> o.getPaoc().orElse(null), Ss13pusa::setPaoc, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getPernp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> PERNP = new ComparableFieldImpl<>(Identifier.PERNP, o -> o.getPernp().orElse(null), Ss13pusa::setPernp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getPincp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> PINCP = new ComparableFieldImpl<>(Identifier.PINCP, o -> o.getPincp().orElse(null), Ss13pusa::setPincp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getPobp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> POBP = new ComparableFieldImpl<>(Identifier.POBP, o -> o.getPobp().orElse(null), Ss13pusa::setPobp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getPovpip()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> POVPIP = new ComparableFieldImpl<>(Identifier.POVPIP, o -> o.getPovpip().orElse(null), Ss13pusa::setPovpip, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getPowpuma()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> POWPUMA = new ComparableFieldImpl<>(Identifier.POWPUMA, o -> o.getPowpuma().orElse(null), Ss13pusa::setPowpuma, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getPowsp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> POWSP = new ComparableFieldImpl<>(Identifier.POWSP, o -> o.getPowsp().orElse(null), Ss13pusa::setPowsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getPrivcov()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> PRIVCOV = new ComparableFieldImpl<>(Identifier.PRIVCOV, o -> o.getPrivcov().orElse(null), Ss13pusa::setPrivcov, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getPubcov()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> PUBCOV = new ComparableFieldImpl<>(Identifier.PUBCOV, o -> o.getPubcov().orElse(null), Ss13pusa::setPubcov, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getQtrbir()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> QTRBIR = new ComparableFieldImpl<>(Identifier.QTRBIR, o -> o.getQtrbir().orElse(null), Ss13pusa::setQtrbir, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getRac1P()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> RAC1_P = new ComparableFieldImpl<>(Identifier.RAC1_P, o -> o.getRac1P().orElse(null), Ss13pusa::setRac1P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getRac2P()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> RAC2_P = new ComparableFieldImpl<>(Identifier.RAC2_P, o -> o.getRac2P().orElse(null), Ss13pusa::setRac2P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getRac3P()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> RAC3_P = new ComparableFieldImpl<>(Identifier.RAC3_P, o -> o.getRac3P().orElse(null), Ss13pusa::setRac3P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getRacaian()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> RACAIAN = new ComparableFieldImpl<>(Identifier.RACAIAN, o -> o.getRacaian().orElse(null), Ss13pusa::setRacaian, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getRacasn()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> RACASN = new ComparableFieldImpl<>(Identifier.RACASN, o -> o.getRacasn().orElse(null), Ss13pusa::setRacasn, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getRacblk()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> RACBLK = new ComparableFieldImpl<>(Identifier.RACBLK, o -> o.getRacblk().orElse(null), Ss13pusa::setRacblk, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getRacnh()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> RACNH = new ComparableFieldImpl<>(Identifier.RACNH, o -> o.getRacnh().orElse(null), Ss13pusa::setRacnh, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getRacnum()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> RACNUM = new ComparableFieldImpl<>(Identifier.RACNUM, o -> o.getRacnum().orElse(null), Ss13pusa::setRacnum, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getRacpi()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> RACPI = new ComparableFieldImpl<>(Identifier.RACPI, o -> o.getRacpi().orElse(null), Ss13pusa::setRacpi, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getRacsor()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> RACSOR = new ComparableFieldImpl<>(Identifier.RACSOR, o -> o.getRacsor().orElse(null), Ss13pusa::setRacsor, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getRacwht()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> RACWHT = new ComparableFieldImpl<>(Identifier.RACWHT, o -> o.getRacwht().orElse(null), Ss13pusa::setRacwht, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getRc()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> RC = new ComparableFieldImpl<>(Identifier.RC, o -> o.getRc().orElse(null), Ss13pusa::setRc, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getSciengp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> SCIENGP = new ComparableFieldImpl<>(Identifier.SCIENGP, o -> o.getSciengp().orElse(null), Ss13pusa::setSciengp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getSciengrlp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> SCIENGRLP = new ComparableFieldImpl<>(Identifier.SCIENGRLP, o -> o.getSciengrlp().orElse(null), Ss13pusa::setSciengrlp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getSfn()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> SFN = new ComparableFieldImpl<>(Identifier.SFN, o -> o.getSfn().orElse(null), Ss13pusa::setSfn, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getSfr()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> SFR = new ComparableFieldImpl<>(Identifier.SFR, o -> o.getSfr().orElse(null), Ss13pusa::setSfr, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getSocp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> SOCP = new ComparableFieldImpl<>(Identifier.SOCP, o -> o.getSocp().orElse(null), Ss13pusa::setSocp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getVps()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> VPS = new ComparableFieldImpl<>(Identifier.VPS, o -> o.getVps().orElse(null), Ss13pusa::setVps, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getWaob()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> WAOB = new ComparableFieldImpl<>(Identifier.WAOB, o -> o.getWaob().orElse(null), Ss13pusa::setWaob, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFagep()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FAGEP = new ComparableFieldImpl<>(Identifier.FAGEP, o -> o.getFagep().orElse(null), Ss13pusa::setFagep, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFancp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FANCP = new ComparableFieldImpl<>(Identifier.FANCP, o -> o.getFancp().orElse(null), Ss13pusa::setFancp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFcitp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FCITP = new ComparableFieldImpl<>(Identifier.FCITP, o -> o.getFcitp().orElse(null), Ss13pusa::setFcitp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFcitwp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FCITWP = new ComparableFieldImpl<>(Identifier.FCITWP, o -> o.getFcitwp().orElse(null), Ss13pusa::setFcitwp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFcowp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FCOWP = new ComparableFieldImpl<>(Identifier.FCOWP, o -> o.getFcowp().orElse(null), Ss13pusa::setFcowp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFddrsp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FDDRSP = new ComparableFieldImpl<>(Identifier.FDDRSP, o -> o.getFddrsp().orElse(null), Ss13pusa::setFddrsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFdearp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FDEARP = new ComparableFieldImpl<>(Identifier.FDEARP, o -> o.getFdearp().orElse(null), Ss13pusa::setFdearp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFdeyep()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FDEYEP = new ComparableFieldImpl<>(Identifier.FDEYEP, o -> o.getFdeyep().orElse(null), Ss13pusa::setFdeyep, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFdisp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FDISP = new ComparableFieldImpl<>(Identifier.FDISP, o -> o.getFdisp().orElse(null), Ss13pusa::setFdisp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFdoutp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FDOUTP = new ComparableFieldImpl<>(Identifier.FDOUTP, o -> o.getFdoutp().orElse(null), Ss13pusa::setFdoutp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFdphyp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FDPHYP = new ComparableFieldImpl<>(Identifier.FDPHYP, o -> o.getFdphyp().orElse(null), Ss13pusa::setFdphyp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFdratp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FDRATP = new ComparableFieldImpl<>(Identifier.FDRATP, o -> o.getFdratp().orElse(null), Ss13pusa::setFdratp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFdratxp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FDRATXP = new ComparableFieldImpl<>(Identifier.FDRATXP, o -> o.getFdratxp().orElse(null), Ss13pusa::setFdratxp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFdremp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FDREMP = new ComparableFieldImpl<>(Identifier.FDREMP, o -> o.getFdremp().orElse(null), Ss13pusa::setFdremp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFengp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FENGP = new ComparableFieldImpl<>(Identifier.FENGP, o -> o.getFengp().orElse(null), Ss13pusa::setFengp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFesrp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FESRP = new ComparableFieldImpl<>(Identifier.FESRP, o -> o.getFesrp().orElse(null), Ss13pusa::setFesrp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFferp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FFERP = new ComparableFieldImpl<>(Identifier.FFERP, o -> o.getFferp().orElse(null), Ss13pusa::setFferp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFfodp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FFODP = new ComparableFieldImpl<>(Identifier.FFODP, o -> o.getFfodp().orElse(null), Ss13pusa::setFfodp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFgclp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FGCLP = new ComparableFieldImpl<>(Identifier.FGCLP, o -> o.getFgclp().orElse(null), Ss13pusa::setFgclp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFgcmp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FGCMP = new ComparableFieldImpl<>(Identifier.FGCMP, o -> o.getFgcmp().orElse(null), Ss13pusa::setFgcmp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFgcrp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FGCRP = new ComparableFieldImpl<>(Identifier.FGCRP, o -> o.getFgcrp().orElse(null), Ss13pusa::setFgcrp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFhins1P()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FHINS1_P = new ComparableFieldImpl<>(Identifier.FHINS1_P, o -> o.getFhins1P().orElse(null), Ss13pusa::setFhins1P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFhins2P()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FHINS2_P = new ComparableFieldImpl<>(Identifier.FHINS2_P, o -> o.getFhins2P().orElse(null), Ss13pusa::setFhins2P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFhins3C()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FHINS3_C = new ComparableFieldImpl<>(Identifier.FHINS3_C, o -> o.getFhins3C().orElse(null), Ss13pusa::setFhins3C, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFhins3P()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FHINS3_P = new ComparableFieldImpl<>(Identifier.FHINS3_P, o -> o.getFhins3P().orElse(null), Ss13pusa::setFhins3P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFhins4C()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FHINS4_C = new ComparableFieldImpl<>(Identifier.FHINS4_C, o -> o.getFhins4C().orElse(null), Ss13pusa::setFhins4C, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFhins4P()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FHINS4_P = new ComparableFieldImpl<>(Identifier.FHINS4_P, o -> o.getFhins4P().orElse(null), Ss13pusa::setFhins4P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFhins5C()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FHINS5_C = new ComparableFieldImpl<>(Identifier.FHINS5_C, o -> o.getFhins5C().orElse(null), Ss13pusa::setFhins5C, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFhins5P()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FHINS5_P = new ComparableFieldImpl<>(Identifier.FHINS5_P, o -> o.getFhins5P().orElse(null), Ss13pusa::setFhins5P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFhins6P()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FHINS6_P = new ComparableFieldImpl<>(Identifier.FHINS6_P, o -> o.getFhins6P().orElse(null), Ss13pusa::setFhins6P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFhins7P()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FHINS7_P = new ComparableFieldImpl<>(Identifier.FHINS7_P, o -> o.getFhins7P().orElse(null), Ss13pusa::setFhins7P, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFhisp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FHISP = new ComparableFieldImpl<>(Identifier.FHISP, o -> o.getFhisp().orElse(null), Ss13pusa::setFhisp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFindp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FINDP = new ComparableFieldImpl<>(Identifier.FINDP, o -> o.getFindp().orElse(null), Ss13pusa::setFindp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFintp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FINTP = new ComparableFieldImpl<>(Identifier.FINTP, o -> o.getFintp().orElse(null), Ss13pusa::setFintp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFjwdp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FJWDP = new ComparableFieldImpl<>(Identifier.FJWDP, o -> o.getFjwdp().orElse(null), Ss13pusa::setFjwdp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFjwmnp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FJWMNP = new ComparableFieldImpl<>(Identifier.FJWMNP, o -> o.getFjwmnp().orElse(null), Ss13pusa::setFjwmnp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFjwrip()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FJWRIP = new ComparableFieldImpl<>(Identifier.FJWRIP, o -> o.getFjwrip().orElse(null), Ss13pusa::setFjwrip, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFjwtrp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FJWTRP = new ComparableFieldImpl<>(Identifier.FJWTRP, o -> o.getFjwtrp().orElse(null), Ss13pusa::setFjwtrp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFlanp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FLANP = new ComparableFieldImpl<>(Identifier.FLANP, o -> o.getFlanp().orElse(null), Ss13pusa::setFlanp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFlanxp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FLANXP = new ComparableFieldImpl<>(Identifier.FLANXP, o -> o.getFlanxp().orElse(null), Ss13pusa::setFlanxp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFmarhdp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FMARHDP = new ComparableFieldImpl<>(Identifier.FMARHDP, o -> o.getFmarhdp().orElse(null), Ss13pusa::setFmarhdp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFmarhmp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FMARHMP = new ComparableFieldImpl<>(Identifier.FMARHMP, o -> o.getFmarhmp().orElse(null), Ss13pusa::setFmarhmp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFmarhtp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FMARHTP = new ComparableFieldImpl<>(Identifier.FMARHTP, o -> o.getFmarhtp().orElse(null), Ss13pusa::setFmarhtp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFmarhwp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FMARHWP = new ComparableFieldImpl<>(Identifier.FMARHWP, o -> o.getFmarhwp().orElse(null), Ss13pusa::setFmarhwp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFmarhyp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FMARHYP = new ComparableFieldImpl<>(Identifier.FMARHYP, o -> o.getFmarhyp().orElse(null), Ss13pusa::setFmarhyp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFmarp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FMARP = new ComparableFieldImpl<>(Identifier.FMARP, o -> o.getFmarp().orElse(null), Ss13pusa::setFmarp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFmigp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FMIGP = new ComparableFieldImpl<>(Identifier.FMIGP, o -> o.getFmigp().orElse(null), Ss13pusa::setFmigp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFmigsp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FMIGSP = new ComparableFieldImpl<>(Identifier.FMIGSP, o -> o.getFmigsp().orElse(null), Ss13pusa::setFmigsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFmilpp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FMILPP = new ComparableFieldImpl<>(Identifier.FMILPP, o -> o.getFmilpp().orElse(null), Ss13pusa::setFmilpp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFmilsp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FMILSP = new ComparableFieldImpl<>(Identifier.FMILSP, o -> o.getFmilsp().orElse(null), Ss13pusa::setFmilsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFoccp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FOCCP = new ComparableFieldImpl<>(Identifier.FOCCP, o -> o.getFoccp().orElse(null), Ss13pusa::setFoccp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFoip()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FOIP = new ComparableFieldImpl<>(Identifier.FOIP, o -> o.getFoip().orElse(null), Ss13pusa::setFoip, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFpap()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FPAP = new ComparableFieldImpl<>(Identifier.FPAP, o -> o.getFpap().orElse(null), Ss13pusa::setFpap, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFpernp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FPERNP = new ComparableFieldImpl<>(Identifier.FPERNP, o -> o.getFpernp().orElse(null), Ss13pusa::setFpernp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFpincp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FPINCP = new ComparableFieldImpl<>(Identifier.FPINCP, o -> o.getFpincp().orElse(null), Ss13pusa::setFpincp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFpobp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FPOBP = new ComparableFieldImpl<>(Identifier.FPOBP, o -> o.getFpobp().orElse(null), Ss13pusa::setFpobp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFpowsp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FPOWSP = new ComparableFieldImpl<>(Identifier.FPOWSP, o -> o.getFpowsp().orElse(null), Ss13pusa::setFpowsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFprivcovp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FPRIVCOVP = new ComparableFieldImpl<>(Identifier.FPRIVCOVP, o -> o.getFprivcovp().orElse(null), Ss13pusa::setFprivcovp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFpubcovp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FPUBCOVP = new ComparableFieldImpl<>(Identifier.FPUBCOVP, o -> o.getFpubcovp().orElse(null), Ss13pusa::setFpubcovp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFracp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FRACP = new ComparableFieldImpl<>(Identifier.FRACP, o -> o.getFracp().orElse(null), Ss13pusa::setFracp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFrelp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FRELP = new ComparableFieldImpl<>(Identifier.FRELP, o -> o.getFrelp().orElse(null), Ss13pusa::setFrelp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFretp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FRETP = new ComparableFieldImpl<>(Identifier.FRETP, o -> o.getFretp().orElse(null), Ss13pusa::setFretp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFschgp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FSCHGP = new ComparableFieldImpl<>(Identifier.FSCHGP, o -> o.getFschgp().orElse(null), Ss13pusa::setFschgp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFschlp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FSCHLP = new ComparableFieldImpl<>(Identifier.FSCHLP, o -> o.getFschlp().orElse(null), Ss13pusa::setFschlp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFschp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FSCHP = new ComparableFieldImpl<>(Identifier.FSCHP, o -> o.getFschp().orElse(null), Ss13pusa::setFschp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFsemp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FSEMP = new ComparableFieldImpl<>(Identifier.FSEMP, o -> o.getFsemp().orElse(null), Ss13pusa::setFsemp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFsexp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FSEXP = new ComparableFieldImpl<>(Identifier.FSEXP, o -> o.getFsexp().orElse(null), Ss13pusa::setFsexp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFssip()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FSSIP = new ComparableFieldImpl<>(Identifier.FSSIP, o -> o.getFssip().orElse(null), Ss13pusa::setFssip, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFssp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FSSP = new ComparableFieldImpl<>(Identifier.FSSP, o -> o.getFssp().orElse(null), Ss13pusa::setFssp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFwagp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FWAGP = new ComparableFieldImpl<>(Identifier.FWAGP, o -> o.getFwagp().orElse(null), Ss13pusa::setFwagp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFwkhp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FWKHP = new ComparableFieldImpl<>(Identifier.FWKHP, o -> o.getFwkhp().orElse(null), Ss13pusa::setFwkhp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFwklp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FWKLP = new ComparableFieldImpl<>(Identifier.FWKLP, o -> o.getFwklp().orElse(null), Ss13pusa::setFwklp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFwkwp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FWKWP = new ComparableFieldImpl<>(Identifier.FWKWP, o -> o.getFwkwp().orElse(null), Ss13pusa::setFwkwp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFwrkp()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FWRKP = new ComparableFieldImpl<>(Identifier.FWRKP, o -> o.getFwrkp().orElse(null), Ss13pusa::setFwrkp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13pusa} field that can be obtained
     * using the {@link Ss13pusa#getFyoep()} method.
     */
    final ComparableField<Ss13pusa, Integer, Integer> FYOEP = new ComparableFieldImpl<>(Identifier.FYOEP, o -> o.getFyoep().orElse(null), Ss13pusa::setFyoep, new IntegerIdentityMapper(), false);
    
    /**
     * Returns the rt of this Ss13pusa. The rt field corresponds to the database
     * column test.test.ss13pusa.RT.
     * 
     * @return the rt of this Ss13pusa
     */
    Optional<Integer> getRt();
    
    /**
     * Returns the serialno of this Ss13pusa. The serialno field corresponds to
     * the database column test.test.ss13pusa.SERIALNO.
     * 
     * @return the serialno of this Ss13pusa
     */
    Optional<Integer> getSerialno();
    
    /**
     * Returns the sporder of this Ss13pusa. The sporder field corresponds to the
     * database column test.test.ss13pusa.SPORDER.
     * 
     * @return the sporder of this Ss13pusa
     */
    Optional<Integer> getSporder();
    
    /**
     * Returns the puma of this Ss13pusa. The puma field corresponds to the
     * database column test.test.ss13pusa.PUMA.
     * 
     * @return the puma of this Ss13pusa
     */
    Optional<Integer> getPuma();
    
    /**
     * Returns the st of this Ss13pusa. The st field corresponds to the database
     * column test.test.ss13pusa.ST.
     * 
     * @return the st of this Ss13pusa
     */
    Optional<Integer> getSt();
    
    /**
     * Returns the adjinc of this Ss13pusa. The adjinc field corresponds to the
     * database column test.test.ss13pusa.ADJINC.
     * 
     * @return the adjinc of this Ss13pusa
     */
    Optional<Integer> getAdjinc();
    
    /**
     * Returns the pwgtp of this Ss13pusa. The pwgtp field corresponds to the
     * database column test.test.ss13pusa.PWGTP.
     * 
     * @return the pwgtp of this Ss13pusa
     */
    Optional<Integer> getPwgtp();
    
    /**
     * Returns the agep of this Ss13pusa. The agep field corresponds to the
     * database column test.test.ss13pusa.AGEP.
     * 
     * @return the agep of this Ss13pusa
     */
    Optional<Integer> getAgep();
    
    /**
     * Returns the cit of this Ss13pusa. The cit field corresponds to the
     * database column test.test.ss13pusa.CIT.
     * 
     * @return the cit of this Ss13pusa
     */
    Optional<Integer> getCit();
    
    /**
     * Returns the citwp of this Ss13pusa. The citwp field corresponds to the
     * database column test.test.ss13pusa.CITWP.
     * 
     * @return the citwp of this Ss13pusa
     */
    Optional<Integer> getCitwp();
    
    /**
     * Returns the cow of this Ss13pusa. The cow field corresponds to the
     * database column test.test.ss13pusa.COW.
     * 
     * @return the cow of this Ss13pusa
     */
    Optional<Integer> getCow();
    
    /**
     * Returns the ddrs of this Ss13pusa. The ddrs field corresponds to the
     * database column test.test.ss13pusa.DDRS.
     * 
     * @return the ddrs of this Ss13pusa
     */
    Optional<Integer> getDdrs();
    
    /**
     * Returns the dear of this Ss13pusa. The dear field corresponds to the
     * database column test.test.ss13pusa.DEAR.
     * 
     * @return the dear of this Ss13pusa
     */
    Optional<Integer> getDear();
    
    /**
     * Returns the deye of this Ss13pusa. The deye field corresponds to the
     * database column test.test.ss13pusa.DEYE.
     * 
     * @return the deye of this Ss13pusa
     */
    Optional<Integer> getDeye();
    
    /**
     * Returns the dout of this Ss13pusa. The dout field corresponds to the
     * database column test.test.ss13pusa.DOUT.
     * 
     * @return the dout of this Ss13pusa
     */
    Optional<Integer> getDout();
    
    /**
     * Returns the dphy of this Ss13pusa. The dphy field corresponds to the
     * database column test.test.ss13pusa.DPHY.
     * 
     * @return the dphy of this Ss13pusa
     */
    Optional<Integer> getDphy();
    
    /**
     * Returns the drat of this Ss13pusa. The drat field corresponds to the
     * database column test.test.ss13pusa.DRAT.
     * 
     * @return the drat of this Ss13pusa
     */
    Optional<Integer> getDrat();
    
    /**
     * Returns the dratx of this Ss13pusa. The dratx field corresponds to the
     * database column test.test.ss13pusa.DRATX.
     * 
     * @return the dratx of this Ss13pusa
     */
    Optional<Integer> getDratx();
    
    /**
     * Returns the drem of this Ss13pusa. The drem field corresponds to the
     * database column test.test.ss13pusa.DREM.
     * 
     * @return the drem of this Ss13pusa
     */
    Optional<Integer> getDrem();
    
    /**
     * Returns the eng of this Ss13pusa. The eng field corresponds to the
     * database column test.test.ss13pusa.ENG.
     * 
     * @return the eng of this Ss13pusa
     */
    Optional<Integer> getEng();
    
    /**
     * Returns the fer of this Ss13pusa. The fer field corresponds to the
     * database column test.test.ss13pusa.FER.
     * 
     * @return the fer of this Ss13pusa
     */
    Optional<Integer> getFer();
    
    /**
     * Returns the gcl of this Ss13pusa. The gcl field corresponds to the
     * database column test.test.ss13pusa.GCL.
     * 
     * @return the gcl of this Ss13pusa
     */
    Optional<Integer> getGcl();
    
    /**
     * Returns the gcm of this Ss13pusa. The gcm field corresponds to the
     * database column test.test.ss13pusa.GCM.
     * 
     * @return the gcm of this Ss13pusa
     */
    Optional<Integer> getGcm();
    
    /**
     * Returns the gcr of this Ss13pusa. The gcr field corresponds to the
     * database column test.test.ss13pusa.GCR.
     * 
     * @return the gcr of this Ss13pusa
     */
    Optional<Integer> getGcr();
    
    /**
     * Returns the hins1 of this Ss13pusa. The hins1 field corresponds to the
     * database column test.test.ss13pusa.HINS1.
     * 
     * @return the hins1 of this Ss13pusa
     */
    Optional<Integer> getHins1();
    
    /**
     * Returns the hins2 of this Ss13pusa. The hins2 field corresponds to the
     * database column test.test.ss13pusa.HINS2.
     * 
     * @return the hins2 of this Ss13pusa
     */
    Optional<Integer> getHins2();
    
    /**
     * Returns the hins3 of this Ss13pusa. The hins3 field corresponds to the
     * database column test.test.ss13pusa.HINS3.
     * 
     * @return the hins3 of this Ss13pusa
     */
    Optional<Integer> getHins3();
    
    /**
     * Returns the hins4 of this Ss13pusa. The hins4 field corresponds to the
     * database column test.test.ss13pusa.HINS4.
     * 
     * @return the hins4 of this Ss13pusa
     */
    Optional<Integer> getHins4();
    
    /**
     * Returns the hins5 of this Ss13pusa. The hins5 field corresponds to the
     * database column test.test.ss13pusa.HINS5.
     * 
     * @return the hins5 of this Ss13pusa
     */
    Optional<Integer> getHins5();
    
    /**
     * Returns the hins6 of this Ss13pusa. The hins6 field corresponds to the
     * database column test.test.ss13pusa.HINS6.
     * 
     * @return the hins6 of this Ss13pusa
     */
    Optional<Integer> getHins6();
    
    /**
     * Returns the hins7 of this Ss13pusa. The hins7 field corresponds to the
     * database column test.test.ss13pusa.HINS7.
     * 
     * @return the hins7 of this Ss13pusa
     */
    Optional<Integer> getHins7();
    
    /**
     * Returns the intp of this Ss13pusa. The intp field corresponds to the
     * database column test.test.ss13pusa.INTP.
     * 
     * @return the intp of this Ss13pusa
     */
    Optional<Integer> getIntp();
    
    /**
     * Returns the jwmnp of this Ss13pusa. The jwmnp field corresponds to the
     * database column test.test.ss13pusa.JWMNP.
     * 
     * @return the jwmnp of this Ss13pusa
     */
    Optional<Integer> getJwmnp();
    
    /**
     * Returns the jwrip of this Ss13pusa. The jwrip field corresponds to the
     * database column test.test.ss13pusa.JWRIP.
     * 
     * @return the jwrip of this Ss13pusa
     */
    Optional<Integer> getJwrip();
    
    /**
     * Returns the jwtr of this Ss13pusa. The jwtr field corresponds to the
     * database column test.test.ss13pusa.JWTR.
     * 
     * @return the jwtr of this Ss13pusa
     */
    Optional<Integer> getJwtr();
    
    /**
     * Returns the lanx of this Ss13pusa. The lanx field corresponds to the
     * database column test.test.ss13pusa.LANX.
     * 
     * @return the lanx of this Ss13pusa
     */
    Optional<Integer> getLanx();
    
    /**
     * Returns the mar of this Ss13pusa. The mar field corresponds to the
     * database column test.test.ss13pusa.MAR.
     * 
     * @return the mar of this Ss13pusa
     */
    Optional<Integer> getMar();
    
    /**
     * Returns the marhd of this Ss13pusa. The marhd field corresponds to the
     * database column test.test.ss13pusa.MARHD.
     * 
     * @return the marhd of this Ss13pusa
     */
    Optional<Integer> getMarhd();
    
    /**
     * Returns the marhm of this Ss13pusa. The marhm field corresponds to the
     * database column test.test.ss13pusa.MARHM.
     * 
     * @return the marhm of this Ss13pusa
     */
    Optional<Integer> getMarhm();
    
    /**
     * Returns the marht of this Ss13pusa. The marht field corresponds to the
     * database column test.test.ss13pusa.MARHT.
     * 
     * @return the marht of this Ss13pusa
     */
    Optional<Integer> getMarht();
    
    /**
     * Returns the marhw of this Ss13pusa. The marhw field corresponds to the
     * database column test.test.ss13pusa.MARHW.
     * 
     * @return the marhw of this Ss13pusa
     */
    Optional<Integer> getMarhw();
    
    /**
     * Returns the marhyp of this Ss13pusa. The marhyp field corresponds to the
     * database column test.test.ss13pusa.MARHYP.
     * 
     * @return the marhyp of this Ss13pusa
     */
    Optional<Integer> getMarhyp();
    
    /**
     * Returns the mig of this Ss13pusa. The mig field corresponds to the
     * database column test.test.ss13pusa.MIG.
     * 
     * @return the mig of this Ss13pusa
     */
    Optional<Integer> getMig();
    
    /**
     * Returns the mil of this Ss13pusa. The mil field corresponds to the
     * database column test.test.ss13pusa.MIL.
     * 
     * @return the mil of this Ss13pusa
     */
    Optional<Integer> getMil();
    
    /**
     * Returns the mlpa of this Ss13pusa. The mlpa field corresponds to the
     * database column test.test.ss13pusa.MLPA.
     * 
     * @return the mlpa of this Ss13pusa
     */
    Optional<Integer> getMlpa();
    
    /**
     * Returns the mlpb of this Ss13pusa. The mlpb field corresponds to the
     * database column test.test.ss13pusa.MLPB.
     * 
     * @return the mlpb of this Ss13pusa
     */
    Optional<Integer> getMlpb();
    
    /**
     * Returns the mlpcd of this Ss13pusa. The mlpcd field corresponds to the
     * database column test.test.ss13pusa.MLPCD.
     * 
     * @return the mlpcd of this Ss13pusa
     */
    Optional<Integer> getMlpcd();
    
    /**
     * Returns the mlpe of this Ss13pusa. The mlpe field corresponds to the
     * database column test.test.ss13pusa.MLPE.
     * 
     * @return the mlpe of this Ss13pusa
     */
    Optional<Integer> getMlpe();
    
    /**
     * Returns the mlpfg of this Ss13pusa. The mlpfg field corresponds to the
     * database column test.test.ss13pusa.MLPFG.
     * 
     * @return the mlpfg of this Ss13pusa
     */
    Optional<Integer> getMlpfg();
    
    /**
     * Returns the mlph of this Ss13pusa. The mlph field corresponds to the
     * database column test.test.ss13pusa.MLPH.
     * 
     * @return the mlph of this Ss13pusa
     */
    Optional<Integer> getMlph();
    
    /**
     * Returns the mlpi of this Ss13pusa. The mlpi field corresponds to the
     * database column test.test.ss13pusa.MLPI.
     * 
     * @return the mlpi of this Ss13pusa
     */
    Optional<Integer> getMlpi();
    
    /**
     * Returns the mlpj of this Ss13pusa. The mlpj field corresponds to the
     * database column test.test.ss13pusa.MLPJ.
     * 
     * @return the mlpj of this Ss13pusa
     */
    Optional<Integer> getMlpj();
    
    /**
     * Returns the mlpk of this Ss13pusa. The mlpk field corresponds to the
     * database column test.test.ss13pusa.MLPK.
     * 
     * @return the mlpk of this Ss13pusa
     */
    Optional<Integer> getMlpk();
    
    /**
     * Returns the nwab of this Ss13pusa. The nwab field corresponds to the
     * database column test.test.ss13pusa.NWAB.
     * 
     * @return the nwab of this Ss13pusa
     */
    Optional<Integer> getNwab();
    
    /**
     * Returns the nwav of this Ss13pusa. The nwav field corresponds to the
     * database column test.test.ss13pusa.NWAV.
     * 
     * @return the nwav of this Ss13pusa
     */
    Optional<Integer> getNwav();
    
    /**
     * Returns the nwla of this Ss13pusa. The nwla field corresponds to the
     * database column test.test.ss13pusa.NWLA.
     * 
     * @return the nwla of this Ss13pusa
     */
    Optional<Integer> getNwla();
    
    /**
     * Returns the nwlk of this Ss13pusa. The nwlk field corresponds to the
     * database column test.test.ss13pusa.NWLK.
     * 
     * @return the nwlk of this Ss13pusa
     */
    Optional<Integer> getNwlk();
    
    /**
     * Returns the nwre of this Ss13pusa. The nwre field corresponds to the
     * database column test.test.ss13pusa.NWRE.
     * 
     * @return the nwre of this Ss13pusa
     */
    Optional<Integer> getNwre();
    
    /**
     * Returns the oip of this Ss13pusa. The oip field corresponds to the
     * database column test.test.ss13pusa.OIP.
     * 
     * @return the oip of this Ss13pusa
     */
    Optional<Integer> getOip();
    
    /**
     * Returns the pap of this Ss13pusa. The pap field corresponds to the
     * database column test.test.ss13pusa.PAP.
     * 
     * @return the pap of this Ss13pusa
     */
    Optional<Integer> getPap();
    
    /**
     * Returns the relp of this Ss13pusa. The relp field corresponds to the
     * database column test.test.ss13pusa.RELP.
     * 
     * @return the relp of this Ss13pusa
     */
    Optional<Integer> getRelp();
    
    /**
     * Returns the retp of this Ss13pusa. The retp field corresponds to the
     * database column test.test.ss13pusa.RETP.
     * 
     * @return the retp of this Ss13pusa
     */
    Optional<Integer> getRetp();
    
    /**
     * Returns the sch of this Ss13pusa. The sch field corresponds to the
     * database column test.test.ss13pusa.SCH.
     * 
     * @return the sch of this Ss13pusa
     */
    Optional<Integer> getSch();
    
    /**
     * Returns the schg of this Ss13pusa. The schg field corresponds to the
     * database column test.test.ss13pusa.SCHG.
     * 
     * @return the schg of this Ss13pusa
     */
    Optional<Integer> getSchg();
    
    /**
     * Returns the schl of this Ss13pusa. The schl field corresponds to the
     * database column test.test.ss13pusa.SCHL.
     * 
     * @return the schl of this Ss13pusa
     */
    Optional<Integer> getSchl();
    
    /**
     * Returns the semp of this Ss13pusa. The semp field corresponds to the
     * database column test.test.ss13pusa.SEMP.
     * 
     * @return the semp of this Ss13pusa
     */
    Optional<Integer> getSemp();
    
    /**
     * Returns the sex of this Ss13pusa. The sex field corresponds to the
     * database column test.test.ss13pusa.SEX.
     * 
     * @return the sex of this Ss13pusa
     */
    Optional<Integer> getSex();
    
    /**
     * Returns the ssip of this Ss13pusa. The ssip field corresponds to the
     * database column test.test.ss13pusa.SSIP.
     * 
     * @return the ssip of this Ss13pusa
     */
    Optional<Integer> getSsip();
    
    /**
     * Returns the ssp of this Ss13pusa. The ssp field corresponds to the
     * database column test.test.ss13pusa.SSP.
     * 
     * @return the ssp of this Ss13pusa
     */
    Optional<Integer> getSsp();
    
    /**
     * Returns the wagp of this Ss13pusa. The wagp field corresponds to the
     * database column test.test.ss13pusa.WAGP.
     * 
     * @return the wagp of this Ss13pusa
     */
    Optional<Integer> getWagp();
    
    /**
     * Returns the wkhp of this Ss13pusa. The wkhp field corresponds to the
     * database column test.test.ss13pusa.WKHP.
     * 
     * @return the wkhp of this Ss13pusa
     */
    Optional<Integer> getWkhp();
    
    /**
     * Returns the wkl of this Ss13pusa. The wkl field corresponds to the
     * database column test.test.ss13pusa.WKL.
     * 
     * @return the wkl of this Ss13pusa
     */
    Optional<Integer> getWkl();
    
    /**
     * Returns the wkw of this Ss13pusa. The wkw field corresponds to the
     * database column test.test.ss13pusa.WKW.
     * 
     * @return the wkw of this Ss13pusa
     */
    Optional<Integer> getWkw();
    
    /**
     * Returns the wrk of this Ss13pusa. The wrk field corresponds to the
     * database column test.test.ss13pusa.WRK.
     * 
     * @return the wrk of this Ss13pusa
     */
    Optional<Integer> getWrk();
    
    /**
     * Returns the yoep of this Ss13pusa. The yoep field corresponds to the
     * database column test.test.ss13pusa.YOEP.
     * 
     * @return the yoep of this Ss13pusa
     */
    Optional<Integer> getYoep();
    
    /**
     * Returns the anc of this Ss13pusa. The anc field corresponds to the
     * database column test.test.ss13pusa.ANC.
     * 
     * @return the anc of this Ss13pusa
     */
    Optional<Integer> getAnc();
    
    /**
     * Returns the anc1P of this Ss13pusa. The anc1P field corresponds to the
     * database column test.test.ss13pusa.ANC1P.
     * 
     * @return the anc1P of this Ss13pusa
     */
    Optional<Integer> getAnc1P();
    
    /**
     * Returns the anc2P of this Ss13pusa. The anc2P field corresponds to the
     * database column test.test.ss13pusa.ANC2P.
     * 
     * @return the anc2P of this Ss13pusa
     */
    Optional<Integer> getAnc2P();
    
    /**
     * Returns the decade of this Ss13pusa. The decade field corresponds to the
     * database column test.test.ss13pusa.DECADE.
     * 
     * @return the decade of this Ss13pusa
     */
    Optional<Integer> getDecade();
    
    /**
     * Returns the dis of this Ss13pusa. The dis field corresponds to the
     * database column test.test.ss13pusa.DIS.
     * 
     * @return the dis of this Ss13pusa
     */
    Optional<Integer> getDis();
    
    /**
     * Returns the drivesp of this Ss13pusa. The drivesp field corresponds to the
     * database column test.test.ss13pusa.DRIVESP.
     * 
     * @return the drivesp of this Ss13pusa
     */
    Optional<Integer> getDrivesp();
    
    /**
     * Returns the esp of this Ss13pusa. The esp field corresponds to the
     * database column test.test.ss13pusa.ESP.
     * 
     * @return the esp of this Ss13pusa
     */
    Optional<Integer> getEsp();
    
    /**
     * Returns the esr of this Ss13pusa. The esr field corresponds to the
     * database column test.test.ss13pusa.ESR.
     * 
     * @return the esr of this Ss13pusa
     */
    Optional<Integer> getEsr();
    
    /**
     * Returns the fod1P of this Ss13pusa. The fod1P field corresponds to the
     * database column test.test.ss13pusa.FOD1P.
     * 
     * @return the fod1P of this Ss13pusa
     */
    Optional<Integer> getFod1P();
    
    /**
     * Returns the fod2P of this Ss13pusa. The fod2P field corresponds to the
     * database column test.test.ss13pusa.FOD2P.
     * 
     * @return the fod2P of this Ss13pusa
     */
    Optional<Integer> getFod2P();
    
    /**
     * Returns the hicov of this Ss13pusa. The hicov field corresponds to the
     * database column test.test.ss13pusa.HICOV.
     * 
     * @return the hicov of this Ss13pusa
     */
    Optional<Integer> getHicov();
    
    /**
     * Returns the hisp of this Ss13pusa. The hisp field corresponds to the
     * database column test.test.ss13pusa.HISP.
     * 
     * @return the hisp of this Ss13pusa
     */
    Optional<Integer> getHisp();
    
    /**
     * Returns the indp of this Ss13pusa. The indp field corresponds to the
     * database column test.test.ss13pusa.INDP.
     * 
     * @return the indp of this Ss13pusa
     */
    Optional<Integer> getIndp();
    
    /**
     * Returns the jwap of this Ss13pusa. The jwap field corresponds to the
     * database column test.test.ss13pusa.JWAP.
     * 
     * @return the jwap of this Ss13pusa
     */
    Optional<Integer> getJwap();
    
    /**
     * Returns the jwdp of this Ss13pusa. The jwdp field corresponds to the
     * database column test.test.ss13pusa.JWDP.
     * 
     * @return the jwdp of this Ss13pusa
     */
    Optional<Integer> getJwdp();
    
    /**
     * Returns the lanp of this Ss13pusa. The lanp field corresponds to the
     * database column test.test.ss13pusa.LANP.
     * 
     * @return the lanp of this Ss13pusa
     */
    Optional<Integer> getLanp();
    
    /**
     * Returns the migpuma of this Ss13pusa. The migpuma field corresponds to the
     * database column test.test.ss13pusa.MIGPUMA.
     * 
     * @return the migpuma of this Ss13pusa
     */
    Optional<Integer> getMigpuma();
    
    /**
     * Returns the migsp of this Ss13pusa. The migsp field corresponds to the
     * database column test.test.ss13pusa.MIGSP.
     * 
     * @return the migsp of this Ss13pusa
     */
    Optional<Integer> getMigsp();
    
    /**
     * Returns the msp of this Ss13pusa. The msp field corresponds to the
     * database column test.test.ss13pusa.MSP.
     * 
     * @return the msp of this Ss13pusa
     */
    Optional<Integer> getMsp();
    
    /**
     * Returns the naicsp of this Ss13pusa. The naicsp field corresponds to the
     * database column test.test.ss13pusa.NAICSP.
     * 
     * @return the naicsp of this Ss13pusa
     */
    Optional<Integer> getNaicsp();
    
    /**
     * Returns the nativity of this Ss13pusa. The nativity field corresponds to
     * the database column test.test.ss13pusa.NATIVITY.
     * 
     * @return the nativity of this Ss13pusa
     */
    Optional<Integer> getNativity();
    
    /**
     * Returns the nop of this Ss13pusa. The nop field corresponds to the
     * database column test.test.ss13pusa.NOP.
     * 
     * @return the nop of this Ss13pusa
     */
    Optional<Integer> getNop();
    
    /**
     * Returns the oc of this Ss13pusa. The oc field corresponds to the database
     * column test.test.ss13pusa.OC.
     * 
     * @return the oc of this Ss13pusa
     */
    Optional<Integer> getOc();
    
    /**
     * Returns the occp of this Ss13pusa. The occp field corresponds to the
     * database column test.test.ss13pusa.OCCP.
     * 
     * @return the occp of this Ss13pusa
     */
    Optional<Integer> getOccp();
    
    /**
     * Returns the paoc of this Ss13pusa. The paoc field corresponds to the
     * database column test.test.ss13pusa.PAOC.
     * 
     * @return the paoc of this Ss13pusa
     */
    Optional<Integer> getPaoc();
    
    /**
     * Returns the pernp of this Ss13pusa. The pernp field corresponds to the
     * database column test.test.ss13pusa.PERNP.
     * 
     * @return the pernp of this Ss13pusa
     */
    Optional<Integer> getPernp();
    
    /**
     * Returns the pincp of this Ss13pusa. The pincp field corresponds to the
     * database column test.test.ss13pusa.PINCP.
     * 
     * @return the pincp of this Ss13pusa
     */
    Optional<Integer> getPincp();
    
    /**
     * Returns the pobp of this Ss13pusa. The pobp field corresponds to the
     * database column test.test.ss13pusa.POBP.
     * 
     * @return the pobp of this Ss13pusa
     */
    Optional<Integer> getPobp();
    
    /**
     * Returns the povpip of this Ss13pusa. The povpip field corresponds to the
     * database column test.test.ss13pusa.POVPIP.
     * 
     * @return the povpip of this Ss13pusa
     */
    Optional<Integer> getPovpip();
    
    /**
     * Returns the powpuma of this Ss13pusa. The powpuma field corresponds to the
     * database column test.test.ss13pusa.POWPUMA.
     * 
     * @return the powpuma of this Ss13pusa
     */
    Optional<Integer> getPowpuma();
    
    /**
     * Returns the powsp of this Ss13pusa. The powsp field corresponds to the
     * database column test.test.ss13pusa.POWSP.
     * 
     * @return the powsp of this Ss13pusa
     */
    Optional<Integer> getPowsp();
    
    /**
     * Returns the privcov of this Ss13pusa. The privcov field corresponds to the
     * database column test.test.ss13pusa.PRIVCOV.
     * 
     * @return the privcov of this Ss13pusa
     */
    Optional<Integer> getPrivcov();
    
    /**
     * Returns the pubcov of this Ss13pusa. The pubcov field corresponds to the
     * database column test.test.ss13pusa.PUBCOV.
     * 
     * @return the pubcov of this Ss13pusa
     */
    Optional<Integer> getPubcov();
    
    /**
     * Returns the qtrbir of this Ss13pusa. The qtrbir field corresponds to the
     * database column test.test.ss13pusa.QTRBIR.
     * 
     * @return the qtrbir of this Ss13pusa
     */
    Optional<Integer> getQtrbir();
    
    /**
     * Returns the rac1P of this Ss13pusa. The rac1P field corresponds to the
     * database column test.test.ss13pusa.RAC1P.
     * 
     * @return the rac1P of this Ss13pusa
     */
    Optional<Integer> getRac1P();
    
    /**
     * Returns the rac2P of this Ss13pusa. The rac2P field corresponds to the
     * database column test.test.ss13pusa.RAC2P.
     * 
     * @return the rac2P of this Ss13pusa
     */
    Optional<Integer> getRac2P();
    
    /**
     * Returns the rac3P of this Ss13pusa. The rac3P field corresponds to the
     * database column test.test.ss13pusa.RAC3P.
     * 
     * @return the rac3P of this Ss13pusa
     */
    Optional<Integer> getRac3P();
    
    /**
     * Returns the racaian of this Ss13pusa. The racaian field corresponds to the
     * database column test.test.ss13pusa.RACAIAN.
     * 
     * @return the racaian of this Ss13pusa
     */
    Optional<Integer> getRacaian();
    
    /**
     * Returns the racasn of this Ss13pusa. The racasn field corresponds to the
     * database column test.test.ss13pusa.RACASN.
     * 
     * @return the racasn of this Ss13pusa
     */
    Optional<Integer> getRacasn();
    
    /**
     * Returns the racblk of this Ss13pusa. The racblk field corresponds to the
     * database column test.test.ss13pusa.RACBLK.
     * 
     * @return the racblk of this Ss13pusa
     */
    Optional<Integer> getRacblk();
    
    /**
     * Returns the racnh of this Ss13pusa. The racnh field corresponds to the
     * database column test.test.ss13pusa.RACNH.
     * 
     * @return the racnh of this Ss13pusa
     */
    Optional<Integer> getRacnh();
    
    /**
     * Returns the racnum of this Ss13pusa. The racnum field corresponds to the
     * database column test.test.ss13pusa.RACNUM.
     * 
     * @return the racnum of this Ss13pusa
     */
    Optional<Integer> getRacnum();
    
    /**
     * Returns the racpi of this Ss13pusa. The racpi field corresponds to the
     * database column test.test.ss13pusa.RACPI.
     * 
     * @return the racpi of this Ss13pusa
     */
    Optional<Integer> getRacpi();
    
    /**
     * Returns the racsor of this Ss13pusa. The racsor field corresponds to the
     * database column test.test.ss13pusa.RACSOR.
     * 
     * @return the racsor of this Ss13pusa
     */
    Optional<Integer> getRacsor();
    
    /**
     * Returns the racwht of this Ss13pusa. The racwht field corresponds to the
     * database column test.test.ss13pusa.RACWHT.
     * 
     * @return the racwht of this Ss13pusa
     */
    Optional<Integer> getRacwht();
    
    /**
     * Returns the rc of this Ss13pusa. The rc field corresponds to the database
     * column test.test.ss13pusa.RC.
     * 
     * @return the rc of this Ss13pusa
     */
    Optional<Integer> getRc();
    
    /**
     * Returns the sciengp of this Ss13pusa. The sciengp field corresponds to the
     * database column test.test.ss13pusa.SCIENGP.
     * 
     * @return the sciengp of this Ss13pusa
     */
    Optional<Integer> getSciengp();
    
    /**
     * Returns the sciengrlp of this Ss13pusa. The sciengrlp field corresponds to
     * the database column test.test.ss13pusa.SCIENGRLP.
     * 
     * @return the sciengrlp of this Ss13pusa
     */
    Optional<Integer> getSciengrlp();
    
    /**
     * Returns the sfn of this Ss13pusa. The sfn field corresponds to the
     * database column test.test.ss13pusa.SFN.
     * 
     * @return the sfn of this Ss13pusa
     */
    Optional<Integer> getSfn();
    
    /**
     * Returns the sfr of this Ss13pusa. The sfr field corresponds to the
     * database column test.test.ss13pusa.SFR.
     * 
     * @return the sfr of this Ss13pusa
     */
    Optional<Integer> getSfr();
    
    /**
     * Returns the socp of this Ss13pusa. The socp field corresponds to the
     * database column test.test.ss13pusa.SOCP.
     * 
     * @return the socp of this Ss13pusa
     */
    Optional<Integer> getSocp();
    
    /**
     * Returns the vps of this Ss13pusa. The vps field corresponds to the
     * database column test.test.ss13pusa.VPS.
     * 
     * @return the vps of this Ss13pusa
     */
    Optional<Integer> getVps();
    
    /**
     * Returns the waob of this Ss13pusa. The waob field corresponds to the
     * database column test.test.ss13pusa.WAOB.
     * 
     * @return the waob of this Ss13pusa
     */
    Optional<Integer> getWaob();
    
    /**
     * Returns the fagep of this Ss13pusa. The fagep field corresponds to the
     * database column test.test.ss13pusa.FAGEP.
     * 
     * @return the fagep of this Ss13pusa
     */
    Optional<Integer> getFagep();
    
    /**
     * Returns the fancp of this Ss13pusa. The fancp field corresponds to the
     * database column test.test.ss13pusa.FANCP.
     * 
     * @return the fancp of this Ss13pusa
     */
    Optional<Integer> getFancp();
    
    /**
     * Returns the fcitp of this Ss13pusa. The fcitp field corresponds to the
     * database column test.test.ss13pusa.FCITP.
     * 
     * @return the fcitp of this Ss13pusa
     */
    Optional<Integer> getFcitp();
    
    /**
     * Returns the fcitwp of this Ss13pusa. The fcitwp field corresponds to the
     * database column test.test.ss13pusa.FCITWP.
     * 
     * @return the fcitwp of this Ss13pusa
     */
    Optional<Integer> getFcitwp();
    
    /**
     * Returns the fcowp of this Ss13pusa. The fcowp field corresponds to the
     * database column test.test.ss13pusa.FCOWP.
     * 
     * @return the fcowp of this Ss13pusa
     */
    Optional<Integer> getFcowp();
    
    /**
     * Returns the fddrsp of this Ss13pusa. The fddrsp field corresponds to the
     * database column test.test.ss13pusa.FDDRSP.
     * 
     * @return the fddrsp of this Ss13pusa
     */
    Optional<Integer> getFddrsp();
    
    /**
     * Returns the fdearp of this Ss13pusa. The fdearp field corresponds to the
     * database column test.test.ss13pusa.FDEARP.
     * 
     * @return the fdearp of this Ss13pusa
     */
    Optional<Integer> getFdearp();
    
    /**
     * Returns the fdeyep of this Ss13pusa. The fdeyep field corresponds to the
     * database column test.test.ss13pusa.FDEYEP.
     * 
     * @return the fdeyep of this Ss13pusa
     */
    Optional<Integer> getFdeyep();
    
    /**
     * Returns the fdisp of this Ss13pusa. The fdisp field corresponds to the
     * database column test.test.ss13pusa.FDISP.
     * 
     * @return the fdisp of this Ss13pusa
     */
    Optional<Integer> getFdisp();
    
    /**
     * Returns the fdoutp of this Ss13pusa. The fdoutp field corresponds to the
     * database column test.test.ss13pusa.FDOUTP.
     * 
     * @return the fdoutp of this Ss13pusa
     */
    Optional<Integer> getFdoutp();
    
    /**
     * Returns the fdphyp of this Ss13pusa. The fdphyp field corresponds to the
     * database column test.test.ss13pusa.FDPHYP.
     * 
     * @return the fdphyp of this Ss13pusa
     */
    Optional<Integer> getFdphyp();
    
    /**
     * Returns the fdratp of this Ss13pusa. The fdratp field corresponds to the
     * database column test.test.ss13pusa.FDRATP.
     * 
     * @return the fdratp of this Ss13pusa
     */
    Optional<Integer> getFdratp();
    
    /**
     * Returns the fdratxp of this Ss13pusa. The fdratxp field corresponds to the
     * database column test.test.ss13pusa.FDRATXP.
     * 
     * @return the fdratxp of this Ss13pusa
     */
    Optional<Integer> getFdratxp();
    
    /**
     * Returns the fdremp of this Ss13pusa. The fdremp field corresponds to the
     * database column test.test.ss13pusa.FDREMP.
     * 
     * @return the fdremp of this Ss13pusa
     */
    Optional<Integer> getFdremp();
    
    /**
     * Returns the fengp of this Ss13pusa. The fengp field corresponds to the
     * database column test.test.ss13pusa.FENGP.
     * 
     * @return the fengp of this Ss13pusa
     */
    Optional<Integer> getFengp();
    
    /**
     * Returns the fesrp of this Ss13pusa. The fesrp field corresponds to the
     * database column test.test.ss13pusa.FESRP.
     * 
     * @return the fesrp of this Ss13pusa
     */
    Optional<Integer> getFesrp();
    
    /**
     * Returns the fferp of this Ss13pusa. The fferp field corresponds to the
     * database column test.test.ss13pusa.FFERP.
     * 
     * @return the fferp of this Ss13pusa
     */
    Optional<Integer> getFferp();
    
    /**
     * Returns the ffodp of this Ss13pusa. The ffodp field corresponds to the
     * database column test.test.ss13pusa.FFODP.
     * 
     * @return the ffodp of this Ss13pusa
     */
    Optional<Integer> getFfodp();
    
    /**
     * Returns the fgclp of this Ss13pusa. The fgclp field corresponds to the
     * database column test.test.ss13pusa.FGCLP.
     * 
     * @return the fgclp of this Ss13pusa
     */
    Optional<Integer> getFgclp();
    
    /**
     * Returns the fgcmp of this Ss13pusa. The fgcmp field corresponds to the
     * database column test.test.ss13pusa.FGCMP.
     * 
     * @return the fgcmp of this Ss13pusa
     */
    Optional<Integer> getFgcmp();
    
    /**
     * Returns the fgcrp of this Ss13pusa. The fgcrp field corresponds to the
     * database column test.test.ss13pusa.FGCRP.
     * 
     * @return the fgcrp of this Ss13pusa
     */
    Optional<Integer> getFgcrp();
    
    /**
     * Returns the fhins1P of this Ss13pusa. The fhins1P field corresponds to the
     * database column test.test.ss13pusa.FHINS1P.
     * 
     * @return the fhins1P of this Ss13pusa
     */
    Optional<Integer> getFhins1P();
    
    /**
     * Returns the fhins2P of this Ss13pusa. The fhins2P field corresponds to the
     * database column test.test.ss13pusa.FHINS2P.
     * 
     * @return the fhins2P of this Ss13pusa
     */
    Optional<Integer> getFhins2P();
    
    /**
     * Returns the fhins3C of this Ss13pusa. The fhins3C field corresponds to the
     * database column test.test.ss13pusa.FHINS3C.
     * 
     * @return the fhins3C of this Ss13pusa
     */
    Optional<Integer> getFhins3C();
    
    /**
     * Returns the fhins3P of this Ss13pusa. The fhins3P field corresponds to the
     * database column test.test.ss13pusa.FHINS3P.
     * 
     * @return the fhins3P of this Ss13pusa
     */
    Optional<Integer> getFhins3P();
    
    /**
     * Returns the fhins4C of this Ss13pusa. The fhins4C field corresponds to the
     * database column test.test.ss13pusa.FHINS4C.
     * 
     * @return the fhins4C of this Ss13pusa
     */
    Optional<Integer> getFhins4C();
    
    /**
     * Returns the fhins4P of this Ss13pusa. The fhins4P field corresponds to the
     * database column test.test.ss13pusa.FHINS4P.
     * 
     * @return the fhins4P of this Ss13pusa
     */
    Optional<Integer> getFhins4P();
    
    /**
     * Returns the fhins5C of this Ss13pusa. The fhins5C field corresponds to the
     * database column test.test.ss13pusa.FHINS5C.
     * 
     * @return the fhins5C of this Ss13pusa
     */
    Optional<Integer> getFhins5C();
    
    /**
     * Returns the fhins5P of this Ss13pusa. The fhins5P field corresponds to the
     * database column test.test.ss13pusa.FHINS5P.
     * 
     * @return the fhins5P of this Ss13pusa
     */
    Optional<Integer> getFhins5P();
    
    /**
     * Returns the fhins6P of this Ss13pusa. The fhins6P field corresponds to the
     * database column test.test.ss13pusa.FHINS6P.
     * 
     * @return the fhins6P of this Ss13pusa
     */
    Optional<Integer> getFhins6P();
    
    /**
     * Returns the fhins7P of this Ss13pusa. The fhins7P field corresponds to the
     * database column test.test.ss13pusa.FHINS7P.
     * 
     * @return the fhins7P of this Ss13pusa
     */
    Optional<Integer> getFhins7P();
    
    /**
     * Returns the fhisp of this Ss13pusa. The fhisp field corresponds to the
     * database column test.test.ss13pusa.FHISP.
     * 
     * @return the fhisp of this Ss13pusa
     */
    Optional<Integer> getFhisp();
    
    /**
     * Returns the findp of this Ss13pusa. The findp field corresponds to the
     * database column test.test.ss13pusa.FINDP.
     * 
     * @return the findp of this Ss13pusa
     */
    Optional<Integer> getFindp();
    
    /**
     * Returns the fintp of this Ss13pusa. The fintp field corresponds to the
     * database column test.test.ss13pusa.FINTP.
     * 
     * @return the fintp of this Ss13pusa
     */
    Optional<Integer> getFintp();
    
    /**
     * Returns the fjwdp of this Ss13pusa. The fjwdp field corresponds to the
     * database column test.test.ss13pusa.FJWDP.
     * 
     * @return the fjwdp of this Ss13pusa
     */
    Optional<Integer> getFjwdp();
    
    /**
     * Returns the fjwmnp of this Ss13pusa. The fjwmnp field corresponds to the
     * database column test.test.ss13pusa.FJWMNP.
     * 
     * @return the fjwmnp of this Ss13pusa
     */
    Optional<Integer> getFjwmnp();
    
    /**
     * Returns the fjwrip of this Ss13pusa. The fjwrip field corresponds to the
     * database column test.test.ss13pusa.FJWRIP.
     * 
     * @return the fjwrip of this Ss13pusa
     */
    Optional<Integer> getFjwrip();
    
    /**
     * Returns the fjwtrp of this Ss13pusa. The fjwtrp field corresponds to the
     * database column test.test.ss13pusa.FJWTRP.
     * 
     * @return the fjwtrp of this Ss13pusa
     */
    Optional<Integer> getFjwtrp();
    
    /**
     * Returns the flanp of this Ss13pusa. The flanp field corresponds to the
     * database column test.test.ss13pusa.FLANP.
     * 
     * @return the flanp of this Ss13pusa
     */
    Optional<Integer> getFlanp();
    
    /**
     * Returns the flanxp of this Ss13pusa. The flanxp field corresponds to the
     * database column test.test.ss13pusa.FLANXP.
     * 
     * @return the flanxp of this Ss13pusa
     */
    Optional<Integer> getFlanxp();
    
    /**
     * Returns the fmarhdp of this Ss13pusa. The fmarhdp field corresponds to the
     * database column test.test.ss13pusa.FMARHDP.
     * 
     * @return the fmarhdp of this Ss13pusa
     */
    Optional<Integer> getFmarhdp();
    
    /**
     * Returns the fmarhmp of this Ss13pusa. The fmarhmp field corresponds to the
     * database column test.test.ss13pusa.FMARHMP.
     * 
     * @return the fmarhmp of this Ss13pusa
     */
    Optional<Integer> getFmarhmp();
    
    /**
     * Returns the fmarhtp of this Ss13pusa. The fmarhtp field corresponds to the
     * database column test.test.ss13pusa.FMARHTP.
     * 
     * @return the fmarhtp of this Ss13pusa
     */
    Optional<Integer> getFmarhtp();
    
    /**
     * Returns the fmarhwp of this Ss13pusa. The fmarhwp field corresponds to the
     * database column test.test.ss13pusa.FMARHWP.
     * 
     * @return the fmarhwp of this Ss13pusa
     */
    Optional<Integer> getFmarhwp();
    
    /**
     * Returns the fmarhyp of this Ss13pusa. The fmarhyp field corresponds to the
     * database column test.test.ss13pusa.FMARHYP.
     * 
     * @return the fmarhyp of this Ss13pusa
     */
    Optional<Integer> getFmarhyp();
    
    /**
     * Returns the fmarp of this Ss13pusa. The fmarp field corresponds to the
     * database column test.test.ss13pusa.FMARP.
     * 
     * @return the fmarp of this Ss13pusa
     */
    Optional<Integer> getFmarp();
    
    /**
     * Returns the fmigp of this Ss13pusa. The fmigp field corresponds to the
     * database column test.test.ss13pusa.FMIGP.
     * 
     * @return the fmigp of this Ss13pusa
     */
    Optional<Integer> getFmigp();
    
    /**
     * Returns the fmigsp of this Ss13pusa. The fmigsp field corresponds to the
     * database column test.test.ss13pusa.FMIGSP.
     * 
     * @return the fmigsp of this Ss13pusa
     */
    Optional<Integer> getFmigsp();
    
    /**
     * Returns the fmilpp of this Ss13pusa. The fmilpp field corresponds to the
     * database column test.test.ss13pusa.FMILPP.
     * 
     * @return the fmilpp of this Ss13pusa
     */
    Optional<Integer> getFmilpp();
    
    /**
     * Returns the fmilsp of this Ss13pusa. The fmilsp field corresponds to the
     * database column test.test.ss13pusa.FMILSP.
     * 
     * @return the fmilsp of this Ss13pusa
     */
    Optional<Integer> getFmilsp();
    
    /**
     * Returns the foccp of this Ss13pusa. The foccp field corresponds to the
     * database column test.test.ss13pusa.FOCCP.
     * 
     * @return the foccp of this Ss13pusa
     */
    Optional<Integer> getFoccp();
    
    /**
     * Returns the foip of this Ss13pusa. The foip field corresponds to the
     * database column test.test.ss13pusa.FOIP.
     * 
     * @return the foip of this Ss13pusa
     */
    Optional<Integer> getFoip();
    
    /**
     * Returns the fpap of this Ss13pusa. The fpap field corresponds to the
     * database column test.test.ss13pusa.FPAP.
     * 
     * @return the fpap of this Ss13pusa
     */
    Optional<Integer> getFpap();
    
    /**
     * Returns the fpernp of this Ss13pusa. The fpernp field corresponds to the
     * database column test.test.ss13pusa.FPERNP.
     * 
     * @return the fpernp of this Ss13pusa
     */
    Optional<Integer> getFpernp();
    
    /**
     * Returns the fpincp of this Ss13pusa. The fpincp field corresponds to the
     * database column test.test.ss13pusa.FPINCP.
     * 
     * @return the fpincp of this Ss13pusa
     */
    Optional<Integer> getFpincp();
    
    /**
     * Returns the fpobp of this Ss13pusa. The fpobp field corresponds to the
     * database column test.test.ss13pusa.FPOBP.
     * 
     * @return the fpobp of this Ss13pusa
     */
    Optional<Integer> getFpobp();
    
    /**
     * Returns the fpowsp of this Ss13pusa. The fpowsp field corresponds to the
     * database column test.test.ss13pusa.FPOWSP.
     * 
     * @return the fpowsp of this Ss13pusa
     */
    Optional<Integer> getFpowsp();
    
    /**
     * Returns the fprivcovp of this Ss13pusa. The fprivcovp field corresponds to
     * the database column test.test.ss13pusa.FPRIVCOVP.
     * 
     * @return the fprivcovp of this Ss13pusa
     */
    Optional<Integer> getFprivcovp();
    
    /**
     * Returns the fpubcovp of this Ss13pusa. The fpubcovp field corresponds to
     * the database column test.test.ss13pusa.FPUBCOVP.
     * 
     * @return the fpubcovp of this Ss13pusa
     */
    Optional<Integer> getFpubcovp();
    
    /**
     * Returns the fracp of this Ss13pusa. The fracp field corresponds to the
     * database column test.test.ss13pusa.FRACP.
     * 
     * @return the fracp of this Ss13pusa
     */
    Optional<Integer> getFracp();
    
    /**
     * Returns the frelp of this Ss13pusa. The frelp field corresponds to the
     * database column test.test.ss13pusa.FRELP.
     * 
     * @return the frelp of this Ss13pusa
     */
    Optional<Integer> getFrelp();
    
    /**
     * Returns the fretp of this Ss13pusa. The fretp field corresponds to the
     * database column test.test.ss13pusa.FRETP.
     * 
     * @return the fretp of this Ss13pusa
     */
    Optional<Integer> getFretp();
    
    /**
     * Returns the fschgp of this Ss13pusa. The fschgp field corresponds to the
     * database column test.test.ss13pusa.FSCHGP.
     * 
     * @return the fschgp of this Ss13pusa
     */
    Optional<Integer> getFschgp();
    
    /**
     * Returns the fschlp of this Ss13pusa. The fschlp field corresponds to the
     * database column test.test.ss13pusa.FSCHLP.
     * 
     * @return the fschlp of this Ss13pusa
     */
    Optional<Integer> getFschlp();
    
    /**
     * Returns the fschp of this Ss13pusa. The fschp field corresponds to the
     * database column test.test.ss13pusa.FSCHP.
     * 
     * @return the fschp of this Ss13pusa
     */
    Optional<Integer> getFschp();
    
    /**
     * Returns the fsemp of this Ss13pusa. The fsemp field corresponds to the
     * database column test.test.ss13pusa.FSEMP.
     * 
     * @return the fsemp of this Ss13pusa
     */
    Optional<Integer> getFsemp();
    
    /**
     * Returns the fsexp of this Ss13pusa. The fsexp field corresponds to the
     * database column test.test.ss13pusa.FSEXP.
     * 
     * @return the fsexp of this Ss13pusa
     */
    Optional<Integer> getFsexp();
    
    /**
     * Returns the fssip of this Ss13pusa. The fssip field corresponds to the
     * database column test.test.ss13pusa.FSSIP.
     * 
     * @return the fssip of this Ss13pusa
     */
    Optional<Integer> getFssip();
    
    /**
     * Returns the fssp of this Ss13pusa. The fssp field corresponds to the
     * database column test.test.ss13pusa.FSSP.
     * 
     * @return the fssp of this Ss13pusa
     */
    Optional<Integer> getFssp();
    
    /**
     * Returns the fwagp of this Ss13pusa. The fwagp field corresponds to the
     * database column test.test.ss13pusa.FWAGP.
     * 
     * @return the fwagp of this Ss13pusa
     */
    Optional<Integer> getFwagp();
    
    /**
     * Returns the fwkhp of this Ss13pusa. The fwkhp field corresponds to the
     * database column test.test.ss13pusa.FWKHP.
     * 
     * @return the fwkhp of this Ss13pusa
     */
    Optional<Integer> getFwkhp();
    
    /**
     * Returns the fwklp of this Ss13pusa. The fwklp field corresponds to the
     * database column test.test.ss13pusa.FWKLP.
     * 
     * @return the fwklp of this Ss13pusa
     */
    Optional<Integer> getFwklp();
    
    /**
     * Returns the fwkwp of this Ss13pusa. The fwkwp field corresponds to the
     * database column test.test.ss13pusa.FWKWP.
     * 
     * @return the fwkwp of this Ss13pusa
     */
    Optional<Integer> getFwkwp();
    
    /**
     * Returns the fwrkp of this Ss13pusa. The fwrkp field corresponds to the
     * database column test.test.ss13pusa.FWRKP.
     * 
     * @return the fwrkp of this Ss13pusa
     */
    Optional<Integer> getFwrkp();
    
    /**
     * Returns the fyoep of this Ss13pusa. The fyoep field corresponds to the
     * database column test.test.ss13pusa.FYOEP.
     * 
     * @return the fyoep of this Ss13pusa
     */
    Optional<Integer> getFyoep();
    
    /**
     * Sets the rt of this Ss13pusa. The rt field corresponds to the database
     * column test.test.ss13pusa.RT.
     * 
     * @param rt to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setRt(Integer rt);
    
    /**
     * Sets the serialno of this Ss13pusa. The serialno field corresponds to the
     * database column test.test.ss13pusa.SERIALNO.
     * 
     * @param serialno to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setSerialno(Integer serialno);
    
    /**
     * Sets the sporder of this Ss13pusa. The sporder field corresponds to the
     * database column test.test.ss13pusa.SPORDER.
     * 
     * @param sporder to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setSporder(Integer sporder);
    
    /**
     * Sets the puma of this Ss13pusa. The puma field corresponds to the database
     * column test.test.ss13pusa.PUMA.
     * 
     * @param puma to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setPuma(Integer puma);
    
    /**
     * Sets the st of this Ss13pusa. The st field corresponds to the database
     * column test.test.ss13pusa.ST.
     * 
     * @param st to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setSt(Integer st);
    
    /**
     * Sets the adjinc of this Ss13pusa. The adjinc field corresponds to the
     * database column test.test.ss13pusa.ADJINC.
     * 
     * @param adjinc to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setAdjinc(Integer adjinc);
    
    /**
     * Sets the pwgtp of this Ss13pusa. The pwgtp field corresponds to the
     * database column test.test.ss13pusa.PWGTP.
     * 
     * @param pwgtp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setPwgtp(Integer pwgtp);
    
    /**
     * Sets the agep of this Ss13pusa. The agep field corresponds to the database
     * column test.test.ss13pusa.AGEP.
     * 
     * @param agep to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setAgep(Integer agep);
    
    /**
     * Sets the cit of this Ss13pusa. The cit field corresponds to the database
     * column test.test.ss13pusa.CIT.
     * 
     * @param cit to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setCit(Integer cit);
    
    /**
     * Sets the citwp of this Ss13pusa. The citwp field corresponds to the
     * database column test.test.ss13pusa.CITWP.
     * 
     * @param citwp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setCitwp(Integer citwp);
    
    /**
     * Sets the cow of this Ss13pusa. The cow field corresponds to the database
     * column test.test.ss13pusa.COW.
     * 
     * @param cow to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setCow(Integer cow);
    
    /**
     * Sets the ddrs of this Ss13pusa. The ddrs field corresponds to the database
     * column test.test.ss13pusa.DDRS.
     * 
     * @param ddrs to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setDdrs(Integer ddrs);
    
    /**
     * Sets the dear of this Ss13pusa. The dear field corresponds to the database
     * column test.test.ss13pusa.DEAR.
     * 
     * @param dear to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setDear(Integer dear);
    
    /**
     * Sets the deye of this Ss13pusa. The deye field corresponds to the database
     * column test.test.ss13pusa.DEYE.
     * 
     * @param deye to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setDeye(Integer deye);
    
    /**
     * Sets the dout of this Ss13pusa. The dout field corresponds to the database
     * column test.test.ss13pusa.DOUT.
     * 
     * @param dout to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setDout(Integer dout);
    
    /**
     * Sets the dphy of this Ss13pusa. The dphy field corresponds to the database
     * column test.test.ss13pusa.DPHY.
     * 
     * @param dphy to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setDphy(Integer dphy);
    
    /**
     * Sets the drat of this Ss13pusa. The drat field corresponds to the database
     * column test.test.ss13pusa.DRAT.
     * 
     * @param drat to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setDrat(Integer drat);
    
    /**
     * Sets the dratx of this Ss13pusa. The dratx field corresponds to the
     * database column test.test.ss13pusa.DRATX.
     * 
     * @param dratx to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setDratx(Integer dratx);
    
    /**
     * Sets the drem of this Ss13pusa. The drem field corresponds to the database
     * column test.test.ss13pusa.DREM.
     * 
     * @param drem to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setDrem(Integer drem);
    
    /**
     * Sets the eng of this Ss13pusa. The eng field corresponds to the database
     * column test.test.ss13pusa.ENG.
     * 
     * @param eng to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setEng(Integer eng);
    
    /**
     * Sets the fer of this Ss13pusa. The fer field corresponds to the database
     * column test.test.ss13pusa.FER.
     * 
     * @param fer to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFer(Integer fer);
    
    /**
     * Sets the gcl of this Ss13pusa. The gcl field corresponds to the database
     * column test.test.ss13pusa.GCL.
     * 
     * @param gcl to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setGcl(Integer gcl);
    
    /**
     * Sets the gcm of this Ss13pusa. The gcm field corresponds to the database
     * column test.test.ss13pusa.GCM.
     * 
     * @param gcm to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setGcm(Integer gcm);
    
    /**
     * Sets the gcr of this Ss13pusa. The gcr field corresponds to the database
     * column test.test.ss13pusa.GCR.
     * 
     * @param gcr to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setGcr(Integer gcr);
    
    /**
     * Sets the hins1 of this Ss13pusa. The hins1 field corresponds to the
     * database column test.test.ss13pusa.HINS1.
     * 
     * @param hins1 to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setHins1(Integer hins1);
    
    /**
     * Sets the hins2 of this Ss13pusa. The hins2 field corresponds to the
     * database column test.test.ss13pusa.HINS2.
     * 
     * @param hins2 to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setHins2(Integer hins2);
    
    /**
     * Sets the hins3 of this Ss13pusa. The hins3 field corresponds to the
     * database column test.test.ss13pusa.HINS3.
     * 
     * @param hins3 to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setHins3(Integer hins3);
    
    /**
     * Sets the hins4 of this Ss13pusa. The hins4 field corresponds to the
     * database column test.test.ss13pusa.HINS4.
     * 
     * @param hins4 to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setHins4(Integer hins4);
    
    /**
     * Sets the hins5 of this Ss13pusa. The hins5 field corresponds to the
     * database column test.test.ss13pusa.HINS5.
     * 
     * @param hins5 to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setHins5(Integer hins5);
    
    /**
     * Sets the hins6 of this Ss13pusa. The hins6 field corresponds to the
     * database column test.test.ss13pusa.HINS6.
     * 
     * @param hins6 to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setHins6(Integer hins6);
    
    /**
     * Sets the hins7 of this Ss13pusa. The hins7 field corresponds to the
     * database column test.test.ss13pusa.HINS7.
     * 
     * @param hins7 to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setHins7(Integer hins7);
    
    /**
     * Sets the intp of this Ss13pusa. The intp field corresponds to the database
     * column test.test.ss13pusa.INTP.
     * 
     * @param intp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setIntp(Integer intp);
    
    /**
     * Sets the jwmnp of this Ss13pusa. The jwmnp field corresponds to the
     * database column test.test.ss13pusa.JWMNP.
     * 
     * @param jwmnp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setJwmnp(Integer jwmnp);
    
    /**
     * Sets the jwrip of this Ss13pusa. The jwrip field corresponds to the
     * database column test.test.ss13pusa.JWRIP.
     * 
     * @param jwrip to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setJwrip(Integer jwrip);
    
    /**
     * Sets the jwtr of this Ss13pusa. The jwtr field corresponds to the database
     * column test.test.ss13pusa.JWTR.
     * 
     * @param jwtr to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setJwtr(Integer jwtr);
    
    /**
     * Sets the lanx of this Ss13pusa. The lanx field corresponds to the database
     * column test.test.ss13pusa.LANX.
     * 
     * @param lanx to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setLanx(Integer lanx);
    
    /**
     * Sets the mar of this Ss13pusa. The mar field corresponds to the database
     * column test.test.ss13pusa.MAR.
     * 
     * @param mar to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setMar(Integer mar);
    
    /**
     * Sets the marhd of this Ss13pusa. The marhd field corresponds to the
     * database column test.test.ss13pusa.MARHD.
     * 
     * @param marhd to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setMarhd(Integer marhd);
    
    /**
     * Sets the marhm of this Ss13pusa. The marhm field corresponds to the
     * database column test.test.ss13pusa.MARHM.
     * 
     * @param marhm to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setMarhm(Integer marhm);
    
    /**
     * Sets the marht of this Ss13pusa. The marht field corresponds to the
     * database column test.test.ss13pusa.MARHT.
     * 
     * @param marht to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setMarht(Integer marht);
    
    /**
     * Sets the marhw of this Ss13pusa. The marhw field corresponds to the
     * database column test.test.ss13pusa.MARHW.
     * 
     * @param marhw to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setMarhw(Integer marhw);
    
    /**
     * Sets the marhyp of this Ss13pusa. The marhyp field corresponds to the
     * database column test.test.ss13pusa.MARHYP.
     * 
     * @param marhyp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setMarhyp(Integer marhyp);
    
    /**
     * Sets the mig of this Ss13pusa. The mig field corresponds to the database
     * column test.test.ss13pusa.MIG.
     * 
     * @param mig to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setMig(Integer mig);
    
    /**
     * Sets the mil of this Ss13pusa. The mil field corresponds to the database
     * column test.test.ss13pusa.MIL.
     * 
     * @param mil to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setMil(Integer mil);
    
    /**
     * Sets the mlpa of this Ss13pusa. The mlpa field corresponds to the database
     * column test.test.ss13pusa.MLPA.
     * 
     * @param mlpa to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setMlpa(Integer mlpa);
    
    /**
     * Sets the mlpb of this Ss13pusa. The mlpb field corresponds to the database
     * column test.test.ss13pusa.MLPB.
     * 
     * @param mlpb to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setMlpb(Integer mlpb);
    
    /**
     * Sets the mlpcd of this Ss13pusa. The mlpcd field corresponds to the
     * database column test.test.ss13pusa.MLPCD.
     * 
     * @param mlpcd to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setMlpcd(Integer mlpcd);
    
    /**
     * Sets the mlpe of this Ss13pusa. The mlpe field corresponds to the database
     * column test.test.ss13pusa.MLPE.
     * 
     * @param mlpe to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setMlpe(Integer mlpe);
    
    /**
     * Sets the mlpfg of this Ss13pusa. The mlpfg field corresponds to the
     * database column test.test.ss13pusa.MLPFG.
     * 
     * @param mlpfg to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setMlpfg(Integer mlpfg);
    
    /**
     * Sets the mlph of this Ss13pusa. The mlph field corresponds to the database
     * column test.test.ss13pusa.MLPH.
     * 
     * @param mlph to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setMlph(Integer mlph);
    
    /**
     * Sets the mlpi of this Ss13pusa. The mlpi field corresponds to the database
     * column test.test.ss13pusa.MLPI.
     * 
     * @param mlpi to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setMlpi(Integer mlpi);
    
    /**
     * Sets the mlpj of this Ss13pusa. The mlpj field corresponds to the database
     * column test.test.ss13pusa.MLPJ.
     * 
     * @param mlpj to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setMlpj(Integer mlpj);
    
    /**
     * Sets the mlpk of this Ss13pusa. The mlpk field corresponds to the database
     * column test.test.ss13pusa.MLPK.
     * 
     * @param mlpk to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setMlpk(Integer mlpk);
    
    /**
     * Sets the nwab of this Ss13pusa. The nwab field corresponds to the database
     * column test.test.ss13pusa.NWAB.
     * 
     * @param nwab to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setNwab(Integer nwab);
    
    /**
     * Sets the nwav of this Ss13pusa. The nwav field corresponds to the database
     * column test.test.ss13pusa.NWAV.
     * 
     * @param nwav to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setNwav(Integer nwav);
    
    /**
     * Sets the nwla of this Ss13pusa. The nwla field corresponds to the database
     * column test.test.ss13pusa.NWLA.
     * 
     * @param nwla to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setNwla(Integer nwla);
    
    /**
     * Sets the nwlk of this Ss13pusa. The nwlk field corresponds to the database
     * column test.test.ss13pusa.NWLK.
     * 
     * @param nwlk to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setNwlk(Integer nwlk);
    
    /**
     * Sets the nwre of this Ss13pusa. The nwre field corresponds to the database
     * column test.test.ss13pusa.NWRE.
     * 
     * @param nwre to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setNwre(Integer nwre);
    
    /**
     * Sets the oip of this Ss13pusa. The oip field corresponds to the database
     * column test.test.ss13pusa.OIP.
     * 
     * @param oip to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setOip(Integer oip);
    
    /**
     * Sets the pap of this Ss13pusa. The pap field corresponds to the database
     * column test.test.ss13pusa.PAP.
     * 
     * @param pap to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setPap(Integer pap);
    
    /**
     * Sets the relp of this Ss13pusa. The relp field corresponds to the database
     * column test.test.ss13pusa.RELP.
     * 
     * @param relp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setRelp(Integer relp);
    
    /**
     * Sets the retp of this Ss13pusa. The retp field corresponds to the database
     * column test.test.ss13pusa.RETP.
     * 
     * @param retp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setRetp(Integer retp);
    
    /**
     * Sets the sch of this Ss13pusa. The sch field corresponds to the database
     * column test.test.ss13pusa.SCH.
     * 
     * @param sch to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setSch(Integer sch);
    
    /**
     * Sets the schg of this Ss13pusa. The schg field corresponds to the database
     * column test.test.ss13pusa.SCHG.
     * 
     * @param schg to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setSchg(Integer schg);
    
    /**
     * Sets the schl of this Ss13pusa. The schl field corresponds to the database
     * column test.test.ss13pusa.SCHL.
     * 
     * @param schl to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setSchl(Integer schl);
    
    /**
     * Sets the semp of this Ss13pusa. The semp field corresponds to the database
     * column test.test.ss13pusa.SEMP.
     * 
     * @param semp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setSemp(Integer semp);
    
    /**
     * Sets the sex of this Ss13pusa. The sex field corresponds to the database
     * column test.test.ss13pusa.SEX.
     * 
     * @param sex to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setSex(Integer sex);
    
    /**
     * Sets the ssip of this Ss13pusa. The ssip field corresponds to the database
     * column test.test.ss13pusa.SSIP.
     * 
     * @param ssip to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setSsip(Integer ssip);
    
    /**
     * Sets the ssp of this Ss13pusa. The ssp field corresponds to the database
     * column test.test.ss13pusa.SSP.
     * 
     * @param ssp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setSsp(Integer ssp);
    
    /**
     * Sets the wagp of this Ss13pusa. The wagp field corresponds to the database
     * column test.test.ss13pusa.WAGP.
     * 
     * @param wagp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setWagp(Integer wagp);
    
    /**
     * Sets the wkhp of this Ss13pusa. The wkhp field corresponds to the database
     * column test.test.ss13pusa.WKHP.
     * 
     * @param wkhp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setWkhp(Integer wkhp);
    
    /**
     * Sets the wkl of this Ss13pusa. The wkl field corresponds to the database
     * column test.test.ss13pusa.WKL.
     * 
     * @param wkl to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setWkl(Integer wkl);
    
    /**
     * Sets the wkw of this Ss13pusa. The wkw field corresponds to the database
     * column test.test.ss13pusa.WKW.
     * 
     * @param wkw to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setWkw(Integer wkw);
    
    /**
     * Sets the wrk of this Ss13pusa. The wrk field corresponds to the database
     * column test.test.ss13pusa.WRK.
     * 
     * @param wrk to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setWrk(Integer wrk);
    
    /**
     * Sets the yoep of this Ss13pusa. The yoep field corresponds to the database
     * column test.test.ss13pusa.YOEP.
     * 
     * @param yoep to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setYoep(Integer yoep);
    
    /**
     * Sets the anc of this Ss13pusa. The anc field corresponds to the database
     * column test.test.ss13pusa.ANC.
     * 
     * @param anc to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setAnc(Integer anc);
    
    /**
     * Sets the anc1P of this Ss13pusa. The anc1P field corresponds to the
     * database column test.test.ss13pusa.ANC1P.
     * 
     * @param anc1P to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setAnc1P(Integer anc1P);
    
    /**
     * Sets the anc2P of this Ss13pusa. The anc2P field corresponds to the
     * database column test.test.ss13pusa.ANC2P.
     * 
     * @param anc2P to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setAnc2P(Integer anc2P);
    
    /**
     * Sets the decade of this Ss13pusa. The decade field corresponds to the
     * database column test.test.ss13pusa.DECADE.
     * 
     * @param decade to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setDecade(Integer decade);
    
    /**
     * Sets the dis of this Ss13pusa. The dis field corresponds to the database
     * column test.test.ss13pusa.DIS.
     * 
     * @param dis to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setDis(Integer dis);
    
    /**
     * Sets the drivesp of this Ss13pusa. The drivesp field corresponds to the
     * database column test.test.ss13pusa.DRIVESP.
     * 
     * @param drivesp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setDrivesp(Integer drivesp);
    
    /**
     * Sets the esp of this Ss13pusa. The esp field corresponds to the database
     * column test.test.ss13pusa.ESP.
     * 
     * @param esp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setEsp(Integer esp);
    
    /**
     * Sets the esr of this Ss13pusa. The esr field corresponds to the database
     * column test.test.ss13pusa.ESR.
     * 
     * @param esr to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setEsr(Integer esr);
    
    /**
     * Sets the fod1P of this Ss13pusa. The fod1P field corresponds to the
     * database column test.test.ss13pusa.FOD1P.
     * 
     * @param fod1P to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFod1P(Integer fod1P);
    
    /**
     * Sets the fod2P of this Ss13pusa. The fod2P field corresponds to the
     * database column test.test.ss13pusa.FOD2P.
     * 
     * @param fod2P to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFod2P(Integer fod2P);
    
    /**
     * Sets the hicov of this Ss13pusa. The hicov field corresponds to the
     * database column test.test.ss13pusa.HICOV.
     * 
     * @param hicov to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setHicov(Integer hicov);
    
    /**
     * Sets the hisp of this Ss13pusa. The hisp field corresponds to the database
     * column test.test.ss13pusa.HISP.
     * 
     * @param hisp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setHisp(Integer hisp);
    
    /**
     * Sets the indp of this Ss13pusa. The indp field corresponds to the database
     * column test.test.ss13pusa.INDP.
     * 
     * @param indp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setIndp(Integer indp);
    
    /**
     * Sets the jwap of this Ss13pusa. The jwap field corresponds to the database
     * column test.test.ss13pusa.JWAP.
     * 
     * @param jwap to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setJwap(Integer jwap);
    
    /**
     * Sets the jwdp of this Ss13pusa. The jwdp field corresponds to the database
     * column test.test.ss13pusa.JWDP.
     * 
     * @param jwdp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setJwdp(Integer jwdp);
    
    /**
     * Sets the lanp of this Ss13pusa. The lanp field corresponds to the database
     * column test.test.ss13pusa.LANP.
     * 
     * @param lanp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setLanp(Integer lanp);
    
    /**
     * Sets the migpuma of this Ss13pusa. The migpuma field corresponds to the
     * database column test.test.ss13pusa.MIGPUMA.
     * 
     * @param migpuma to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setMigpuma(Integer migpuma);
    
    /**
     * Sets the migsp of this Ss13pusa. The migsp field corresponds to the
     * database column test.test.ss13pusa.MIGSP.
     * 
     * @param migsp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setMigsp(Integer migsp);
    
    /**
     * Sets the msp of this Ss13pusa. The msp field corresponds to the database
     * column test.test.ss13pusa.MSP.
     * 
     * @param msp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setMsp(Integer msp);
    
    /**
     * Sets the naicsp of this Ss13pusa. The naicsp field corresponds to the
     * database column test.test.ss13pusa.NAICSP.
     * 
     * @param naicsp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setNaicsp(Integer naicsp);
    
    /**
     * Sets the nativity of this Ss13pusa. The nativity field corresponds to the
     * database column test.test.ss13pusa.NATIVITY.
     * 
     * @param nativity to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setNativity(Integer nativity);
    
    /**
     * Sets the nop of this Ss13pusa. The nop field corresponds to the database
     * column test.test.ss13pusa.NOP.
     * 
     * @param nop to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setNop(Integer nop);
    
    /**
     * Sets the oc of this Ss13pusa. The oc field corresponds to the database
     * column test.test.ss13pusa.OC.
     * 
     * @param oc to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setOc(Integer oc);
    
    /**
     * Sets the occp of this Ss13pusa. The occp field corresponds to the database
     * column test.test.ss13pusa.OCCP.
     * 
     * @param occp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setOccp(Integer occp);
    
    /**
     * Sets the paoc of this Ss13pusa. The paoc field corresponds to the database
     * column test.test.ss13pusa.PAOC.
     * 
     * @param paoc to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setPaoc(Integer paoc);
    
    /**
     * Sets the pernp of this Ss13pusa. The pernp field corresponds to the
     * database column test.test.ss13pusa.PERNP.
     * 
     * @param pernp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setPernp(Integer pernp);
    
    /**
     * Sets the pincp of this Ss13pusa. The pincp field corresponds to the
     * database column test.test.ss13pusa.PINCP.
     * 
     * @param pincp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setPincp(Integer pincp);
    
    /**
     * Sets the pobp of this Ss13pusa. The pobp field corresponds to the database
     * column test.test.ss13pusa.POBP.
     * 
     * @param pobp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setPobp(Integer pobp);
    
    /**
     * Sets the povpip of this Ss13pusa. The povpip field corresponds to the
     * database column test.test.ss13pusa.POVPIP.
     * 
     * @param povpip to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setPovpip(Integer povpip);
    
    /**
     * Sets the powpuma of this Ss13pusa. The powpuma field corresponds to the
     * database column test.test.ss13pusa.POWPUMA.
     * 
     * @param powpuma to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setPowpuma(Integer powpuma);
    
    /**
     * Sets the powsp of this Ss13pusa. The powsp field corresponds to the
     * database column test.test.ss13pusa.POWSP.
     * 
     * @param powsp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setPowsp(Integer powsp);
    
    /**
     * Sets the privcov of this Ss13pusa. The privcov field corresponds to the
     * database column test.test.ss13pusa.PRIVCOV.
     * 
     * @param privcov to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setPrivcov(Integer privcov);
    
    /**
     * Sets the pubcov of this Ss13pusa. The pubcov field corresponds to the
     * database column test.test.ss13pusa.PUBCOV.
     * 
     * @param pubcov to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setPubcov(Integer pubcov);
    
    /**
     * Sets the qtrbir of this Ss13pusa. The qtrbir field corresponds to the
     * database column test.test.ss13pusa.QTRBIR.
     * 
     * @param qtrbir to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setQtrbir(Integer qtrbir);
    
    /**
     * Sets the rac1P of this Ss13pusa. The rac1P field corresponds to the
     * database column test.test.ss13pusa.RAC1P.
     * 
     * @param rac1P to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setRac1P(Integer rac1P);
    
    /**
     * Sets the rac2P of this Ss13pusa. The rac2P field corresponds to the
     * database column test.test.ss13pusa.RAC2P.
     * 
     * @param rac2P to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setRac2P(Integer rac2P);
    
    /**
     * Sets the rac3P of this Ss13pusa. The rac3P field corresponds to the
     * database column test.test.ss13pusa.RAC3P.
     * 
     * @param rac3P to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setRac3P(Integer rac3P);
    
    /**
     * Sets the racaian of this Ss13pusa. The racaian field corresponds to the
     * database column test.test.ss13pusa.RACAIAN.
     * 
     * @param racaian to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setRacaian(Integer racaian);
    
    /**
     * Sets the racasn of this Ss13pusa. The racasn field corresponds to the
     * database column test.test.ss13pusa.RACASN.
     * 
     * @param racasn to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setRacasn(Integer racasn);
    
    /**
     * Sets the racblk of this Ss13pusa. The racblk field corresponds to the
     * database column test.test.ss13pusa.RACBLK.
     * 
     * @param racblk to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setRacblk(Integer racblk);
    
    /**
     * Sets the racnh of this Ss13pusa. The racnh field corresponds to the
     * database column test.test.ss13pusa.RACNH.
     * 
     * @param racnh to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setRacnh(Integer racnh);
    
    /**
     * Sets the racnum of this Ss13pusa. The racnum field corresponds to the
     * database column test.test.ss13pusa.RACNUM.
     * 
     * @param racnum to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setRacnum(Integer racnum);
    
    /**
     * Sets the racpi of this Ss13pusa. The racpi field corresponds to the
     * database column test.test.ss13pusa.RACPI.
     * 
     * @param racpi to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setRacpi(Integer racpi);
    
    /**
     * Sets the racsor of this Ss13pusa. The racsor field corresponds to the
     * database column test.test.ss13pusa.RACSOR.
     * 
     * @param racsor to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setRacsor(Integer racsor);
    
    /**
     * Sets the racwht of this Ss13pusa. The racwht field corresponds to the
     * database column test.test.ss13pusa.RACWHT.
     * 
     * @param racwht to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setRacwht(Integer racwht);
    
    /**
     * Sets the rc of this Ss13pusa. The rc field corresponds to the database
     * column test.test.ss13pusa.RC.
     * 
     * @param rc to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setRc(Integer rc);
    
    /**
     * Sets the sciengp of this Ss13pusa. The sciengp field corresponds to the
     * database column test.test.ss13pusa.SCIENGP.
     * 
     * @param sciengp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setSciengp(Integer sciengp);
    
    /**
     * Sets the sciengrlp of this Ss13pusa. The sciengrlp field corresponds to
     * the database column test.test.ss13pusa.SCIENGRLP.
     * 
     * @param sciengrlp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setSciengrlp(Integer sciengrlp);
    
    /**
     * Sets the sfn of this Ss13pusa. The sfn field corresponds to the database
     * column test.test.ss13pusa.SFN.
     * 
     * @param sfn to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setSfn(Integer sfn);
    
    /**
     * Sets the sfr of this Ss13pusa. The sfr field corresponds to the database
     * column test.test.ss13pusa.SFR.
     * 
     * @param sfr to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setSfr(Integer sfr);
    
    /**
     * Sets the socp of this Ss13pusa. The socp field corresponds to the database
     * column test.test.ss13pusa.SOCP.
     * 
     * @param socp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setSocp(Integer socp);
    
    /**
     * Sets the vps of this Ss13pusa. The vps field corresponds to the database
     * column test.test.ss13pusa.VPS.
     * 
     * @param vps to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setVps(Integer vps);
    
    /**
     * Sets the waob of this Ss13pusa. The waob field corresponds to the database
     * column test.test.ss13pusa.WAOB.
     * 
     * @param waob to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setWaob(Integer waob);
    
    /**
     * Sets the fagep of this Ss13pusa. The fagep field corresponds to the
     * database column test.test.ss13pusa.FAGEP.
     * 
     * @param fagep to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFagep(Integer fagep);
    
    /**
     * Sets the fancp of this Ss13pusa. The fancp field corresponds to the
     * database column test.test.ss13pusa.FANCP.
     * 
     * @param fancp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFancp(Integer fancp);
    
    /**
     * Sets the fcitp of this Ss13pusa. The fcitp field corresponds to the
     * database column test.test.ss13pusa.FCITP.
     * 
     * @param fcitp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFcitp(Integer fcitp);
    
    /**
     * Sets the fcitwp of this Ss13pusa. The fcitwp field corresponds to the
     * database column test.test.ss13pusa.FCITWP.
     * 
     * @param fcitwp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFcitwp(Integer fcitwp);
    
    /**
     * Sets the fcowp of this Ss13pusa. The fcowp field corresponds to the
     * database column test.test.ss13pusa.FCOWP.
     * 
     * @param fcowp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFcowp(Integer fcowp);
    
    /**
     * Sets the fddrsp of this Ss13pusa. The fddrsp field corresponds to the
     * database column test.test.ss13pusa.FDDRSP.
     * 
     * @param fddrsp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFddrsp(Integer fddrsp);
    
    /**
     * Sets the fdearp of this Ss13pusa. The fdearp field corresponds to the
     * database column test.test.ss13pusa.FDEARP.
     * 
     * @param fdearp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFdearp(Integer fdearp);
    
    /**
     * Sets the fdeyep of this Ss13pusa. The fdeyep field corresponds to the
     * database column test.test.ss13pusa.FDEYEP.
     * 
     * @param fdeyep to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFdeyep(Integer fdeyep);
    
    /**
     * Sets the fdisp of this Ss13pusa. The fdisp field corresponds to the
     * database column test.test.ss13pusa.FDISP.
     * 
     * @param fdisp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFdisp(Integer fdisp);
    
    /**
     * Sets the fdoutp of this Ss13pusa. The fdoutp field corresponds to the
     * database column test.test.ss13pusa.FDOUTP.
     * 
     * @param fdoutp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFdoutp(Integer fdoutp);
    
    /**
     * Sets the fdphyp of this Ss13pusa. The fdphyp field corresponds to the
     * database column test.test.ss13pusa.FDPHYP.
     * 
     * @param fdphyp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFdphyp(Integer fdphyp);
    
    /**
     * Sets the fdratp of this Ss13pusa. The fdratp field corresponds to the
     * database column test.test.ss13pusa.FDRATP.
     * 
     * @param fdratp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFdratp(Integer fdratp);
    
    /**
     * Sets the fdratxp of this Ss13pusa. The fdratxp field corresponds to the
     * database column test.test.ss13pusa.FDRATXP.
     * 
     * @param fdratxp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFdratxp(Integer fdratxp);
    
    /**
     * Sets the fdremp of this Ss13pusa. The fdremp field corresponds to the
     * database column test.test.ss13pusa.FDREMP.
     * 
     * @param fdremp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFdremp(Integer fdremp);
    
    /**
     * Sets the fengp of this Ss13pusa. The fengp field corresponds to the
     * database column test.test.ss13pusa.FENGP.
     * 
     * @param fengp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFengp(Integer fengp);
    
    /**
     * Sets the fesrp of this Ss13pusa. The fesrp field corresponds to the
     * database column test.test.ss13pusa.FESRP.
     * 
     * @param fesrp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFesrp(Integer fesrp);
    
    /**
     * Sets the fferp of this Ss13pusa. The fferp field corresponds to the
     * database column test.test.ss13pusa.FFERP.
     * 
     * @param fferp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFferp(Integer fferp);
    
    /**
     * Sets the ffodp of this Ss13pusa. The ffodp field corresponds to the
     * database column test.test.ss13pusa.FFODP.
     * 
     * @param ffodp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFfodp(Integer ffodp);
    
    /**
     * Sets the fgclp of this Ss13pusa. The fgclp field corresponds to the
     * database column test.test.ss13pusa.FGCLP.
     * 
     * @param fgclp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFgclp(Integer fgclp);
    
    /**
     * Sets the fgcmp of this Ss13pusa. The fgcmp field corresponds to the
     * database column test.test.ss13pusa.FGCMP.
     * 
     * @param fgcmp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFgcmp(Integer fgcmp);
    
    /**
     * Sets the fgcrp of this Ss13pusa. The fgcrp field corresponds to the
     * database column test.test.ss13pusa.FGCRP.
     * 
     * @param fgcrp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFgcrp(Integer fgcrp);
    
    /**
     * Sets the fhins1P of this Ss13pusa. The fhins1P field corresponds to the
     * database column test.test.ss13pusa.FHINS1P.
     * 
     * @param fhins1P to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFhins1P(Integer fhins1P);
    
    /**
     * Sets the fhins2P of this Ss13pusa. The fhins2P field corresponds to the
     * database column test.test.ss13pusa.FHINS2P.
     * 
     * @param fhins2P to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFhins2P(Integer fhins2P);
    
    /**
     * Sets the fhins3C of this Ss13pusa. The fhins3C field corresponds to the
     * database column test.test.ss13pusa.FHINS3C.
     * 
     * @param fhins3C to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFhins3C(Integer fhins3C);
    
    /**
     * Sets the fhins3P of this Ss13pusa. The fhins3P field corresponds to the
     * database column test.test.ss13pusa.FHINS3P.
     * 
     * @param fhins3P to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFhins3P(Integer fhins3P);
    
    /**
     * Sets the fhins4C of this Ss13pusa. The fhins4C field corresponds to the
     * database column test.test.ss13pusa.FHINS4C.
     * 
     * @param fhins4C to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFhins4C(Integer fhins4C);
    
    /**
     * Sets the fhins4P of this Ss13pusa. The fhins4P field corresponds to the
     * database column test.test.ss13pusa.FHINS4P.
     * 
     * @param fhins4P to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFhins4P(Integer fhins4P);
    
    /**
     * Sets the fhins5C of this Ss13pusa. The fhins5C field corresponds to the
     * database column test.test.ss13pusa.FHINS5C.
     * 
     * @param fhins5C to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFhins5C(Integer fhins5C);
    
    /**
     * Sets the fhins5P of this Ss13pusa. The fhins5P field corresponds to the
     * database column test.test.ss13pusa.FHINS5P.
     * 
     * @param fhins5P to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFhins5P(Integer fhins5P);
    
    /**
     * Sets the fhins6P of this Ss13pusa. The fhins6P field corresponds to the
     * database column test.test.ss13pusa.FHINS6P.
     * 
     * @param fhins6P to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFhins6P(Integer fhins6P);
    
    /**
     * Sets the fhins7P of this Ss13pusa. The fhins7P field corresponds to the
     * database column test.test.ss13pusa.FHINS7P.
     * 
     * @param fhins7P to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFhins7P(Integer fhins7P);
    
    /**
     * Sets the fhisp of this Ss13pusa. The fhisp field corresponds to the
     * database column test.test.ss13pusa.FHISP.
     * 
     * @param fhisp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFhisp(Integer fhisp);
    
    /**
     * Sets the findp of this Ss13pusa. The findp field corresponds to the
     * database column test.test.ss13pusa.FINDP.
     * 
     * @param findp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFindp(Integer findp);
    
    /**
     * Sets the fintp of this Ss13pusa. The fintp field corresponds to the
     * database column test.test.ss13pusa.FINTP.
     * 
     * @param fintp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFintp(Integer fintp);
    
    /**
     * Sets the fjwdp of this Ss13pusa. The fjwdp field corresponds to the
     * database column test.test.ss13pusa.FJWDP.
     * 
     * @param fjwdp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFjwdp(Integer fjwdp);
    
    /**
     * Sets the fjwmnp of this Ss13pusa. The fjwmnp field corresponds to the
     * database column test.test.ss13pusa.FJWMNP.
     * 
     * @param fjwmnp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFjwmnp(Integer fjwmnp);
    
    /**
     * Sets the fjwrip of this Ss13pusa. The fjwrip field corresponds to the
     * database column test.test.ss13pusa.FJWRIP.
     * 
     * @param fjwrip to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFjwrip(Integer fjwrip);
    
    /**
     * Sets the fjwtrp of this Ss13pusa. The fjwtrp field corresponds to the
     * database column test.test.ss13pusa.FJWTRP.
     * 
     * @param fjwtrp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFjwtrp(Integer fjwtrp);
    
    /**
     * Sets the flanp of this Ss13pusa. The flanp field corresponds to the
     * database column test.test.ss13pusa.FLANP.
     * 
     * @param flanp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFlanp(Integer flanp);
    
    /**
     * Sets the flanxp of this Ss13pusa. The flanxp field corresponds to the
     * database column test.test.ss13pusa.FLANXP.
     * 
     * @param flanxp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFlanxp(Integer flanxp);
    
    /**
     * Sets the fmarhdp of this Ss13pusa. The fmarhdp field corresponds to the
     * database column test.test.ss13pusa.FMARHDP.
     * 
     * @param fmarhdp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFmarhdp(Integer fmarhdp);
    
    /**
     * Sets the fmarhmp of this Ss13pusa. The fmarhmp field corresponds to the
     * database column test.test.ss13pusa.FMARHMP.
     * 
     * @param fmarhmp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFmarhmp(Integer fmarhmp);
    
    /**
     * Sets the fmarhtp of this Ss13pusa. The fmarhtp field corresponds to the
     * database column test.test.ss13pusa.FMARHTP.
     * 
     * @param fmarhtp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFmarhtp(Integer fmarhtp);
    
    /**
     * Sets the fmarhwp of this Ss13pusa. The fmarhwp field corresponds to the
     * database column test.test.ss13pusa.FMARHWP.
     * 
     * @param fmarhwp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFmarhwp(Integer fmarhwp);
    
    /**
     * Sets the fmarhyp of this Ss13pusa. The fmarhyp field corresponds to the
     * database column test.test.ss13pusa.FMARHYP.
     * 
     * @param fmarhyp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFmarhyp(Integer fmarhyp);
    
    /**
     * Sets the fmarp of this Ss13pusa. The fmarp field corresponds to the
     * database column test.test.ss13pusa.FMARP.
     * 
     * @param fmarp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFmarp(Integer fmarp);
    
    /**
     * Sets the fmigp of this Ss13pusa. The fmigp field corresponds to the
     * database column test.test.ss13pusa.FMIGP.
     * 
     * @param fmigp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFmigp(Integer fmigp);
    
    /**
     * Sets the fmigsp of this Ss13pusa. The fmigsp field corresponds to the
     * database column test.test.ss13pusa.FMIGSP.
     * 
     * @param fmigsp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFmigsp(Integer fmigsp);
    
    /**
     * Sets the fmilpp of this Ss13pusa. The fmilpp field corresponds to the
     * database column test.test.ss13pusa.FMILPP.
     * 
     * @param fmilpp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFmilpp(Integer fmilpp);
    
    /**
     * Sets the fmilsp of this Ss13pusa. The fmilsp field corresponds to the
     * database column test.test.ss13pusa.FMILSP.
     * 
     * @param fmilsp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFmilsp(Integer fmilsp);
    
    /**
     * Sets the foccp of this Ss13pusa. The foccp field corresponds to the
     * database column test.test.ss13pusa.FOCCP.
     * 
     * @param foccp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFoccp(Integer foccp);
    
    /**
     * Sets the foip of this Ss13pusa. The foip field corresponds to the database
     * column test.test.ss13pusa.FOIP.
     * 
     * @param foip to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFoip(Integer foip);
    
    /**
     * Sets the fpap of this Ss13pusa. The fpap field corresponds to the database
     * column test.test.ss13pusa.FPAP.
     * 
     * @param fpap to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFpap(Integer fpap);
    
    /**
     * Sets the fpernp of this Ss13pusa. The fpernp field corresponds to the
     * database column test.test.ss13pusa.FPERNP.
     * 
     * @param fpernp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFpernp(Integer fpernp);
    
    /**
     * Sets the fpincp of this Ss13pusa. The fpincp field corresponds to the
     * database column test.test.ss13pusa.FPINCP.
     * 
     * @param fpincp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFpincp(Integer fpincp);
    
    /**
     * Sets the fpobp of this Ss13pusa. The fpobp field corresponds to the
     * database column test.test.ss13pusa.FPOBP.
     * 
     * @param fpobp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFpobp(Integer fpobp);
    
    /**
     * Sets the fpowsp of this Ss13pusa. The fpowsp field corresponds to the
     * database column test.test.ss13pusa.FPOWSP.
     * 
     * @param fpowsp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFpowsp(Integer fpowsp);
    
    /**
     * Sets the fprivcovp of this Ss13pusa. The fprivcovp field corresponds to
     * the database column test.test.ss13pusa.FPRIVCOVP.
     * 
     * @param fprivcovp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFprivcovp(Integer fprivcovp);
    
    /**
     * Sets the fpubcovp of this Ss13pusa. The fpubcovp field corresponds to the
     * database column test.test.ss13pusa.FPUBCOVP.
     * 
     * @param fpubcovp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFpubcovp(Integer fpubcovp);
    
    /**
     * Sets the fracp of this Ss13pusa. The fracp field corresponds to the
     * database column test.test.ss13pusa.FRACP.
     * 
     * @param fracp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFracp(Integer fracp);
    
    /**
     * Sets the frelp of this Ss13pusa. The frelp field corresponds to the
     * database column test.test.ss13pusa.FRELP.
     * 
     * @param frelp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFrelp(Integer frelp);
    
    /**
     * Sets the fretp of this Ss13pusa. The fretp field corresponds to the
     * database column test.test.ss13pusa.FRETP.
     * 
     * @param fretp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFretp(Integer fretp);
    
    /**
     * Sets the fschgp of this Ss13pusa. The fschgp field corresponds to the
     * database column test.test.ss13pusa.FSCHGP.
     * 
     * @param fschgp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFschgp(Integer fschgp);
    
    /**
     * Sets the fschlp of this Ss13pusa. The fschlp field corresponds to the
     * database column test.test.ss13pusa.FSCHLP.
     * 
     * @param fschlp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFschlp(Integer fschlp);
    
    /**
     * Sets the fschp of this Ss13pusa. The fschp field corresponds to the
     * database column test.test.ss13pusa.FSCHP.
     * 
     * @param fschp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFschp(Integer fschp);
    
    /**
     * Sets the fsemp of this Ss13pusa. The fsemp field corresponds to the
     * database column test.test.ss13pusa.FSEMP.
     * 
     * @param fsemp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFsemp(Integer fsemp);
    
    /**
     * Sets the fsexp of this Ss13pusa. The fsexp field corresponds to the
     * database column test.test.ss13pusa.FSEXP.
     * 
     * @param fsexp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFsexp(Integer fsexp);
    
    /**
     * Sets the fssip of this Ss13pusa. The fssip field corresponds to the
     * database column test.test.ss13pusa.FSSIP.
     * 
     * @param fssip to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFssip(Integer fssip);
    
    /**
     * Sets the fssp of this Ss13pusa. The fssp field corresponds to the database
     * column test.test.ss13pusa.FSSP.
     * 
     * @param fssp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFssp(Integer fssp);
    
    /**
     * Sets the fwagp of this Ss13pusa. The fwagp field corresponds to the
     * database column test.test.ss13pusa.FWAGP.
     * 
     * @param fwagp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFwagp(Integer fwagp);
    
    /**
     * Sets the fwkhp of this Ss13pusa. The fwkhp field corresponds to the
     * database column test.test.ss13pusa.FWKHP.
     * 
     * @param fwkhp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFwkhp(Integer fwkhp);
    
    /**
     * Sets the fwklp of this Ss13pusa. The fwklp field corresponds to the
     * database column test.test.ss13pusa.FWKLP.
     * 
     * @param fwklp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFwklp(Integer fwklp);
    
    /**
     * Sets the fwkwp of this Ss13pusa. The fwkwp field corresponds to the
     * database column test.test.ss13pusa.FWKWP.
     * 
     * @param fwkwp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFwkwp(Integer fwkwp);
    
    /**
     * Sets the fwrkp of this Ss13pusa. The fwrkp field corresponds to the
     * database column test.test.ss13pusa.FWRKP.
     * 
     * @param fwrkp to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFwrkp(Integer fwrkp);
    
    /**
     * Sets the fyoep of this Ss13pusa. The fyoep field corresponds to the
     * database column test.test.ss13pusa.FYOEP.
     * 
     * @param fyoep to set of this Ss13pusa
     * @return this Ss13pusa instance
     */
    Ss13pusa setFyoep(Integer fyoep);
    
    enum Identifier implements FieldIdentifier<Ss13pusa> {
        
        RT ("RT"),
        SERIALNO ("SERIALNO"),
        SPORDER ("SPORDER"),
        PUMA ("PUMA"),
        ST ("ST"),
        ADJINC ("ADJINC"),
        PWGTP ("PWGTP"),
        AGEP ("AGEP"),
        CIT ("CIT"),
        CITWP ("CITWP"),
        COW ("COW"),
        DDRS ("DDRS"),
        DEAR ("DEAR"),
        DEYE ("DEYE"),
        DOUT ("DOUT"),
        DPHY ("DPHY"),
        DRAT ("DRAT"),
        DRATX ("DRATX"),
        DREM ("DREM"),
        ENG ("ENG"),
        FER ("FER"),
        GCL ("GCL"),
        GCM ("GCM"),
        GCR ("GCR"),
        HINS1 ("HINS1"),
        HINS2 ("HINS2"),
        HINS3 ("HINS3"),
        HINS4 ("HINS4"),
        HINS5 ("HINS5"),
        HINS6 ("HINS6"),
        HINS7 ("HINS7"),
        INTP ("INTP"),
        JWMNP ("JWMNP"),
        JWRIP ("JWRIP"),
        JWTR ("JWTR"),
        LANX ("LANX"),
        MAR ("MAR"),
        MARHD ("MARHD"),
        MARHM ("MARHM"),
        MARHT ("MARHT"),
        MARHW ("MARHW"),
        MARHYP ("MARHYP"),
        MIG ("MIG"),
        MIL ("MIL"),
        MLPA ("MLPA"),
        MLPB ("MLPB"),
        MLPCD ("MLPCD"),
        MLPE ("MLPE"),
        MLPFG ("MLPFG"),
        MLPH ("MLPH"),
        MLPI ("MLPI"),
        MLPJ ("MLPJ"),
        MLPK ("MLPK"),
        NWAB ("NWAB"),
        NWAV ("NWAV"),
        NWLA ("NWLA"),
        NWLK ("NWLK"),
        NWRE ("NWRE"),
        OIP ("OIP"),
        PAP ("PAP"),
        RELP ("RELP"),
        RETP ("RETP"),
        SCH ("SCH"),
        SCHG ("SCHG"),
        SCHL ("SCHL"),
        SEMP ("SEMP"),
        SEX ("SEX"),
        SSIP ("SSIP"),
        SSP ("SSP"),
        WAGP ("WAGP"),
        WKHP ("WKHP"),
        WKL ("WKL"),
        WKW ("WKW"),
        WRK ("WRK"),
        YOEP ("YOEP"),
        ANC ("ANC"),
        ANC1_P ("ANC1P"),
        ANC2_P ("ANC2P"),
        DECADE ("DECADE"),
        DIS ("DIS"),
        DRIVESP ("DRIVESP"),
        ESP ("ESP"),
        ESR ("ESR"),
        FOD1_P ("FOD1P"),
        FOD2_P ("FOD2P"),
        HICOV ("HICOV"),
        HISP ("HISP"),
        INDP ("INDP"),
        JWAP ("JWAP"),
        JWDP ("JWDP"),
        LANP ("LANP"),
        MIGPUMA ("MIGPUMA"),
        MIGSP ("MIGSP"),
        MSP ("MSP"),
        NAICSP ("NAICSP"),
        NATIVITY ("NATIVITY"),
        NOP ("NOP"),
        OC ("OC"),
        OCCP ("OCCP"),
        PAOC ("PAOC"),
        PERNP ("PERNP"),
        PINCP ("PINCP"),
        POBP ("POBP"),
        POVPIP ("POVPIP"),
        POWPUMA ("POWPUMA"),
        POWSP ("POWSP"),
        PRIVCOV ("PRIVCOV"),
        PUBCOV ("PUBCOV"),
        QTRBIR ("QTRBIR"),
        RAC1_P ("RAC1P"),
        RAC2_P ("RAC2P"),
        RAC3_P ("RAC3P"),
        RACAIAN ("RACAIAN"),
        RACASN ("RACASN"),
        RACBLK ("RACBLK"),
        RACNH ("RACNH"),
        RACNUM ("RACNUM"),
        RACPI ("RACPI"),
        RACSOR ("RACSOR"),
        RACWHT ("RACWHT"),
        RC ("RC"),
        SCIENGP ("SCIENGP"),
        SCIENGRLP ("SCIENGRLP"),
        SFN ("SFN"),
        SFR ("SFR"),
        SOCP ("SOCP"),
        VPS ("VPS"),
        WAOB ("WAOB"),
        FAGEP ("FAGEP"),
        FANCP ("FANCP"),
        FCITP ("FCITP"),
        FCITWP ("FCITWP"),
        FCOWP ("FCOWP"),
        FDDRSP ("FDDRSP"),
        FDEARP ("FDEARP"),
        FDEYEP ("FDEYEP"),
        FDISP ("FDISP"),
        FDOUTP ("FDOUTP"),
        FDPHYP ("FDPHYP"),
        FDRATP ("FDRATP"),
        FDRATXP ("FDRATXP"),
        FDREMP ("FDREMP"),
        FENGP ("FENGP"),
        FESRP ("FESRP"),
        FFERP ("FFERP"),
        FFODP ("FFODP"),
        FGCLP ("FGCLP"),
        FGCMP ("FGCMP"),
        FGCRP ("FGCRP"),
        FHINS1_P ("FHINS1P"),
        FHINS2_P ("FHINS2P"),
        FHINS3_C ("FHINS3C"),
        FHINS3_P ("FHINS3P"),
        FHINS4_C ("FHINS4C"),
        FHINS4_P ("FHINS4P"),
        FHINS5_C ("FHINS5C"),
        FHINS5_P ("FHINS5P"),
        FHINS6_P ("FHINS6P"),
        FHINS7_P ("FHINS7P"),
        FHISP ("FHISP"),
        FINDP ("FINDP"),
        FINTP ("FINTP"),
        FJWDP ("FJWDP"),
        FJWMNP ("FJWMNP"),
        FJWRIP ("FJWRIP"),
        FJWTRP ("FJWTRP"),
        FLANP ("FLANP"),
        FLANXP ("FLANXP"),
        FMARHDP ("FMARHDP"),
        FMARHMP ("FMARHMP"),
        FMARHTP ("FMARHTP"),
        FMARHWP ("FMARHWP"),
        FMARHYP ("FMARHYP"),
        FMARP ("FMARP"),
        FMIGP ("FMIGP"),
        FMIGSP ("FMIGSP"),
        FMILPP ("FMILPP"),
        FMILSP ("FMILSP"),
        FOCCP ("FOCCP"),
        FOIP ("FOIP"),
        FPAP ("FPAP"),
        FPERNP ("FPERNP"),
        FPINCP ("FPINCP"),
        FPOBP ("FPOBP"),
        FPOWSP ("FPOWSP"),
        FPRIVCOVP ("FPRIVCOVP"),
        FPUBCOVP ("FPUBCOVP"),
        FRACP ("FRACP"),
        FRELP ("FRELP"),
        FRETP ("FRETP"),
        FSCHGP ("FSCHGP"),
        FSCHLP ("FSCHLP"),
        FSCHP ("FSCHP"),
        FSEMP ("FSEMP"),
        FSEXP ("FSEXP"),
        FSSIP ("FSSIP"),
        FSSP ("FSSP"),
        FWAGP ("FWAGP"),
        FWKHP ("FWKHP"),
        FWKLP ("FWKLP"),
        FWKWP ("FWKWP"),
        FWRKP ("FWRKP"),
        FYOEP ("FYOEP");
        
        private final String columnName;
        
        Identifier(String columnName) {
            this.columnName = columnName;
        }
        
        @Override
        public String dbmsName() {
            return "test";
        }
        
        @Override
        public String schemaName() {
            return "test";
        }
        
        @Override
        public String tableName() {
            return "ss13pusa";
        }
        
        @Override
        public String columnName() {
            return this.columnName;
        }
    }
}