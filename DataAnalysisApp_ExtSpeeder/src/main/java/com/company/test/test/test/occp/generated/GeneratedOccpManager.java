package com.company.test.test.test.occp.generated;

import com.company.test.test.test.occp.Occp;
import com.company.test.test.test.occp.OccpManager;
import com.speedment.component.ProjectComponent;
import com.speedment.config.db.Table;
import com.speedment.enterprise.offheapreadonlycache.manager.HasSerializer;
import com.speedment.internal.core.manager.sql.SqlManager;
import com.speedment.util.tuple.Tuple1;
import javax.annotation.Generated;
import org.mapdb.Serializer;

/**
 * The generated base manager representing an entity (for example, a row) in
 * the Table test.test.test.occp.
 * <p>
 * This file has been automatically generated by Ext Speeder. Any changes
 * made to it will be overwritten.
 * 
 * @author Ext Speeder
 */
@Generated("Ext Speeder")
public interface GeneratedOccpManager extends HasSerializer<Occp>, SqlManager<Occp> {
    
    @Override
    default Serializer<Occp> newSerializer() {
        return new GeneratedOccpSerializerImpl(this);
    }
    
    @Override
    default Integer primaryKeyFor(Occp entity) {
        return entity.getId();
    }
    
    @Override
    default Table getTable() {
        return speedment().get(ProjectComponent.class).getProject().findTableByName("test.test.occp");
    }
    
    @Override
    default Class<OccpManager> getManagerClass() {
        return OccpManager.class;
    }
    
    @Override
    default Class<Occp> getEntityClass() {
        return Occp.class;
    }
    
    @Override
    Tuple1<Class<Integer>> getPrimaryKeyClasses();
}