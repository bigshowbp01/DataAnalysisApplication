package com.company.test.test.test.ss13pusa.generated;

import com.company.test.test.test.ss13pusa.Ss13pusa;
import com.speedment.Speedment;
import com.speedment.internal.core.code.AbstractBaseEntity;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;
import javax.annotation.Generated;

/**
 * The generated base implementation representing an entity (for example, a
 * row) in the Table test.test.test.ss13pusa.
 * <p>
 * This file has been automatically generated by Ext Speeder. Any changes
 * made to it will be overwritten.
 * 
 * @author Ext Speeder
 */
@Generated("Ext Speeder")
public abstract class GeneratedSs13pusaImpl extends AbstractBaseEntity<Ss13pusa> implements Ss13pusa {
    
    private Integer rt;
    private Integer serialno;
    private Integer sporder;
    private Integer puma;
    private Integer st;
    private Integer adjinc;
    private Integer pwgtp;
    private Integer agep;
    private Integer cit;
    private Integer citwp;
    private Integer cow;
    private Integer ddrs;
    private Integer dear;
    private Integer deye;
    private Integer dout;
    private Integer dphy;
    private Integer drat;
    private Integer dratx;
    private Integer drem;
    private Integer eng;
    private Integer fer;
    private Integer gcl;
    private Integer gcm;
    private Integer gcr;
    private Integer hins1;
    private Integer hins2;
    private Integer hins3;
    private Integer hins4;
    private Integer hins5;
    private Integer hins6;
    private Integer hins7;
    private Integer intp;
    private Integer jwmnp;
    private Integer jwrip;
    private Integer jwtr;
    private Integer lanx;
    private Integer mar;
    private Integer marhd;
    private Integer marhm;
    private Integer marht;
    private Integer marhw;
    private Integer marhyp;
    private Integer mig;
    private Integer mil;
    private Integer mlpa;
    private Integer mlpb;
    private Integer mlpcd;
    private Integer mlpe;
    private Integer mlpfg;
    private Integer mlph;
    private Integer mlpi;
    private Integer mlpj;
    private Integer mlpk;
    private Integer nwab;
    private Integer nwav;
    private Integer nwla;
    private Integer nwlk;
    private Integer nwre;
    private Integer oip;
    private Integer pap;
    private Integer relp;
    private Integer retp;
    private Integer sch;
    private Integer schg;
    private Integer schl;
    private Integer semp;
    private Integer sex;
    private Integer ssip;
    private Integer ssp;
    private Integer wagp;
    private Integer wkhp;
    private Integer wkl;
    private Integer wkw;
    private Integer wrk;
    private Integer yoep;
    private Integer anc;
    private Integer anc1P;
    private Integer anc2P;
    private Integer decade;
    private Integer dis;
    private Integer drivesp;
    private Integer esp;
    private Integer esr;
    private Integer fod1P;
    private Integer fod2P;
    private Integer hicov;
    private Integer hisp;
    private Integer indp;
    private Integer jwap;
    private Integer jwdp;
    private Integer lanp;
    private Integer migpuma;
    private Integer migsp;
    private Integer msp;
    private Integer naicsp;
    private Integer nativity;
    private Integer nop;
    private Integer oc;
    private Integer occp;
    private Integer paoc;
    private Integer pernp;
    private Integer pincp;
    private Integer pobp;
    private Integer povpip;
    private Integer powpuma;
    private Integer powsp;
    private Integer privcov;
    private Integer pubcov;
    private Integer qtrbir;
    private Integer rac1P;
    private Integer rac2P;
    private Integer rac3P;
    private Integer racaian;
    private Integer racasn;
    private Integer racblk;
    private Integer racnh;
    private Integer racnum;
    private Integer racpi;
    private Integer racsor;
    private Integer racwht;
    private Integer rc;
    private Integer sciengp;
    private Integer sciengrlp;
    private Integer sfn;
    private Integer sfr;
    private Integer socp;
    private Integer vps;
    private Integer waob;
    private Integer fagep;
    private Integer fancp;
    private Integer fcitp;
    private Integer fcitwp;
    private Integer fcowp;
    private Integer fddrsp;
    private Integer fdearp;
    private Integer fdeyep;
    private Integer fdisp;
    private Integer fdoutp;
    private Integer fdphyp;
    private Integer fdratp;
    private Integer fdratxp;
    private Integer fdremp;
    private Integer fengp;
    private Integer fesrp;
    private Integer fferp;
    private Integer ffodp;
    private Integer fgclp;
    private Integer fgcmp;
    private Integer fgcrp;
    private Integer fhins1P;
    private Integer fhins2P;
    private Integer fhins3C;
    private Integer fhins3P;
    private Integer fhins4C;
    private Integer fhins4P;
    private Integer fhins5C;
    private Integer fhins5P;
    private Integer fhins6P;
    private Integer fhins7P;
    private Integer fhisp;
    private Integer findp;
    private Integer fintp;
    private Integer fjwdp;
    private Integer fjwmnp;
    private Integer fjwrip;
    private Integer fjwtrp;
    private Integer flanp;
    private Integer flanxp;
    private Integer fmarhdp;
    private Integer fmarhmp;
    private Integer fmarhtp;
    private Integer fmarhwp;
    private Integer fmarhyp;
    private Integer fmarp;
    private Integer fmigp;
    private Integer fmigsp;
    private Integer fmilpp;
    private Integer fmilsp;
    private Integer foccp;
    private Integer foip;
    private Integer fpap;
    private Integer fpernp;
    private Integer fpincp;
    private Integer fpobp;
    private Integer fpowsp;
    private Integer fprivcovp;
    private Integer fpubcovp;
    private Integer fracp;
    private Integer frelp;
    private Integer fretp;
    private Integer fschgp;
    private Integer fschlp;
    private Integer fschp;
    private Integer fsemp;
    private Integer fsexp;
    private Integer fssip;
    private Integer fssp;
    private Integer fwagp;
    private Integer fwkhp;
    private Integer fwklp;
    private Integer fwkwp;
    private Integer fwrkp;
    private Integer fyoep;
    
    protected GeneratedSs13pusaImpl() {
        
    }
    
    @Override
    public Optional<Integer> getRt() {
        return Optional.ofNullable(rt);
    }
    
    @Override
    public Optional<Integer> getSerialno() {
        return Optional.ofNullable(serialno);
    }
    
    @Override
    public Optional<Integer> getSporder() {
        return Optional.ofNullable(sporder);
    }
    
    @Override
    public Optional<Integer> getPuma() {
        return Optional.ofNullable(puma);
    }
    
    @Override
    public Optional<Integer> getSt() {
        return Optional.ofNullable(st);
    }
    
    @Override
    public Optional<Integer> getAdjinc() {
        return Optional.ofNullable(adjinc);
    }
    
    @Override
    public Optional<Integer> getPwgtp() {
        return Optional.ofNullable(pwgtp);
    }
    
    @Override
    public Optional<Integer> getAgep() {
        return Optional.ofNullable(agep);
    }
    
    @Override
    public Optional<Integer> getCit() {
        return Optional.ofNullable(cit);
    }
    
    @Override
    public Optional<Integer> getCitwp() {
        return Optional.ofNullable(citwp);
    }
    
    @Override
    public Optional<Integer> getCow() {
        return Optional.ofNullable(cow);
    }
    
    @Override
    public Optional<Integer> getDdrs() {
        return Optional.ofNullable(ddrs);
    }
    
    @Override
    public Optional<Integer> getDear() {
        return Optional.ofNullable(dear);
    }
    
    @Override
    public Optional<Integer> getDeye() {
        return Optional.ofNullable(deye);
    }
    
    @Override
    public Optional<Integer> getDout() {
        return Optional.ofNullable(dout);
    }
    
    @Override
    public Optional<Integer> getDphy() {
        return Optional.ofNullable(dphy);
    }
    
    @Override
    public Optional<Integer> getDrat() {
        return Optional.ofNullable(drat);
    }
    
    @Override
    public Optional<Integer> getDratx() {
        return Optional.ofNullable(dratx);
    }
    
    @Override
    public Optional<Integer> getDrem() {
        return Optional.ofNullable(drem);
    }
    
    @Override
    public Optional<Integer> getEng() {
        return Optional.ofNullable(eng);
    }
    
    @Override
    public Optional<Integer> getFer() {
        return Optional.ofNullable(fer);
    }
    
    @Override
    public Optional<Integer> getGcl() {
        return Optional.ofNullable(gcl);
    }
    
    @Override
    public Optional<Integer> getGcm() {
        return Optional.ofNullable(gcm);
    }
    
    @Override
    public Optional<Integer> getGcr() {
        return Optional.ofNullable(gcr);
    }
    
    @Override
    public Optional<Integer> getHins1() {
        return Optional.ofNullable(hins1);
    }
    
    @Override
    public Optional<Integer> getHins2() {
        return Optional.ofNullable(hins2);
    }
    
    @Override
    public Optional<Integer> getHins3() {
        return Optional.ofNullable(hins3);
    }
    
    @Override
    public Optional<Integer> getHins4() {
        return Optional.ofNullable(hins4);
    }
    
    @Override
    public Optional<Integer> getHins5() {
        return Optional.ofNullable(hins5);
    }
    
    @Override
    public Optional<Integer> getHins6() {
        return Optional.ofNullable(hins6);
    }
    
    @Override
    public Optional<Integer> getHins7() {
        return Optional.ofNullable(hins7);
    }
    
    @Override
    public Optional<Integer> getIntp() {
        return Optional.ofNullable(intp);
    }
    
    @Override
    public Optional<Integer> getJwmnp() {
        return Optional.ofNullable(jwmnp);
    }
    
    @Override
    public Optional<Integer> getJwrip() {
        return Optional.ofNullable(jwrip);
    }
    
    @Override
    public Optional<Integer> getJwtr() {
        return Optional.ofNullable(jwtr);
    }
    
    @Override
    public Optional<Integer> getLanx() {
        return Optional.ofNullable(lanx);
    }
    
    @Override
    public Optional<Integer> getMar() {
        return Optional.ofNullable(mar);
    }
    
    @Override
    public Optional<Integer> getMarhd() {
        return Optional.ofNullable(marhd);
    }
    
    @Override
    public Optional<Integer> getMarhm() {
        return Optional.ofNullable(marhm);
    }
    
    @Override
    public Optional<Integer> getMarht() {
        return Optional.ofNullable(marht);
    }
    
    @Override
    public Optional<Integer> getMarhw() {
        return Optional.ofNullable(marhw);
    }
    
    @Override
    public Optional<Integer> getMarhyp() {
        return Optional.ofNullable(marhyp);
    }
    
    @Override
    public Optional<Integer> getMig() {
        return Optional.ofNullable(mig);
    }
    
    @Override
    public Optional<Integer> getMil() {
        return Optional.ofNullable(mil);
    }
    
    @Override
    public Optional<Integer> getMlpa() {
        return Optional.ofNullable(mlpa);
    }
    
    @Override
    public Optional<Integer> getMlpb() {
        return Optional.ofNullable(mlpb);
    }
    
    @Override
    public Optional<Integer> getMlpcd() {
        return Optional.ofNullable(mlpcd);
    }
    
    @Override
    public Optional<Integer> getMlpe() {
        return Optional.ofNullable(mlpe);
    }
    
    @Override
    public Optional<Integer> getMlpfg() {
        return Optional.ofNullable(mlpfg);
    }
    
    @Override
    public Optional<Integer> getMlph() {
        return Optional.ofNullable(mlph);
    }
    
    @Override
    public Optional<Integer> getMlpi() {
        return Optional.ofNullable(mlpi);
    }
    
    @Override
    public Optional<Integer> getMlpj() {
        return Optional.ofNullable(mlpj);
    }
    
    @Override
    public Optional<Integer> getMlpk() {
        return Optional.ofNullable(mlpk);
    }
    
    @Override
    public Optional<Integer> getNwab() {
        return Optional.ofNullable(nwab);
    }
    
    @Override
    public Optional<Integer> getNwav() {
        return Optional.ofNullable(nwav);
    }
    
    @Override
    public Optional<Integer> getNwla() {
        return Optional.ofNullable(nwla);
    }
    
    @Override
    public Optional<Integer> getNwlk() {
        return Optional.ofNullable(nwlk);
    }
    
    @Override
    public Optional<Integer> getNwre() {
        return Optional.ofNullable(nwre);
    }
    
    @Override
    public Optional<Integer> getOip() {
        return Optional.ofNullable(oip);
    }
    
    @Override
    public Optional<Integer> getPap() {
        return Optional.ofNullable(pap);
    }
    
    @Override
    public Optional<Integer> getRelp() {
        return Optional.ofNullable(relp);
    }
    
    @Override
    public Optional<Integer> getRetp() {
        return Optional.ofNullable(retp);
    }
    
    @Override
    public Optional<Integer> getSch() {
        return Optional.ofNullable(sch);
    }
    
    @Override
    public Optional<Integer> getSchg() {
        return Optional.ofNullable(schg);
    }
    
    @Override
    public Optional<Integer> getSchl() {
        return Optional.ofNullable(schl);
    }
    
    @Override
    public Optional<Integer> getSemp() {
        return Optional.ofNullable(semp);
    }
    
    @Override
    public Optional<Integer> getSex() {
        return Optional.ofNullable(sex);
    }
    
    @Override
    public Optional<Integer> getSsip() {
        return Optional.ofNullable(ssip);
    }
    
    @Override
    public Optional<Integer> getSsp() {
        return Optional.ofNullable(ssp);
    }
    
    @Override
    public Optional<Integer> getWagp() {
        return Optional.ofNullable(wagp);
    }
    
    @Override
    public Optional<Integer> getWkhp() {
        return Optional.ofNullable(wkhp);
    }
    
    @Override
    public Optional<Integer> getWkl() {
        return Optional.ofNullable(wkl);
    }
    
    @Override
    public Optional<Integer> getWkw() {
        return Optional.ofNullable(wkw);
    }
    
    @Override
    public Optional<Integer> getWrk() {
        return Optional.ofNullable(wrk);
    }
    
    @Override
    public Optional<Integer> getYoep() {
        return Optional.ofNullable(yoep);
    }
    
    @Override
    public Optional<Integer> getAnc() {
        return Optional.ofNullable(anc);
    }
    
    @Override
    public Optional<Integer> getAnc1P() {
        return Optional.ofNullable(anc1P);
    }
    
    @Override
    public Optional<Integer> getAnc2P() {
        return Optional.ofNullable(anc2P);
    }
    
    @Override
    public Optional<Integer> getDecade() {
        return Optional.ofNullable(decade);
    }
    
    @Override
    public Optional<Integer> getDis() {
        return Optional.ofNullable(dis);
    }
    
    @Override
    public Optional<Integer> getDrivesp() {
        return Optional.ofNullable(drivesp);
    }
    
    @Override
    public Optional<Integer> getEsp() {
        return Optional.ofNullable(esp);
    }
    
    @Override
    public Optional<Integer> getEsr() {
        return Optional.ofNullable(esr);
    }
    
    @Override
    public Optional<Integer> getFod1P() {
        return Optional.ofNullable(fod1P);
    }
    
    @Override
    public Optional<Integer> getFod2P() {
        return Optional.ofNullable(fod2P);
    }
    
    @Override
    public Optional<Integer> getHicov() {
        return Optional.ofNullable(hicov);
    }
    
    @Override
    public Optional<Integer> getHisp() {
        return Optional.ofNullable(hisp);
    }
    
    @Override
    public Optional<Integer> getIndp() {
        return Optional.ofNullable(indp);
    }
    
    @Override
    public Optional<Integer> getJwap() {
        return Optional.ofNullable(jwap);
    }
    
    @Override
    public Optional<Integer> getJwdp() {
        return Optional.ofNullable(jwdp);
    }
    
    @Override
    public Optional<Integer> getLanp() {
        return Optional.ofNullable(lanp);
    }
    
    @Override
    public Optional<Integer> getMigpuma() {
        return Optional.ofNullable(migpuma);
    }
    
    @Override
    public Optional<Integer> getMigsp() {
        return Optional.ofNullable(migsp);
    }
    
    @Override
    public Optional<Integer> getMsp() {
        return Optional.ofNullable(msp);
    }
    
    @Override
    public Optional<Integer> getNaicsp() {
        return Optional.ofNullable(naicsp);
    }
    
    @Override
    public Optional<Integer> getNativity() {
        return Optional.ofNullable(nativity);
    }
    
    @Override
    public Optional<Integer> getNop() {
        return Optional.ofNullable(nop);
    }
    
    @Override
    public Optional<Integer> getOc() {
        return Optional.ofNullable(oc);
    }
    
    @Override
    public Optional<Integer> getOccp() {
        return Optional.ofNullable(occp);
    }
    
    @Override
    public Optional<Integer> getPaoc() {
        return Optional.ofNullable(paoc);
    }
    
    @Override
    public Optional<Integer> getPernp() {
        return Optional.ofNullable(pernp);
    }
    
    @Override
    public Optional<Integer> getPincp() {
        return Optional.ofNullable(pincp);
    }
    
    @Override
    public Optional<Integer> getPobp() {
        return Optional.ofNullable(pobp);
    }
    
    @Override
    public Optional<Integer> getPovpip() {
        return Optional.ofNullable(povpip);
    }
    
    @Override
    public Optional<Integer> getPowpuma() {
        return Optional.ofNullable(powpuma);
    }
    
    @Override
    public Optional<Integer> getPowsp() {
        return Optional.ofNullable(powsp);
    }
    
    @Override
    public Optional<Integer> getPrivcov() {
        return Optional.ofNullable(privcov);
    }
    
    @Override
    public Optional<Integer> getPubcov() {
        return Optional.ofNullable(pubcov);
    }
    
    @Override
    public Optional<Integer> getQtrbir() {
        return Optional.ofNullable(qtrbir);
    }
    
    @Override
    public Optional<Integer> getRac1P() {
        return Optional.ofNullable(rac1P);
    }
    
    @Override
    public Optional<Integer> getRac2P() {
        return Optional.ofNullable(rac2P);
    }
    
    @Override
    public Optional<Integer> getRac3P() {
        return Optional.ofNullable(rac3P);
    }
    
    @Override
    public Optional<Integer> getRacaian() {
        return Optional.ofNullable(racaian);
    }
    
    @Override
    public Optional<Integer> getRacasn() {
        return Optional.ofNullable(racasn);
    }
    
    @Override
    public Optional<Integer> getRacblk() {
        return Optional.ofNullable(racblk);
    }
    
    @Override
    public Optional<Integer> getRacnh() {
        return Optional.ofNullable(racnh);
    }
    
    @Override
    public Optional<Integer> getRacnum() {
        return Optional.ofNullable(racnum);
    }
    
    @Override
    public Optional<Integer> getRacpi() {
        return Optional.ofNullable(racpi);
    }
    
    @Override
    public Optional<Integer> getRacsor() {
        return Optional.ofNullable(racsor);
    }
    
    @Override
    public Optional<Integer> getRacwht() {
        return Optional.ofNullable(racwht);
    }
    
    @Override
    public Optional<Integer> getRc() {
        return Optional.ofNullable(rc);
    }
    
    @Override
    public Optional<Integer> getSciengp() {
        return Optional.ofNullable(sciengp);
    }
    
    @Override
    public Optional<Integer> getSciengrlp() {
        return Optional.ofNullable(sciengrlp);
    }
    
    @Override
    public Optional<Integer> getSfn() {
        return Optional.ofNullable(sfn);
    }
    
    @Override
    public Optional<Integer> getSfr() {
        return Optional.ofNullable(sfr);
    }
    
    @Override
    public Optional<Integer> getSocp() {
        return Optional.ofNullable(socp);
    }
    
    @Override
    public Optional<Integer> getVps() {
        return Optional.ofNullable(vps);
    }
    
    @Override
    public Optional<Integer> getWaob() {
        return Optional.ofNullable(waob);
    }
    
    @Override
    public Optional<Integer> getFagep() {
        return Optional.ofNullable(fagep);
    }
    
    @Override
    public Optional<Integer> getFancp() {
        return Optional.ofNullable(fancp);
    }
    
    @Override
    public Optional<Integer> getFcitp() {
        return Optional.ofNullable(fcitp);
    }
    
    @Override
    public Optional<Integer> getFcitwp() {
        return Optional.ofNullable(fcitwp);
    }
    
    @Override
    public Optional<Integer> getFcowp() {
        return Optional.ofNullable(fcowp);
    }
    
    @Override
    public Optional<Integer> getFddrsp() {
        return Optional.ofNullable(fddrsp);
    }
    
    @Override
    public Optional<Integer> getFdearp() {
        return Optional.ofNullable(fdearp);
    }
    
    @Override
    public Optional<Integer> getFdeyep() {
        return Optional.ofNullable(fdeyep);
    }
    
    @Override
    public Optional<Integer> getFdisp() {
        return Optional.ofNullable(fdisp);
    }
    
    @Override
    public Optional<Integer> getFdoutp() {
        return Optional.ofNullable(fdoutp);
    }
    
    @Override
    public Optional<Integer> getFdphyp() {
        return Optional.ofNullable(fdphyp);
    }
    
    @Override
    public Optional<Integer> getFdratp() {
        return Optional.ofNullable(fdratp);
    }
    
    @Override
    public Optional<Integer> getFdratxp() {
        return Optional.ofNullable(fdratxp);
    }
    
    @Override
    public Optional<Integer> getFdremp() {
        return Optional.ofNullable(fdremp);
    }
    
    @Override
    public Optional<Integer> getFengp() {
        return Optional.ofNullable(fengp);
    }
    
    @Override
    public Optional<Integer> getFesrp() {
        return Optional.ofNullable(fesrp);
    }
    
    @Override
    public Optional<Integer> getFferp() {
        return Optional.ofNullable(fferp);
    }
    
    @Override
    public Optional<Integer> getFfodp() {
        return Optional.ofNullable(ffodp);
    }
    
    @Override
    public Optional<Integer> getFgclp() {
        return Optional.ofNullable(fgclp);
    }
    
    @Override
    public Optional<Integer> getFgcmp() {
        return Optional.ofNullable(fgcmp);
    }
    
    @Override
    public Optional<Integer> getFgcrp() {
        return Optional.ofNullable(fgcrp);
    }
    
    @Override
    public Optional<Integer> getFhins1P() {
        return Optional.ofNullable(fhins1P);
    }
    
    @Override
    public Optional<Integer> getFhins2P() {
        return Optional.ofNullable(fhins2P);
    }
    
    @Override
    public Optional<Integer> getFhins3C() {
        return Optional.ofNullable(fhins3C);
    }
    
    @Override
    public Optional<Integer> getFhins3P() {
        return Optional.ofNullable(fhins3P);
    }
    
    @Override
    public Optional<Integer> getFhins4C() {
        return Optional.ofNullable(fhins4C);
    }
    
    @Override
    public Optional<Integer> getFhins4P() {
        return Optional.ofNullable(fhins4P);
    }
    
    @Override
    public Optional<Integer> getFhins5C() {
        return Optional.ofNullable(fhins5C);
    }
    
    @Override
    public Optional<Integer> getFhins5P() {
        return Optional.ofNullable(fhins5P);
    }
    
    @Override
    public Optional<Integer> getFhins6P() {
        return Optional.ofNullable(fhins6P);
    }
    
    @Override
    public Optional<Integer> getFhins7P() {
        return Optional.ofNullable(fhins7P);
    }
    
    @Override
    public Optional<Integer> getFhisp() {
        return Optional.ofNullable(fhisp);
    }
    
    @Override
    public Optional<Integer> getFindp() {
        return Optional.ofNullable(findp);
    }
    
    @Override
    public Optional<Integer> getFintp() {
        return Optional.ofNullable(fintp);
    }
    
    @Override
    public Optional<Integer> getFjwdp() {
        return Optional.ofNullable(fjwdp);
    }
    
    @Override
    public Optional<Integer> getFjwmnp() {
        return Optional.ofNullable(fjwmnp);
    }
    
    @Override
    public Optional<Integer> getFjwrip() {
        return Optional.ofNullable(fjwrip);
    }
    
    @Override
    public Optional<Integer> getFjwtrp() {
        return Optional.ofNullable(fjwtrp);
    }
    
    @Override
    public Optional<Integer> getFlanp() {
        return Optional.ofNullable(flanp);
    }
    
    @Override
    public Optional<Integer> getFlanxp() {
        return Optional.ofNullable(flanxp);
    }
    
    @Override
    public Optional<Integer> getFmarhdp() {
        return Optional.ofNullable(fmarhdp);
    }
    
    @Override
    public Optional<Integer> getFmarhmp() {
        return Optional.ofNullable(fmarhmp);
    }
    
    @Override
    public Optional<Integer> getFmarhtp() {
        return Optional.ofNullable(fmarhtp);
    }
    
    @Override
    public Optional<Integer> getFmarhwp() {
        return Optional.ofNullable(fmarhwp);
    }
    
    @Override
    public Optional<Integer> getFmarhyp() {
        return Optional.ofNullable(fmarhyp);
    }
    
    @Override
    public Optional<Integer> getFmarp() {
        return Optional.ofNullable(fmarp);
    }
    
    @Override
    public Optional<Integer> getFmigp() {
        return Optional.ofNullable(fmigp);
    }
    
    @Override
    public Optional<Integer> getFmigsp() {
        return Optional.ofNullable(fmigsp);
    }
    
    @Override
    public Optional<Integer> getFmilpp() {
        return Optional.ofNullable(fmilpp);
    }
    
    @Override
    public Optional<Integer> getFmilsp() {
        return Optional.ofNullable(fmilsp);
    }
    
    @Override
    public Optional<Integer> getFoccp() {
        return Optional.ofNullable(foccp);
    }
    
    @Override
    public Optional<Integer> getFoip() {
        return Optional.ofNullable(foip);
    }
    
    @Override
    public Optional<Integer> getFpap() {
        return Optional.ofNullable(fpap);
    }
    
    @Override
    public Optional<Integer> getFpernp() {
        return Optional.ofNullable(fpernp);
    }
    
    @Override
    public Optional<Integer> getFpincp() {
        return Optional.ofNullable(fpincp);
    }
    
    @Override
    public Optional<Integer> getFpobp() {
        return Optional.ofNullable(fpobp);
    }
    
    @Override
    public Optional<Integer> getFpowsp() {
        return Optional.ofNullable(fpowsp);
    }
    
    @Override
    public Optional<Integer> getFprivcovp() {
        return Optional.ofNullable(fprivcovp);
    }
    
    @Override
    public Optional<Integer> getFpubcovp() {
        return Optional.ofNullable(fpubcovp);
    }
    
    @Override
    public Optional<Integer> getFracp() {
        return Optional.ofNullable(fracp);
    }
    
    @Override
    public Optional<Integer> getFrelp() {
        return Optional.ofNullable(frelp);
    }
    
    @Override
    public Optional<Integer> getFretp() {
        return Optional.ofNullable(fretp);
    }
    
    @Override
    public Optional<Integer> getFschgp() {
        return Optional.ofNullable(fschgp);
    }
    
    @Override
    public Optional<Integer> getFschlp() {
        return Optional.ofNullable(fschlp);
    }
    
    @Override
    public Optional<Integer> getFschp() {
        return Optional.ofNullable(fschp);
    }
    
    @Override
    public Optional<Integer> getFsemp() {
        return Optional.ofNullable(fsemp);
    }
    
    @Override
    public Optional<Integer> getFsexp() {
        return Optional.ofNullable(fsexp);
    }
    
    @Override
    public Optional<Integer> getFssip() {
        return Optional.ofNullable(fssip);
    }
    
    @Override
    public Optional<Integer> getFssp() {
        return Optional.ofNullable(fssp);
    }
    
    @Override
    public Optional<Integer> getFwagp() {
        return Optional.ofNullable(fwagp);
    }
    
    @Override
    public Optional<Integer> getFwkhp() {
        return Optional.ofNullable(fwkhp);
    }
    
    @Override
    public Optional<Integer> getFwklp() {
        return Optional.ofNullable(fwklp);
    }
    
    @Override
    public Optional<Integer> getFwkwp() {
        return Optional.ofNullable(fwkwp);
    }
    
    @Override
    public Optional<Integer> getFwrkp() {
        return Optional.ofNullable(fwrkp);
    }
    
    @Override
    public Optional<Integer> getFyoep() {
        return Optional.ofNullable(fyoep);
    }
    
    @Override
    public final Ss13pusa setRt(Integer rt) {
        this.rt = rt;
        return this;
    }
    
    @Override
    public final Ss13pusa setSerialno(Integer serialno) {
        this.serialno = serialno;
        return this;
    }
    
    @Override
    public final Ss13pusa setSporder(Integer sporder) {
        this.sporder = sporder;
        return this;
    }
    
    @Override
    public final Ss13pusa setPuma(Integer puma) {
        this.puma = puma;
        return this;
    }
    
    @Override
    public final Ss13pusa setSt(Integer st) {
        this.st = st;
        return this;
    }
    
    @Override
    public final Ss13pusa setAdjinc(Integer adjinc) {
        this.adjinc = adjinc;
        return this;
    }
    
    @Override
    public final Ss13pusa setPwgtp(Integer pwgtp) {
        this.pwgtp = pwgtp;
        return this;
    }
    
    @Override
    public final Ss13pusa setAgep(Integer agep) {
        this.agep = agep;
        return this;
    }
    
    @Override
    public final Ss13pusa setCit(Integer cit) {
        this.cit = cit;
        return this;
    }
    
    @Override
    public final Ss13pusa setCitwp(Integer citwp) {
        this.citwp = citwp;
        return this;
    }
    
    @Override
    public final Ss13pusa setCow(Integer cow) {
        this.cow = cow;
        return this;
    }
    
    @Override
    public final Ss13pusa setDdrs(Integer ddrs) {
        this.ddrs = ddrs;
        return this;
    }
    
    @Override
    public final Ss13pusa setDear(Integer dear) {
        this.dear = dear;
        return this;
    }
    
    @Override
    public final Ss13pusa setDeye(Integer deye) {
        this.deye = deye;
        return this;
    }
    
    @Override
    public final Ss13pusa setDout(Integer dout) {
        this.dout = dout;
        return this;
    }
    
    @Override
    public final Ss13pusa setDphy(Integer dphy) {
        this.dphy = dphy;
        return this;
    }
    
    @Override
    public final Ss13pusa setDrat(Integer drat) {
        this.drat = drat;
        return this;
    }
    
    @Override
    public final Ss13pusa setDratx(Integer dratx) {
        this.dratx = dratx;
        return this;
    }
    
    @Override
    public final Ss13pusa setDrem(Integer drem) {
        this.drem = drem;
        return this;
    }
    
    @Override
    public final Ss13pusa setEng(Integer eng) {
        this.eng = eng;
        return this;
    }
    
    @Override
    public final Ss13pusa setFer(Integer fer) {
        this.fer = fer;
        return this;
    }
    
    @Override
    public final Ss13pusa setGcl(Integer gcl) {
        this.gcl = gcl;
        return this;
    }
    
    @Override
    public final Ss13pusa setGcm(Integer gcm) {
        this.gcm = gcm;
        return this;
    }
    
    @Override
    public final Ss13pusa setGcr(Integer gcr) {
        this.gcr = gcr;
        return this;
    }
    
    @Override
    public final Ss13pusa setHins1(Integer hins1) {
        this.hins1 = hins1;
        return this;
    }
    
    @Override
    public final Ss13pusa setHins2(Integer hins2) {
        this.hins2 = hins2;
        return this;
    }
    
    @Override
    public final Ss13pusa setHins3(Integer hins3) {
        this.hins3 = hins3;
        return this;
    }
    
    @Override
    public final Ss13pusa setHins4(Integer hins4) {
        this.hins4 = hins4;
        return this;
    }
    
    @Override
    public final Ss13pusa setHins5(Integer hins5) {
        this.hins5 = hins5;
        return this;
    }
    
    @Override
    public final Ss13pusa setHins6(Integer hins6) {
        this.hins6 = hins6;
        return this;
    }
    
    @Override
    public final Ss13pusa setHins7(Integer hins7) {
        this.hins7 = hins7;
        return this;
    }
    
    @Override
    public final Ss13pusa setIntp(Integer intp) {
        this.intp = intp;
        return this;
    }
    
    @Override
    public final Ss13pusa setJwmnp(Integer jwmnp) {
        this.jwmnp = jwmnp;
        return this;
    }
    
    @Override
    public final Ss13pusa setJwrip(Integer jwrip) {
        this.jwrip = jwrip;
        return this;
    }
    
    @Override
    public final Ss13pusa setJwtr(Integer jwtr) {
        this.jwtr = jwtr;
        return this;
    }
    
    @Override
    public final Ss13pusa setLanx(Integer lanx) {
        this.lanx = lanx;
        return this;
    }
    
    @Override
    public final Ss13pusa setMar(Integer mar) {
        this.mar = mar;
        return this;
    }
    
    @Override
    public final Ss13pusa setMarhd(Integer marhd) {
        this.marhd = marhd;
        return this;
    }
    
    @Override
    public final Ss13pusa setMarhm(Integer marhm) {
        this.marhm = marhm;
        return this;
    }
    
    @Override
    public final Ss13pusa setMarht(Integer marht) {
        this.marht = marht;
        return this;
    }
    
    @Override
    public final Ss13pusa setMarhw(Integer marhw) {
        this.marhw = marhw;
        return this;
    }
    
    @Override
    public final Ss13pusa setMarhyp(Integer marhyp) {
        this.marhyp = marhyp;
        return this;
    }
    
    @Override
    public final Ss13pusa setMig(Integer mig) {
        this.mig = mig;
        return this;
    }
    
    @Override
    public final Ss13pusa setMil(Integer mil) {
        this.mil = mil;
        return this;
    }
    
    @Override
    public final Ss13pusa setMlpa(Integer mlpa) {
        this.mlpa = mlpa;
        return this;
    }
    
    @Override
    public final Ss13pusa setMlpb(Integer mlpb) {
        this.mlpb = mlpb;
        return this;
    }
    
    @Override
    public final Ss13pusa setMlpcd(Integer mlpcd) {
        this.mlpcd = mlpcd;
        return this;
    }
    
    @Override
    public final Ss13pusa setMlpe(Integer mlpe) {
        this.mlpe = mlpe;
        return this;
    }
    
    @Override
    public final Ss13pusa setMlpfg(Integer mlpfg) {
        this.mlpfg = mlpfg;
        return this;
    }
    
    @Override
    public final Ss13pusa setMlph(Integer mlph) {
        this.mlph = mlph;
        return this;
    }
    
    @Override
    public final Ss13pusa setMlpi(Integer mlpi) {
        this.mlpi = mlpi;
        return this;
    }
    
    @Override
    public final Ss13pusa setMlpj(Integer mlpj) {
        this.mlpj = mlpj;
        return this;
    }
    
    @Override
    public final Ss13pusa setMlpk(Integer mlpk) {
        this.mlpk = mlpk;
        return this;
    }
    
    @Override
    public final Ss13pusa setNwab(Integer nwab) {
        this.nwab = nwab;
        return this;
    }
    
    @Override
    public final Ss13pusa setNwav(Integer nwav) {
        this.nwav = nwav;
        return this;
    }
    
    @Override
    public final Ss13pusa setNwla(Integer nwla) {
        this.nwla = nwla;
        return this;
    }
    
    @Override
    public final Ss13pusa setNwlk(Integer nwlk) {
        this.nwlk = nwlk;
        return this;
    }
    
    @Override
    public final Ss13pusa setNwre(Integer nwre) {
        this.nwre = nwre;
        return this;
    }
    
    @Override
    public final Ss13pusa setOip(Integer oip) {
        this.oip = oip;
        return this;
    }
    
    @Override
    public final Ss13pusa setPap(Integer pap) {
        this.pap = pap;
        return this;
    }
    
    @Override
    public final Ss13pusa setRelp(Integer relp) {
        this.relp = relp;
        return this;
    }
    
    @Override
    public final Ss13pusa setRetp(Integer retp) {
        this.retp = retp;
        return this;
    }
    
    @Override
    public final Ss13pusa setSch(Integer sch) {
        this.sch = sch;
        return this;
    }
    
    @Override
    public final Ss13pusa setSchg(Integer schg) {
        this.schg = schg;
        return this;
    }
    
    @Override
    public final Ss13pusa setSchl(Integer schl) {
        this.schl = schl;
        return this;
    }
    
    @Override
    public final Ss13pusa setSemp(Integer semp) {
        this.semp = semp;
        return this;
    }
    
    @Override
    public final Ss13pusa setSex(Integer sex) {
        this.sex = sex;
        return this;
    }
    
    @Override
    public final Ss13pusa setSsip(Integer ssip) {
        this.ssip = ssip;
        return this;
    }
    
    @Override
    public final Ss13pusa setSsp(Integer ssp) {
        this.ssp = ssp;
        return this;
    }
    
    @Override
    public final Ss13pusa setWagp(Integer wagp) {
        this.wagp = wagp;
        return this;
    }
    
    @Override
    public final Ss13pusa setWkhp(Integer wkhp) {
        this.wkhp = wkhp;
        return this;
    }
    
    @Override
    public final Ss13pusa setWkl(Integer wkl) {
        this.wkl = wkl;
        return this;
    }
    
    @Override
    public final Ss13pusa setWkw(Integer wkw) {
        this.wkw = wkw;
        return this;
    }
    
    @Override
    public final Ss13pusa setWrk(Integer wrk) {
        this.wrk = wrk;
        return this;
    }
    
    @Override
    public final Ss13pusa setYoep(Integer yoep) {
        this.yoep = yoep;
        return this;
    }
    
    @Override
    public final Ss13pusa setAnc(Integer anc) {
        this.anc = anc;
        return this;
    }
    
    @Override
    public final Ss13pusa setAnc1P(Integer anc1P) {
        this.anc1P = anc1P;
        return this;
    }
    
    @Override
    public final Ss13pusa setAnc2P(Integer anc2P) {
        this.anc2P = anc2P;
        return this;
    }
    
    @Override
    public final Ss13pusa setDecade(Integer decade) {
        this.decade = decade;
        return this;
    }
    
    @Override
    public final Ss13pusa setDis(Integer dis) {
        this.dis = dis;
        return this;
    }
    
    @Override
    public final Ss13pusa setDrivesp(Integer drivesp) {
        this.drivesp = drivesp;
        return this;
    }
    
    @Override
    public final Ss13pusa setEsp(Integer esp) {
        this.esp = esp;
        return this;
    }
    
    @Override
    public final Ss13pusa setEsr(Integer esr) {
        this.esr = esr;
        return this;
    }
    
    @Override
    public final Ss13pusa setFod1P(Integer fod1P) {
        this.fod1P = fod1P;
        return this;
    }
    
    @Override
    public final Ss13pusa setFod2P(Integer fod2P) {
        this.fod2P = fod2P;
        return this;
    }
    
    @Override
    public final Ss13pusa setHicov(Integer hicov) {
        this.hicov = hicov;
        return this;
    }
    
    @Override
    public final Ss13pusa setHisp(Integer hisp) {
        this.hisp = hisp;
        return this;
    }
    
    @Override
    public final Ss13pusa setIndp(Integer indp) {
        this.indp = indp;
        return this;
    }
    
    @Override
    public final Ss13pusa setJwap(Integer jwap) {
        this.jwap = jwap;
        return this;
    }
    
    @Override
    public final Ss13pusa setJwdp(Integer jwdp) {
        this.jwdp = jwdp;
        return this;
    }
    
    @Override
    public final Ss13pusa setLanp(Integer lanp) {
        this.lanp = lanp;
        return this;
    }
    
    @Override
    public final Ss13pusa setMigpuma(Integer migpuma) {
        this.migpuma = migpuma;
        return this;
    }
    
    @Override
    public final Ss13pusa setMigsp(Integer migsp) {
        this.migsp = migsp;
        return this;
    }
    
    @Override
    public final Ss13pusa setMsp(Integer msp) {
        this.msp = msp;
        return this;
    }
    
    @Override
    public final Ss13pusa setNaicsp(Integer naicsp) {
        this.naicsp = naicsp;
        return this;
    }
    
    @Override
    public final Ss13pusa setNativity(Integer nativity) {
        this.nativity = nativity;
        return this;
    }
    
    @Override
    public final Ss13pusa setNop(Integer nop) {
        this.nop = nop;
        return this;
    }
    
    @Override
    public final Ss13pusa setOc(Integer oc) {
        this.oc = oc;
        return this;
    }
    
    @Override
    public final Ss13pusa setOccp(Integer occp) {
        this.occp = occp;
        return this;
    }
    
    @Override
    public final Ss13pusa setPaoc(Integer paoc) {
        this.paoc = paoc;
        return this;
    }
    
    @Override
    public final Ss13pusa setPernp(Integer pernp) {
        this.pernp = pernp;
        return this;
    }
    
    @Override
    public final Ss13pusa setPincp(Integer pincp) {
        this.pincp = pincp;
        return this;
    }
    
    @Override
    public final Ss13pusa setPobp(Integer pobp) {
        this.pobp = pobp;
        return this;
    }
    
    @Override
    public final Ss13pusa setPovpip(Integer povpip) {
        this.povpip = povpip;
        return this;
    }
    
    @Override
    public final Ss13pusa setPowpuma(Integer powpuma) {
        this.powpuma = powpuma;
        return this;
    }
    
    @Override
    public final Ss13pusa setPowsp(Integer powsp) {
        this.powsp = powsp;
        return this;
    }
    
    @Override
    public final Ss13pusa setPrivcov(Integer privcov) {
        this.privcov = privcov;
        return this;
    }
    
    @Override
    public final Ss13pusa setPubcov(Integer pubcov) {
        this.pubcov = pubcov;
        return this;
    }
    
    @Override
    public final Ss13pusa setQtrbir(Integer qtrbir) {
        this.qtrbir = qtrbir;
        return this;
    }
    
    @Override
    public final Ss13pusa setRac1P(Integer rac1P) {
        this.rac1P = rac1P;
        return this;
    }
    
    @Override
    public final Ss13pusa setRac2P(Integer rac2P) {
        this.rac2P = rac2P;
        return this;
    }
    
    @Override
    public final Ss13pusa setRac3P(Integer rac3P) {
        this.rac3P = rac3P;
        return this;
    }
    
    @Override
    public final Ss13pusa setRacaian(Integer racaian) {
        this.racaian = racaian;
        return this;
    }
    
    @Override
    public final Ss13pusa setRacasn(Integer racasn) {
        this.racasn = racasn;
        return this;
    }
    
    @Override
    public final Ss13pusa setRacblk(Integer racblk) {
        this.racblk = racblk;
        return this;
    }
    
    @Override
    public final Ss13pusa setRacnh(Integer racnh) {
        this.racnh = racnh;
        return this;
    }
    
    @Override
    public final Ss13pusa setRacnum(Integer racnum) {
        this.racnum = racnum;
        return this;
    }
    
    @Override
    public final Ss13pusa setRacpi(Integer racpi) {
        this.racpi = racpi;
        return this;
    }
    
    @Override
    public final Ss13pusa setRacsor(Integer racsor) {
        this.racsor = racsor;
        return this;
    }
    
    @Override
    public final Ss13pusa setRacwht(Integer racwht) {
        this.racwht = racwht;
        return this;
    }
    
    @Override
    public final Ss13pusa setRc(Integer rc) {
        this.rc = rc;
        return this;
    }
    
    @Override
    public final Ss13pusa setSciengp(Integer sciengp) {
        this.sciengp = sciengp;
        return this;
    }
    
    @Override
    public final Ss13pusa setSciengrlp(Integer sciengrlp) {
        this.sciengrlp = sciengrlp;
        return this;
    }
    
    @Override
    public final Ss13pusa setSfn(Integer sfn) {
        this.sfn = sfn;
        return this;
    }
    
    @Override
    public final Ss13pusa setSfr(Integer sfr) {
        this.sfr = sfr;
        return this;
    }
    
    @Override
    public final Ss13pusa setSocp(Integer socp) {
        this.socp = socp;
        return this;
    }
    
    @Override
    public final Ss13pusa setVps(Integer vps) {
        this.vps = vps;
        return this;
    }
    
    @Override
    public final Ss13pusa setWaob(Integer waob) {
        this.waob = waob;
        return this;
    }
    
    @Override
    public final Ss13pusa setFagep(Integer fagep) {
        this.fagep = fagep;
        return this;
    }
    
    @Override
    public final Ss13pusa setFancp(Integer fancp) {
        this.fancp = fancp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFcitp(Integer fcitp) {
        this.fcitp = fcitp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFcitwp(Integer fcitwp) {
        this.fcitwp = fcitwp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFcowp(Integer fcowp) {
        this.fcowp = fcowp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFddrsp(Integer fddrsp) {
        this.fddrsp = fddrsp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFdearp(Integer fdearp) {
        this.fdearp = fdearp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFdeyep(Integer fdeyep) {
        this.fdeyep = fdeyep;
        return this;
    }
    
    @Override
    public final Ss13pusa setFdisp(Integer fdisp) {
        this.fdisp = fdisp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFdoutp(Integer fdoutp) {
        this.fdoutp = fdoutp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFdphyp(Integer fdphyp) {
        this.fdphyp = fdphyp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFdratp(Integer fdratp) {
        this.fdratp = fdratp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFdratxp(Integer fdratxp) {
        this.fdratxp = fdratxp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFdremp(Integer fdremp) {
        this.fdremp = fdremp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFengp(Integer fengp) {
        this.fengp = fengp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFesrp(Integer fesrp) {
        this.fesrp = fesrp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFferp(Integer fferp) {
        this.fferp = fferp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFfodp(Integer ffodp) {
        this.ffodp = ffodp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFgclp(Integer fgclp) {
        this.fgclp = fgclp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFgcmp(Integer fgcmp) {
        this.fgcmp = fgcmp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFgcrp(Integer fgcrp) {
        this.fgcrp = fgcrp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFhins1P(Integer fhins1P) {
        this.fhins1P = fhins1P;
        return this;
    }
    
    @Override
    public final Ss13pusa setFhins2P(Integer fhins2P) {
        this.fhins2P = fhins2P;
        return this;
    }
    
    @Override
    public final Ss13pusa setFhins3C(Integer fhins3C) {
        this.fhins3C = fhins3C;
        return this;
    }
    
    @Override
    public final Ss13pusa setFhins3P(Integer fhins3P) {
        this.fhins3P = fhins3P;
        return this;
    }
    
    @Override
    public final Ss13pusa setFhins4C(Integer fhins4C) {
        this.fhins4C = fhins4C;
        return this;
    }
    
    @Override
    public final Ss13pusa setFhins4P(Integer fhins4P) {
        this.fhins4P = fhins4P;
        return this;
    }
    
    @Override
    public final Ss13pusa setFhins5C(Integer fhins5C) {
        this.fhins5C = fhins5C;
        return this;
    }
    
    @Override
    public final Ss13pusa setFhins5P(Integer fhins5P) {
        this.fhins5P = fhins5P;
        return this;
    }
    
    @Override
    public final Ss13pusa setFhins6P(Integer fhins6P) {
        this.fhins6P = fhins6P;
        return this;
    }
    
    @Override
    public final Ss13pusa setFhins7P(Integer fhins7P) {
        this.fhins7P = fhins7P;
        return this;
    }
    
    @Override
    public final Ss13pusa setFhisp(Integer fhisp) {
        this.fhisp = fhisp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFindp(Integer findp) {
        this.findp = findp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFintp(Integer fintp) {
        this.fintp = fintp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFjwdp(Integer fjwdp) {
        this.fjwdp = fjwdp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFjwmnp(Integer fjwmnp) {
        this.fjwmnp = fjwmnp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFjwrip(Integer fjwrip) {
        this.fjwrip = fjwrip;
        return this;
    }
    
    @Override
    public final Ss13pusa setFjwtrp(Integer fjwtrp) {
        this.fjwtrp = fjwtrp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFlanp(Integer flanp) {
        this.flanp = flanp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFlanxp(Integer flanxp) {
        this.flanxp = flanxp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFmarhdp(Integer fmarhdp) {
        this.fmarhdp = fmarhdp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFmarhmp(Integer fmarhmp) {
        this.fmarhmp = fmarhmp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFmarhtp(Integer fmarhtp) {
        this.fmarhtp = fmarhtp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFmarhwp(Integer fmarhwp) {
        this.fmarhwp = fmarhwp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFmarhyp(Integer fmarhyp) {
        this.fmarhyp = fmarhyp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFmarp(Integer fmarp) {
        this.fmarp = fmarp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFmigp(Integer fmigp) {
        this.fmigp = fmigp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFmigsp(Integer fmigsp) {
        this.fmigsp = fmigsp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFmilpp(Integer fmilpp) {
        this.fmilpp = fmilpp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFmilsp(Integer fmilsp) {
        this.fmilsp = fmilsp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFoccp(Integer foccp) {
        this.foccp = foccp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFoip(Integer foip) {
        this.foip = foip;
        return this;
    }
    
    @Override
    public final Ss13pusa setFpap(Integer fpap) {
        this.fpap = fpap;
        return this;
    }
    
    @Override
    public final Ss13pusa setFpernp(Integer fpernp) {
        this.fpernp = fpernp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFpincp(Integer fpincp) {
        this.fpincp = fpincp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFpobp(Integer fpobp) {
        this.fpobp = fpobp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFpowsp(Integer fpowsp) {
        this.fpowsp = fpowsp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFprivcovp(Integer fprivcovp) {
        this.fprivcovp = fprivcovp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFpubcovp(Integer fpubcovp) {
        this.fpubcovp = fpubcovp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFracp(Integer fracp) {
        this.fracp = fracp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFrelp(Integer frelp) {
        this.frelp = frelp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFretp(Integer fretp) {
        this.fretp = fretp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFschgp(Integer fschgp) {
        this.fschgp = fschgp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFschlp(Integer fschlp) {
        this.fschlp = fschlp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFschp(Integer fschp) {
        this.fschp = fschp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFsemp(Integer fsemp) {
        this.fsemp = fsemp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFsexp(Integer fsexp) {
        this.fsexp = fsexp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFssip(Integer fssip) {
        this.fssip = fssip;
        return this;
    }
    
    @Override
    public final Ss13pusa setFssp(Integer fssp) {
        this.fssp = fssp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFwagp(Integer fwagp) {
        this.fwagp = fwagp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFwkhp(Integer fwkhp) {
        this.fwkhp = fwkhp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFwklp(Integer fwklp) {
        this.fwklp = fwklp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFwkwp(Integer fwkwp) {
        this.fwkwp = fwkwp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFwrkp(Integer fwrkp) {
        this.fwrkp = fwrkp;
        return this;
    }
    
    @Override
    public final Ss13pusa setFyoep(Integer fyoep) {
        this.fyoep = fyoep;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("rt = "+Objects.toString(getRt().orElse(null)));
        sj.add("serialno = "+Objects.toString(getSerialno().orElse(null)));
        sj.add("sporder = "+Objects.toString(getSporder().orElse(null)));
        sj.add("puma = "+Objects.toString(getPuma().orElse(null)));
        sj.add("st = "+Objects.toString(getSt().orElse(null)));
        sj.add("adjinc = "+Objects.toString(getAdjinc().orElse(null)));
        sj.add("pwgtp = "+Objects.toString(getPwgtp().orElse(null)));
        sj.add("agep = "+Objects.toString(getAgep().orElse(null)));
        sj.add("cit = "+Objects.toString(getCit().orElse(null)));
        sj.add("citwp = "+Objects.toString(getCitwp().orElse(null)));
        sj.add("cow = "+Objects.toString(getCow().orElse(null)));
        sj.add("ddrs = "+Objects.toString(getDdrs().orElse(null)));
        sj.add("dear = "+Objects.toString(getDear().orElse(null)));
        sj.add("deye = "+Objects.toString(getDeye().orElse(null)));
        sj.add("dout = "+Objects.toString(getDout().orElse(null)));
        sj.add("dphy = "+Objects.toString(getDphy().orElse(null)));
        sj.add("drat = "+Objects.toString(getDrat().orElse(null)));
        sj.add("dratx = "+Objects.toString(getDratx().orElse(null)));
        sj.add("drem = "+Objects.toString(getDrem().orElse(null)));
        sj.add("eng = "+Objects.toString(getEng().orElse(null)));
        sj.add("fer = "+Objects.toString(getFer().orElse(null)));
        sj.add("gcl = "+Objects.toString(getGcl().orElse(null)));
        sj.add("gcm = "+Objects.toString(getGcm().orElse(null)));
        sj.add("gcr = "+Objects.toString(getGcr().orElse(null)));
        sj.add("hins1 = "+Objects.toString(getHins1().orElse(null)));
        sj.add("hins2 = "+Objects.toString(getHins2().orElse(null)));
        sj.add("hins3 = "+Objects.toString(getHins3().orElse(null)));
        sj.add("hins4 = "+Objects.toString(getHins4().orElse(null)));
        sj.add("hins5 = "+Objects.toString(getHins5().orElse(null)));
        sj.add("hins6 = "+Objects.toString(getHins6().orElse(null)));
        sj.add("hins7 = "+Objects.toString(getHins7().orElse(null)));
        sj.add("intp = "+Objects.toString(getIntp().orElse(null)));
        sj.add("jwmnp = "+Objects.toString(getJwmnp().orElse(null)));
        sj.add("jwrip = "+Objects.toString(getJwrip().orElse(null)));
        sj.add("jwtr = "+Objects.toString(getJwtr().orElse(null)));
        sj.add("lanx = "+Objects.toString(getLanx().orElse(null)));
        sj.add("mar = "+Objects.toString(getMar().orElse(null)));
        sj.add("marhd = "+Objects.toString(getMarhd().orElse(null)));
        sj.add("marhm = "+Objects.toString(getMarhm().orElse(null)));
        sj.add("marht = "+Objects.toString(getMarht().orElse(null)));
        sj.add("marhw = "+Objects.toString(getMarhw().orElse(null)));
        sj.add("marhyp = "+Objects.toString(getMarhyp().orElse(null)));
        sj.add("mig = "+Objects.toString(getMig().orElse(null)));
        sj.add("mil = "+Objects.toString(getMil().orElse(null)));
        sj.add("mlpa = "+Objects.toString(getMlpa().orElse(null)));
        sj.add("mlpb = "+Objects.toString(getMlpb().orElse(null)));
        sj.add("mlpcd = "+Objects.toString(getMlpcd().orElse(null)));
        sj.add("mlpe = "+Objects.toString(getMlpe().orElse(null)));
        sj.add("mlpfg = "+Objects.toString(getMlpfg().orElse(null)));
        sj.add("mlph = "+Objects.toString(getMlph().orElse(null)));
        sj.add("mlpi = "+Objects.toString(getMlpi().orElse(null)));
        sj.add("mlpj = "+Objects.toString(getMlpj().orElse(null)));
        sj.add("mlpk = "+Objects.toString(getMlpk().orElse(null)));
        sj.add("nwab = "+Objects.toString(getNwab().orElse(null)));
        sj.add("nwav = "+Objects.toString(getNwav().orElse(null)));
        sj.add("nwla = "+Objects.toString(getNwla().orElse(null)));
        sj.add("nwlk = "+Objects.toString(getNwlk().orElse(null)));
        sj.add("nwre = "+Objects.toString(getNwre().orElse(null)));
        sj.add("oip = "+Objects.toString(getOip().orElse(null)));
        sj.add("pap = "+Objects.toString(getPap().orElse(null)));
        sj.add("relp = "+Objects.toString(getRelp().orElse(null)));
        sj.add("retp = "+Objects.toString(getRetp().orElse(null)));
        sj.add("sch = "+Objects.toString(getSch().orElse(null)));
        sj.add("schg = "+Objects.toString(getSchg().orElse(null)));
        sj.add("schl = "+Objects.toString(getSchl().orElse(null)));
        sj.add("semp = "+Objects.toString(getSemp().orElse(null)));
        sj.add("sex = "+Objects.toString(getSex().orElse(null)));
        sj.add("ssip = "+Objects.toString(getSsip().orElse(null)));
        sj.add("ssp = "+Objects.toString(getSsp().orElse(null)));
        sj.add("wagp = "+Objects.toString(getWagp().orElse(null)));
        sj.add("wkhp = "+Objects.toString(getWkhp().orElse(null)));
        sj.add("wkl = "+Objects.toString(getWkl().orElse(null)));
        sj.add("wkw = "+Objects.toString(getWkw().orElse(null)));
        sj.add("wrk = "+Objects.toString(getWrk().orElse(null)));
        sj.add("yoep = "+Objects.toString(getYoep().orElse(null)));
        sj.add("anc = "+Objects.toString(getAnc().orElse(null)));
        sj.add("anc1P = "+Objects.toString(getAnc1P().orElse(null)));
        sj.add("anc2P = "+Objects.toString(getAnc2P().orElse(null)));
        sj.add("decade = "+Objects.toString(getDecade().orElse(null)));
        sj.add("dis = "+Objects.toString(getDis().orElse(null)));
        sj.add("drivesp = "+Objects.toString(getDrivesp().orElse(null)));
        sj.add("esp = "+Objects.toString(getEsp().orElse(null)));
        sj.add("esr = "+Objects.toString(getEsr().orElse(null)));
        sj.add("fod1P = "+Objects.toString(getFod1P().orElse(null)));
        sj.add("fod2P = "+Objects.toString(getFod2P().orElse(null)));
        sj.add("hicov = "+Objects.toString(getHicov().orElse(null)));
        sj.add("hisp = "+Objects.toString(getHisp().orElse(null)));
        sj.add("indp = "+Objects.toString(getIndp().orElse(null)));
        sj.add("jwap = "+Objects.toString(getJwap().orElse(null)));
        sj.add("jwdp = "+Objects.toString(getJwdp().orElse(null)));
        sj.add("lanp = "+Objects.toString(getLanp().orElse(null)));
        sj.add("migpuma = "+Objects.toString(getMigpuma().orElse(null)));
        sj.add("migsp = "+Objects.toString(getMigsp().orElse(null)));
        sj.add("msp = "+Objects.toString(getMsp().orElse(null)));
        sj.add("naicsp = "+Objects.toString(getNaicsp().orElse(null)));
        sj.add("nativity = "+Objects.toString(getNativity().orElse(null)));
        sj.add("nop = "+Objects.toString(getNop().orElse(null)));
        sj.add("oc = "+Objects.toString(getOc().orElse(null)));
        sj.add("occp = "+Objects.toString(getOccp().orElse(null)));
        sj.add("paoc = "+Objects.toString(getPaoc().orElse(null)));
        sj.add("pernp = "+Objects.toString(getPernp().orElse(null)));
        sj.add("pincp = "+Objects.toString(getPincp().orElse(null)));
        sj.add("pobp = "+Objects.toString(getPobp().orElse(null)));
        sj.add("povpip = "+Objects.toString(getPovpip().orElse(null)));
        sj.add("powpuma = "+Objects.toString(getPowpuma().orElse(null)));
        sj.add("powsp = "+Objects.toString(getPowsp().orElse(null)));
        sj.add("privcov = "+Objects.toString(getPrivcov().orElse(null)));
        sj.add("pubcov = "+Objects.toString(getPubcov().orElse(null)));
        sj.add("qtrbir = "+Objects.toString(getQtrbir().orElse(null)));
        sj.add("rac1P = "+Objects.toString(getRac1P().orElse(null)));
        sj.add("rac2P = "+Objects.toString(getRac2P().orElse(null)));
        sj.add("rac3P = "+Objects.toString(getRac3P().orElse(null)));
        sj.add("racaian = "+Objects.toString(getRacaian().orElse(null)));
        sj.add("racasn = "+Objects.toString(getRacasn().orElse(null)));
        sj.add("racblk = "+Objects.toString(getRacblk().orElse(null)));
        sj.add("racnh = "+Objects.toString(getRacnh().orElse(null)));
        sj.add("racnum = "+Objects.toString(getRacnum().orElse(null)));
        sj.add("racpi = "+Objects.toString(getRacpi().orElse(null)));
        sj.add("racsor = "+Objects.toString(getRacsor().orElse(null)));
        sj.add("racwht = "+Objects.toString(getRacwht().orElse(null)));
        sj.add("rc = "+Objects.toString(getRc().orElse(null)));
        sj.add("sciengp = "+Objects.toString(getSciengp().orElse(null)));
        sj.add("sciengrlp = "+Objects.toString(getSciengrlp().orElse(null)));
        sj.add("sfn = "+Objects.toString(getSfn().orElse(null)));
        sj.add("sfr = "+Objects.toString(getSfr().orElse(null)));
        sj.add("socp = "+Objects.toString(getSocp().orElse(null)));
        sj.add("vps = "+Objects.toString(getVps().orElse(null)));
        sj.add("waob = "+Objects.toString(getWaob().orElse(null)));
        sj.add("fagep = "+Objects.toString(getFagep().orElse(null)));
        sj.add("fancp = "+Objects.toString(getFancp().orElse(null)));
        sj.add("fcitp = "+Objects.toString(getFcitp().orElse(null)));
        sj.add("fcitwp = "+Objects.toString(getFcitwp().orElse(null)));
        sj.add("fcowp = "+Objects.toString(getFcowp().orElse(null)));
        sj.add("fddrsp = "+Objects.toString(getFddrsp().orElse(null)));
        sj.add("fdearp = "+Objects.toString(getFdearp().orElse(null)));
        sj.add("fdeyep = "+Objects.toString(getFdeyep().orElse(null)));
        sj.add("fdisp = "+Objects.toString(getFdisp().orElse(null)));
        sj.add("fdoutp = "+Objects.toString(getFdoutp().orElse(null)));
        sj.add("fdphyp = "+Objects.toString(getFdphyp().orElse(null)));
        sj.add("fdratp = "+Objects.toString(getFdratp().orElse(null)));
        sj.add("fdratxp = "+Objects.toString(getFdratxp().orElse(null)));
        sj.add("fdremp = "+Objects.toString(getFdremp().orElse(null)));
        sj.add("fengp = "+Objects.toString(getFengp().orElse(null)));
        sj.add("fesrp = "+Objects.toString(getFesrp().orElse(null)));
        sj.add("fferp = "+Objects.toString(getFferp().orElse(null)));
        sj.add("ffodp = "+Objects.toString(getFfodp().orElse(null)));
        sj.add("fgclp = "+Objects.toString(getFgclp().orElse(null)));
        sj.add("fgcmp = "+Objects.toString(getFgcmp().orElse(null)));
        sj.add("fgcrp = "+Objects.toString(getFgcrp().orElse(null)));
        sj.add("fhins1P = "+Objects.toString(getFhins1P().orElse(null)));
        sj.add("fhins2P = "+Objects.toString(getFhins2P().orElse(null)));
        sj.add("fhins3C = "+Objects.toString(getFhins3C().orElse(null)));
        sj.add("fhins3P = "+Objects.toString(getFhins3P().orElse(null)));
        sj.add("fhins4C = "+Objects.toString(getFhins4C().orElse(null)));
        sj.add("fhins4P = "+Objects.toString(getFhins4P().orElse(null)));
        sj.add("fhins5C = "+Objects.toString(getFhins5C().orElse(null)));
        sj.add("fhins5P = "+Objects.toString(getFhins5P().orElse(null)));
        sj.add("fhins6P = "+Objects.toString(getFhins6P().orElse(null)));
        sj.add("fhins7P = "+Objects.toString(getFhins7P().orElse(null)));
        sj.add("fhisp = "+Objects.toString(getFhisp().orElse(null)));
        sj.add("findp = "+Objects.toString(getFindp().orElse(null)));
        sj.add("fintp = "+Objects.toString(getFintp().orElse(null)));
        sj.add("fjwdp = "+Objects.toString(getFjwdp().orElse(null)));
        sj.add("fjwmnp = "+Objects.toString(getFjwmnp().orElse(null)));
        sj.add("fjwrip = "+Objects.toString(getFjwrip().orElse(null)));
        sj.add("fjwtrp = "+Objects.toString(getFjwtrp().orElse(null)));
        sj.add("flanp = "+Objects.toString(getFlanp().orElse(null)));
        sj.add("flanxp = "+Objects.toString(getFlanxp().orElse(null)));
        sj.add("fmarhdp = "+Objects.toString(getFmarhdp().orElse(null)));
        sj.add("fmarhmp = "+Objects.toString(getFmarhmp().orElse(null)));
        sj.add("fmarhtp = "+Objects.toString(getFmarhtp().orElse(null)));
        sj.add("fmarhwp = "+Objects.toString(getFmarhwp().orElse(null)));
        sj.add("fmarhyp = "+Objects.toString(getFmarhyp().orElse(null)));
        sj.add("fmarp = "+Objects.toString(getFmarp().orElse(null)));
        sj.add("fmigp = "+Objects.toString(getFmigp().orElse(null)));
        sj.add("fmigsp = "+Objects.toString(getFmigsp().orElse(null)));
        sj.add("fmilpp = "+Objects.toString(getFmilpp().orElse(null)));
        sj.add("fmilsp = "+Objects.toString(getFmilsp().orElse(null)));
        sj.add("foccp = "+Objects.toString(getFoccp().orElse(null)));
        sj.add("foip = "+Objects.toString(getFoip().orElse(null)));
        sj.add("fpap = "+Objects.toString(getFpap().orElse(null)));
        sj.add("fpernp = "+Objects.toString(getFpernp().orElse(null)));
        sj.add("fpincp = "+Objects.toString(getFpincp().orElse(null)));
        sj.add("fpobp = "+Objects.toString(getFpobp().orElse(null)));
        sj.add("fpowsp = "+Objects.toString(getFpowsp().orElse(null)));
        sj.add("fprivcovp = "+Objects.toString(getFprivcovp().orElse(null)));
        sj.add("fpubcovp = "+Objects.toString(getFpubcovp().orElse(null)));
        sj.add("fracp = "+Objects.toString(getFracp().orElse(null)));
        sj.add("frelp = "+Objects.toString(getFrelp().orElse(null)));
        sj.add("fretp = "+Objects.toString(getFretp().orElse(null)));
        sj.add("fschgp = "+Objects.toString(getFschgp().orElse(null)));
        sj.add("fschlp = "+Objects.toString(getFschlp().orElse(null)));
        sj.add("fschp = "+Objects.toString(getFschp().orElse(null)));
        sj.add("fsemp = "+Objects.toString(getFsemp().orElse(null)));
        sj.add("fsexp = "+Objects.toString(getFsexp().orElse(null)));
        sj.add("fssip = "+Objects.toString(getFssip().orElse(null)));
        sj.add("fssp = "+Objects.toString(getFssp().orElse(null)));
        sj.add("fwagp = "+Objects.toString(getFwagp().orElse(null)));
        sj.add("fwkhp = "+Objects.toString(getFwkhp().orElse(null)));
        sj.add("fwklp = "+Objects.toString(getFwklp().orElse(null)));
        sj.add("fwkwp = "+Objects.toString(getFwkwp().orElse(null)));
        sj.add("fwrkp = "+Objects.toString(getFwrkp().orElse(null)));
        sj.add("fyoep = "+Objects.toString(getFyoep().orElse(null)));
        return "Ss13pusaImpl "+sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Ss13pusa)) { return false; }
        final Ss13pusa thatSs13pusa = (Ss13pusa)that;
        if (!Objects.equals(this.getRt(), thatSs13pusa.getRt())) {return false; }
        if (!Objects.equals(this.getSerialno(), thatSs13pusa.getSerialno())) {return false; }
        if (!Objects.equals(this.getSporder(), thatSs13pusa.getSporder())) {return false; }
        if (!Objects.equals(this.getPuma(), thatSs13pusa.getPuma())) {return false; }
        if (!Objects.equals(this.getSt(), thatSs13pusa.getSt())) {return false; }
        if (!Objects.equals(this.getAdjinc(), thatSs13pusa.getAdjinc())) {return false; }
        if (!Objects.equals(this.getPwgtp(), thatSs13pusa.getPwgtp())) {return false; }
        if (!Objects.equals(this.getAgep(), thatSs13pusa.getAgep())) {return false; }
        if (!Objects.equals(this.getCit(), thatSs13pusa.getCit())) {return false; }
        if (!Objects.equals(this.getCitwp(), thatSs13pusa.getCitwp())) {return false; }
        if (!Objects.equals(this.getCow(), thatSs13pusa.getCow())) {return false; }
        if (!Objects.equals(this.getDdrs(), thatSs13pusa.getDdrs())) {return false; }
        if (!Objects.equals(this.getDear(), thatSs13pusa.getDear())) {return false; }
        if (!Objects.equals(this.getDeye(), thatSs13pusa.getDeye())) {return false; }
        if (!Objects.equals(this.getDout(), thatSs13pusa.getDout())) {return false; }
        if (!Objects.equals(this.getDphy(), thatSs13pusa.getDphy())) {return false; }
        if (!Objects.equals(this.getDrat(), thatSs13pusa.getDrat())) {return false; }
        if (!Objects.equals(this.getDratx(), thatSs13pusa.getDratx())) {return false; }
        if (!Objects.equals(this.getDrem(), thatSs13pusa.getDrem())) {return false; }
        if (!Objects.equals(this.getEng(), thatSs13pusa.getEng())) {return false; }
        if (!Objects.equals(this.getFer(), thatSs13pusa.getFer())) {return false; }
        if (!Objects.equals(this.getGcl(), thatSs13pusa.getGcl())) {return false; }
        if (!Objects.equals(this.getGcm(), thatSs13pusa.getGcm())) {return false; }
        if (!Objects.equals(this.getGcr(), thatSs13pusa.getGcr())) {return false; }
        if (!Objects.equals(this.getHins1(), thatSs13pusa.getHins1())) {return false; }
        if (!Objects.equals(this.getHins2(), thatSs13pusa.getHins2())) {return false; }
        if (!Objects.equals(this.getHins3(), thatSs13pusa.getHins3())) {return false; }
        if (!Objects.equals(this.getHins4(), thatSs13pusa.getHins4())) {return false; }
        if (!Objects.equals(this.getHins5(), thatSs13pusa.getHins5())) {return false; }
        if (!Objects.equals(this.getHins6(), thatSs13pusa.getHins6())) {return false; }
        if (!Objects.equals(this.getHins7(), thatSs13pusa.getHins7())) {return false; }
        if (!Objects.equals(this.getIntp(), thatSs13pusa.getIntp())) {return false; }
        if (!Objects.equals(this.getJwmnp(), thatSs13pusa.getJwmnp())) {return false; }
        if (!Objects.equals(this.getJwrip(), thatSs13pusa.getJwrip())) {return false; }
        if (!Objects.equals(this.getJwtr(), thatSs13pusa.getJwtr())) {return false; }
        if (!Objects.equals(this.getLanx(), thatSs13pusa.getLanx())) {return false; }
        if (!Objects.equals(this.getMar(), thatSs13pusa.getMar())) {return false; }
        if (!Objects.equals(this.getMarhd(), thatSs13pusa.getMarhd())) {return false; }
        if (!Objects.equals(this.getMarhm(), thatSs13pusa.getMarhm())) {return false; }
        if (!Objects.equals(this.getMarht(), thatSs13pusa.getMarht())) {return false; }
        if (!Objects.equals(this.getMarhw(), thatSs13pusa.getMarhw())) {return false; }
        if (!Objects.equals(this.getMarhyp(), thatSs13pusa.getMarhyp())) {return false; }
        if (!Objects.equals(this.getMig(), thatSs13pusa.getMig())) {return false; }
        if (!Objects.equals(this.getMil(), thatSs13pusa.getMil())) {return false; }
        if (!Objects.equals(this.getMlpa(), thatSs13pusa.getMlpa())) {return false; }
        if (!Objects.equals(this.getMlpb(), thatSs13pusa.getMlpb())) {return false; }
        if (!Objects.equals(this.getMlpcd(), thatSs13pusa.getMlpcd())) {return false; }
        if (!Objects.equals(this.getMlpe(), thatSs13pusa.getMlpe())) {return false; }
        if (!Objects.equals(this.getMlpfg(), thatSs13pusa.getMlpfg())) {return false; }
        if (!Objects.equals(this.getMlph(), thatSs13pusa.getMlph())) {return false; }
        if (!Objects.equals(this.getMlpi(), thatSs13pusa.getMlpi())) {return false; }
        if (!Objects.equals(this.getMlpj(), thatSs13pusa.getMlpj())) {return false; }
        if (!Objects.equals(this.getMlpk(), thatSs13pusa.getMlpk())) {return false; }
        if (!Objects.equals(this.getNwab(), thatSs13pusa.getNwab())) {return false; }
        if (!Objects.equals(this.getNwav(), thatSs13pusa.getNwav())) {return false; }
        if (!Objects.equals(this.getNwla(), thatSs13pusa.getNwla())) {return false; }
        if (!Objects.equals(this.getNwlk(), thatSs13pusa.getNwlk())) {return false; }
        if (!Objects.equals(this.getNwre(), thatSs13pusa.getNwre())) {return false; }
        if (!Objects.equals(this.getOip(), thatSs13pusa.getOip())) {return false; }
        if (!Objects.equals(this.getPap(), thatSs13pusa.getPap())) {return false; }
        if (!Objects.equals(this.getRelp(), thatSs13pusa.getRelp())) {return false; }
        if (!Objects.equals(this.getRetp(), thatSs13pusa.getRetp())) {return false; }
        if (!Objects.equals(this.getSch(), thatSs13pusa.getSch())) {return false; }
        if (!Objects.equals(this.getSchg(), thatSs13pusa.getSchg())) {return false; }
        if (!Objects.equals(this.getSchl(), thatSs13pusa.getSchl())) {return false; }
        if (!Objects.equals(this.getSemp(), thatSs13pusa.getSemp())) {return false; }
        if (!Objects.equals(this.getSex(), thatSs13pusa.getSex())) {return false; }
        if (!Objects.equals(this.getSsip(), thatSs13pusa.getSsip())) {return false; }
        if (!Objects.equals(this.getSsp(), thatSs13pusa.getSsp())) {return false; }
        if (!Objects.equals(this.getWagp(), thatSs13pusa.getWagp())) {return false; }
        if (!Objects.equals(this.getWkhp(), thatSs13pusa.getWkhp())) {return false; }
        if (!Objects.equals(this.getWkl(), thatSs13pusa.getWkl())) {return false; }
        if (!Objects.equals(this.getWkw(), thatSs13pusa.getWkw())) {return false; }
        if (!Objects.equals(this.getWrk(), thatSs13pusa.getWrk())) {return false; }
        if (!Objects.equals(this.getYoep(), thatSs13pusa.getYoep())) {return false; }
        if (!Objects.equals(this.getAnc(), thatSs13pusa.getAnc())) {return false; }
        if (!Objects.equals(this.getAnc1P(), thatSs13pusa.getAnc1P())) {return false; }
        if (!Objects.equals(this.getAnc2P(), thatSs13pusa.getAnc2P())) {return false; }
        if (!Objects.equals(this.getDecade(), thatSs13pusa.getDecade())) {return false; }
        if (!Objects.equals(this.getDis(), thatSs13pusa.getDis())) {return false; }
        if (!Objects.equals(this.getDrivesp(), thatSs13pusa.getDrivesp())) {return false; }
        if (!Objects.equals(this.getEsp(), thatSs13pusa.getEsp())) {return false; }
        if (!Objects.equals(this.getEsr(), thatSs13pusa.getEsr())) {return false; }
        if (!Objects.equals(this.getFod1P(), thatSs13pusa.getFod1P())) {return false; }
        if (!Objects.equals(this.getFod2P(), thatSs13pusa.getFod2P())) {return false; }
        if (!Objects.equals(this.getHicov(), thatSs13pusa.getHicov())) {return false; }
        if (!Objects.equals(this.getHisp(), thatSs13pusa.getHisp())) {return false; }
        if (!Objects.equals(this.getIndp(), thatSs13pusa.getIndp())) {return false; }
        if (!Objects.equals(this.getJwap(), thatSs13pusa.getJwap())) {return false; }
        if (!Objects.equals(this.getJwdp(), thatSs13pusa.getJwdp())) {return false; }
        if (!Objects.equals(this.getLanp(), thatSs13pusa.getLanp())) {return false; }
        if (!Objects.equals(this.getMigpuma(), thatSs13pusa.getMigpuma())) {return false; }
        if (!Objects.equals(this.getMigsp(), thatSs13pusa.getMigsp())) {return false; }
        if (!Objects.equals(this.getMsp(), thatSs13pusa.getMsp())) {return false; }
        if (!Objects.equals(this.getNaicsp(), thatSs13pusa.getNaicsp())) {return false; }
        if (!Objects.equals(this.getNativity(), thatSs13pusa.getNativity())) {return false; }
        if (!Objects.equals(this.getNop(), thatSs13pusa.getNop())) {return false; }
        if (!Objects.equals(this.getOc(), thatSs13pusa.getOc())) {return false; }
        if (!Objects.equals(this.getOccp(), thatSs13pusa.getOccp())) {return false; }
        if (!Objects.equals(this.getPaoc(), thatSs13pusa.getPaoc())) {return false; }
        if (!Objects.equals(this.getPernp(), thatSs13pusa.getPernp())) {return false; }
        if (!Objects.equals(this.getPincp(), thatSs13pusa.getPincp())) {return false; }
        if (!Objects.equals(this.getPobp(), thatSs13pusa.getPobp())) {return false; }
        if (!Objects.equals(this.getPovpip(), thatSs13pusa.getPovpip())) {return false; }
        if (!Objects.equals(this.getPowpuma(), thatSs13pusa.getPowpuma())) {return false; }
        if (!Objects.equals(this.getPowsp(), thatSs13pusa.getPowsp())) {return false; }
        if (!Objects.equals(this.getPrivcov(), thatSs13pusa.getPrivcov())) {return false; }
        if (!Objects.equals(this.getPubcov(), thatSs13pusa.getPubcov())) {return false; }
        if (!Objects.equals(this.getQtrbir(), thatSs13pusa.getQtrbir())) {return false; }
        if (!Objects.equals(this.getRac1P(), thatSs13pusa.getRac1P())) {return false; }
        if (!Objects.equals(this.getRac2P(), thatSs13pusa.getRac2P())) {return false; }
        if (!Objects.equals(this.getRac3P(), thatSs13pusa.getRac3P())) {return false; }
        if (!Objects.equals(this.getRacaian(), thatSs13pusa.getRacaian())) {return false; }
        if (!Objects.equals(this.getRacasn(), thatSs13pusa.getRacasn())) {return false; }
        if (!Objects.equals(this.getRacblk(), thatSs13pusa.getRacblk())) {return false; }
        if (!Objects.equals(this.getRacnh(), thatSs13pusa.getRacnh())) {return false; }
        if (!Objects.equals(this.getRacnum(), thatSs13pusa.getRacnum())) {return false; }
        if (!Objects.equals(this.getRacpi(), thatSs13pusa.getRacpi())) {return false; }
        if (!Objects.equals(this.getRacsor(), thatSs13pusa.getRacsor())) {return false; }
        if (!Objects.equals(this.getRacwht(), thatSs13pusa.getRacwht())) {return false; }
        if (!Objects.equals(this.getRc(), thatSs13pusa.getRc())) {return false; }
        if (!Objects.equals(this.getSciengp(), thatSs13pusa.getSciengp())) {return false; }
        if (!Objects.equals(this.getSciengrlp(), thatSs13pusa.getSciengrlp())) {return false; }
        if (!Objects.equals(this.getSfn(), thatSs13pusa.getSfn())) {return false; }
        if (!Objects.equals(this.getSfr(), thatSs13pusa.getSfr())) {return false; }
        if (!Objects.equals(this.getSocp(), thatSs13pusa.getSocp())) {return false; }
        if (!Objects.equals(this.getVps(), thatSs13pusa.getVps())) {return false; }
        if (!Objects.equals(this.getWaob(), thatSs13pusa.getWaob())) {return false; }
        if (!Objects.equals(this.getFagep(), thatSs13pusa.getFagep())) {return false; }
        if (!Objects.equals(this.getFancp(), thatSs13pusa.getFancp())) {return false; }
        if (!Objects.equals(this.getFcitp(), thatSs13pusa.getFcitp())) {return false; }
        if (!Objects.equals(this.getFcitwp(), thatSs13pusa.getFcitwp())) {return false; }
        if (!Objects.equals(this.getFcowp(), thatSs13pusa.getFcowp())) {return false; }
        if (!Objects.equals(this.getFddrsp(), thatSs13pusa.getFddrsp())) {return false; }
        if (!Objects.equals(this.getFdearp(), thatSs13pusa.getFdearp())) {return false; }
        if (!Objects.equals(this.getFdeyep(), thatSs13pusa.getFdeyep())) {return false; }
        if (!Objects.equals(this.getFdisp(), thatSs13pusa.getFdisp())) {return false; }
        if (!Objects.equals(this.getFdoutp(), thatSs13pusa.getFdoutp())) {return false; }
        if (!Objects.equals(this.getFdphyp(), thatSs13pusa.getFdphyp())) {return false; }
        if (!Objects.equals(this.getFdratp(), thatSs13pusa.getFdratp())) {return false; }
        if (!Objects.equals(this.getFdratxp(), thatSs13pusa.getFdratxp())) {return false; }
        if (!Objects.equals(this.getFdremp(), thatSs13pusa.getFdremp())) {return false; }
        if (!Objects.equals(this.getFengp(), thatSs13pusa.getFengp())) {return false; }
        if (!Objects.equals(this.getFesrp(), thatSs13pusa.getFesrp())) {return false; }
        if (!Objects.equals(this.getFferp(), thatSs13pusa.getFferp())) {return false; }
        if (!Objects.equals(this.getFfodp(), thatSs13pusa.getFfodp())) {return false; }
        if (!Objects.equals(this.getFgclp(), thatSs13pusa.getFgclp())) {return false; }
        if (!Objects.equals(this.getFgcmp(), thatSs13pusa.getFgcmp())) {return false; }
        if (!Objects.equals(this.getFgcrp(), thatSs13pusa.getFgcrp())) {return false; }
        if (!Objects.equals(this.getFhins1P(), thatSs13pusa.getFhins1P())) {return false; }
        if (!Objects.equals(this.getFhins2P(), thatSs13pusa.getFhins2P())) {return false; }
        if (!Objects.equals(this.getFhins3C(), thatSs13pusa.getFhins3C())) {return false; }
        if (!Objects.equals(this.getFhins3P(), thatSs13pusa.getFhins3P())) {return false; }
        if (!Objects.equals(this.getFhins4C(), thatSs13pusa.getFhins4C())) {return false; }
        if (!Objects.equals(this.getFhins4P(), thatSs13pusa.getFhins4P())) {return false; }
        if (!Objects.equals(this.getFhins5C(), thatSs13pusa.getFhins5C())) {return false; }
        if (!Objects.equals(this.getFhins5P(), thatSs13pusa.getFhins5P())) {return false; }
        if (!Objects.equals(this.getFhins6P(), thatSs13pusa.getFhins6P())) {return false; }
        if (!Objects.equals(this.getFhins7P(), thatSs13pusa.getFhins7P())) {return false; }
        if (!Objects.equals(this.getFhisp(), thatSs13pusa.getFhisp())) {return false; }
        if (!Objects.equals(this.getFindp(), thatSs13pusa.getFindp())) {return false; }
        if (!Objects.equals(this.getFintp(), thatSs13pusa.getFintp())) {return false; }
        if (!Objects.equals(this.getFjwdp(), thatSs13pusa.getFjwdp())) {return false; }
        if (!Objects.equals(this.getFjwmnp(), thatSs13pusa.getFjwmnp())) {return false; }
        if (!Objects.equals(this.getFjwrip(), thatSs13pusa.getFjwrip())) {return false; }
        if (!Objects.equals(this.getFjwtrp(), thatSs13pusa.getFjwtrp())) {return false; }
        if (!Objects.equals(this.getFlanp(), thatSs13pusa.getFlanp())) {return false; }
        if (!Objects.equals(this.getFlanxp(), thatSs13pusa.getFlanxp())) {return false; }
        if (!Objects.equals(this.getFmarhdp(), thatSs13pusa.getFmarhdp())) {return false; }
        if (!Objects.equals(this.getFmarhmp(), thatSs13pusa.getFmarhmp())) {return false; }
        if (!Objects.equals(this.getFmarhtp(), thatSs13pusa.getFmarhtp())) {return false; }
        if (!Objects.equals(this.getFmarhwp(), thatSs13pusa.getFmarhwp())) {return false; }
        if (!Objects.equals(this.getFmarhyp(), thatSs13pusa.getFmarhyp())) {return false; }
        if (!Objects.equals(this.getFmarp(), thatSs13pusa.getFmarp())) {return false; }
        if (!Objects.equals(this.getFmigp(), thatSs13pusa.getFmigp())) {return false; }
        if (!Objects.equals(this.getFmigsp(), thatSs13pusa.getFmigsp())) {return false; }
        if (!Objects.equals(this.getFmilpp(), thatSs13pusa.getFmilpp())) {return false; }
        if (!Objects.equals(this.getFmilsp(), thatSs13pusa.getFmilsp())) {return false; }
        if (!Objects.equals(this.getFoccp(), thatSs13pusa.getFoccp())) {return false; }
        if (!Objects.equals(this.getFoip(), thatSs13pusa.getFoip())) {return false; }
        if (!Objects.equals(this.getFpap(), thatSs13pusa.getFpap())) {return false; }
        if (!Objects.equals(this.getFpernp(), thatSs13pusa.getFpernp())) {return false; }
        if (!Objects.equals(this.getFpincp(), thatSs13pusa.getFpincp())) {return false; }
        if (!Objects.equals(this.getFpobp(), thatSs13pusa.getFpobp())) {return false; }
        if (!Objects.equals(this.getFpowsp(), thatSs13pusa.getFpowsp())) {return false; }
        if (!Objects.equals(this.getFprivcovp(), thatSs13pusa.getFprivcovp())) {return false; }
        if (!Objects.equals(this.getFpubcovp(), thatSs13pusa.getFpubcovp())) {return false; }
        if (!Objects.equals(this.getFracp(), thatSs13pusa.getFracp())) {return false; }
        if (!Objects.equals(this.getFrelp(), thatSs13pusa.getFrelp())) {return false; }
        if (!Objects.equals(this.getFretp(), thatSs13pusa.getFretp())) {return false; }
        if (!Objects.equals(this.getFschgp(), thatSs13pusa.getFschgp())) {return false; }
        if (!Objects.equals(this.getFschlp(), thatSs13pusa.getFschlp())) {return false; }
        if (!Objects.equals(this.getFschp(), thatSs13pusa.getFschp())) {return false; }
        if (!Objects.equals(this.getFsemp(), thatSs13pusa.getFsemp())) {return false; }
        if (!Objects.equals(this.getFsexp(), thatSs13pusa.getFsexp())) {return false; }
        if (!Objects.equals(this.getFssip(), thatSs13pusa.getFssip())) {return false; }
        if (!Objects.equals(this.getFssp(), thatSs13pusa.getFssp())) {return false; }
        if (!Objects.equals(this.getFwagp(), thatSs13pusa.getFwagp())) {return false; }
        if (!Objects.equals(this.getFwkhp(), thatSs13pusa.getFwkhp())) {return false; }
        if (!Objects.equals(this.getFwklp(), thatSs13pusa.getFwklp())) {return false; }
        if (!Objects.equals(this.getFwkwp(), thatSs13pusa.getFwkwp())) {return false; }
        if (!Objects.equals(this.getFwrkp(), thatSs13pusa.getFwrkp())) {return false; }
        if (!Objects.equals(this.getFyoep(), thatSs13pusa.getFyoep())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(getRt());
        hash = 31 * hash + Objects.hashCode(getSerialno());
        hash = 31 * hash + Objects.hashCode(getSporder());
        hash = 31 * hash + Objects.hashCode(getPuma());
        hash = 31 * hash + Objects.hashCode(getSt());
        hash = 31 * hash + Objects.hashCode(getAdjinc());
        hash = 31 * hash + Objects.hashCode(getPwgtp());
        hash = 31 * hash + Objects.hashCode(getAgep());
        hash = 31 * hash + Objects.hashCode(getCit());
        hash = 31 * hash + Objects.hashCode(getCitwp());
        hash = 31 * hash + Objects.hashCode(getCow());
        hash = 31 * hash + Objects.hashCode(getDdrs());
        hash = 31 * hash + Objects.hashCode(getDear());
        hash = 31 * hash + Objects.hashCode(getDeye());
        hash = 31 * hash + Objects.hashCode(getDout());
        hash = 31 * hash + Objects.hashCode(getDphy());
        hash = 31 * hash + Objects.hashCode(getDrat());
        hash = 31 * hash + Objects.hashCode(getDratx());
        hash = 31 * hash + Objects.hashCode(getDrem());
        hash = 31 * hash + Objects.hashCode(getEng());
        hash = 31 * hash + Objects.hashCode(getFer());
        hash = 31 * hash + Objects.hashCode(getGcl());
        hash = 31 * hash + Objects.hashCode(getGcm());
        hash = 31 * hash + Objects.hashCode(getGcr());
        hash = 31 * hash + Objects.hashCode(getHins1());
        hash = 31 * hash + Objects.hashCode(getHins2());
        hash = 31 * hash + Objects.hashCode(getHins3());
        hash = 31 * hash + Objects.hashCode(getHins4());
        hash = 31 * hash + Objects.hashCode(getHins5());
        hash = 31 * hash + Objects.hashCode(getHins6());
        hash = 31 * hash + Objects.hashCode(getHins7());
        hash = 31 * hash + Objects.hashCode(getIntp());
        hash = 31 * hash + Objects.hashCode(getJwmnp());
        hash = 31 * hash + Objects.hashCode(getJwrip());
        hash = 31 * hash + Objects.hashCode(getJwtr());
        hash = 31 * hash + Objects.hashCode(getLanx());
        hash = 31 * hash + Objects.hashCode(getMar());
        hash = 31 * hash + Objects.hashCode(getMarhd());
        hash = 31 * hash + Objects.hashCode(getMarhm());
        hash = 31 * hash + Objects.hashCode(getMarht());
        hash = 31 * hash + Objects.hashCode(getMarhw());
        hash = 31 * hash + Objects.hashCode(getMarhyp());
        hash = 31 * hash + Objects.hashCode(getMig());
        hash = 31 * hash + Objects.hashCode(getMil());
        hash = 31 * hash + Objects.hashCode(getMlpa());
        hash = 31 * hash + Objects.hashCode(getMlpb());
        hash = 31 * hash + Objects.hashCode(getMlpcd());
        hash = 31 * hash + Objects.hashCode(getMlpe());
        hash = 31 * hash + Objects.hashCode(getMlpfg());
        hash = 31 * hash + Objects.hashCode(getMlph());
        hash = 31 * hash + Objects.hashCode(getMlpi());
        hash = 31 * hash + Objects.hashCode(getMlpj());
        hash = 31 * hash + Objects.hashCode(getMlpk());
        hash = 31 * hash + Objects.hashCode(getNwab());
        hash = 31 * hash + Objects.hashCode(getNwav());
        hash = 31 * hash + Objects.hashCode(getNwla());
        hash = 31 * hash + Objects.hashCode(getNwlk());
        hash = 31 * hash + Objects.hashCode(getNwre());
        hash = 31 * hash + Objects.hashCode(getOip());
        hash = 31 * hash + Objects.hashCode(getPap());
        hash = 31 * hash + Objects.hashCode(getRelp());
        hash = 31 * hash + Objects.hashCode(getRetp());
        hash = 31 * hash + Objects.hashCode(getSch());
        hash = 31 * hash + Objects.hashCode(getSchg());
        hash = 31 * hash + Objects.hashCode(getSchl());
        hash = 31 * hash + Objects.hashCode(getSemp());
        hash = 31 * hash + Objects.hashCode(getSex());
        hash = 31 * hash + Objects.hashCode(getSsip());
        hash = 31 * hash + Objects.hashCode(getSsp());
        hash = 31 * hash + Objects.hashCode(getWagp());
        hash = 31 * hash + Objects.hashCode(getWkhp());
        hash = 31 * hash + Objects.hashCode(getWkl());
        hash = 31 * hash + Objects.hashCode(getWkw());
        hash = 31 * hash + Objects.hashCode(getWrk());
        hash = 31 * hash + Objects.hashCode(getYoep());
        hash = 31 * hash + Objects.hashCode(getAnc());
        hash = 31 * hash + Objects.hashCode(getAnc1P());
        hash = 31 * hash + Objects.hashCode(getAnc2P());
        hash = 31 * hash + Objects.hashCode(getDecade());
        hash = 31 * hash + Objects.hashCode(getDis());
        hash = 31 * hash + Objects.hashCode(getDrivesp());
        hash = 31 * hash + Objects.hashCode(getEsp());
        hash = 31 * hash + Objects.hashCode(getEsr());
        hash = 31 * hash + Objects.hashCode(getFod1P());
        hash = 31 * hash + Objects.hashCode(getFod2P());
        hash = 31 * hash + Objects.hashCode(getHicov());
        hash = 31 * hash + Objects.hashCode(getHisp());
        hash = 31 * hash + Objects.hashCode(getIndp());
        hash = 31 * hash + Objects.hashCode(getJwap());
        hash = 31 * hash + Objects.hashCode(getJwdp());
        hash = 31 * hash + Objects.hashCode(getLanp());
        hash = 31 * hash + Objects.hashCode(getMigpuma());
        hash = 31 * hash + Objects.hashCode(getMigsp());
        hash = 31 * hash + Objects.hashCode(getMsp());
        hash = 31 * hash + Objects.hashCode(getNaicsp());
        hash = 31 * hash + Objects.hashCode(getNativity());
        hash = 31 * hash + Objects.hashCode(getNop());
        hash = 31 * hash + Objects.hashCode(getOc());
        hash = 31 * hash + Objects.hashCode(getOccp());
        hash = 31 * hash + Objects.hashCode(getPaoc());
        hash = 31 * hash + Objects.hashCode(getPernp());
        hash = 31 * hash + Objects.hashCode(getPincp());
        hash = 31 * hash + Objects.hashCode(getPobp());
        hash = 31 * hash + Objects.hashCode(getPovpip());
        hash = 31 * hash + Objects.hashCode(getPowpuma());
        hash = 31 * hash + Objects.hashCode(getPowsp());
        hash = 31 * hash + Objects.hashCode(getPrivcov());
        hash = 31 * hash + Objects.hashCode(getPubcov());
        hash = 31 * hash + Objects.hashCode(getQtrbir());
        hash = 31 * hash + Objects.hashCode(getRac1P());
        hash = 31 * hash + Objects.hashCode(getRac2P());
        hash = 31 * hash + Objects.hashCode(getRac3P());
        hash = 31 * hash + Objects.hashCode(getRacaian());
        hash = 31 * hash + Objects.hashCode(getRacasn());
        hash = 31 * hash + Objects.hashCode(getRacblk());
        hash = 31 * hash + Objects.hashCode(getRacnh());
        hash = 31 * hash + Objects.hashCode(getRacnum());
        hash = 31 * hash + Objects.hashCode(getRacpi());
        hash = 31 * hash + Objects.hashCode(getRacsor());
        hash = 31 * hash + Objects.hashCode(getRacwht());
        hash = 31 * hash + Objects.hashCode(getRc());
        hash = 31 * hash + Objects.hashCode(getSciengp());
        hash = 31 * hash + Objects.hashCode(getSciengrlp());
        hash = 31 * hash + Objects.hashCode(getSfn());
        hash = 31 * hash + Objects.hashCode(getSfr());
        hash = 31 * hash + Objects.hashCode(getSocp());
        hash = 31 * hash + Objects.hashCode(getVps());
        hash = 31 * hash + Objects.hashCode(getWaob());
        hash = 31 * hash + Objects.hashCode(getFagep());
        hash = 31 * hash + Objects.hashCode(getFancp());
        hash = 31 * hash + Objects.hashCode(getFcitp());
        hash = 31 * hash + Objects.hashCode(getFcitwp());
        hash = 31 * hash + Objects.hashCode(getFcowp());
        hash = 31 * hash + Objects.hashCode(getFddrsp());
        hash = 31 * hash + Objects.hashCode(getFdearp());
        hash = 31 * hash + Objects.hashCode(getFdeyep());
        hash = 31 * hash + Objects.hashCode(getFdisp());
        hash = 31 * hash + Objects.hashCode(getFdoutp());
        hash = 31 * hash + Objects.hashCode(getFdphyp());
        hash = 31 * hash + Objects.hashCode(getFdratp());
        hash = 31 * hash + Objects.hashCode(getFdratxp());
        hash = 31 * hash + Objects.hashCode(getFdremp());
        hash = 31 * hash + Objects.hashCode(getFengp());
        hash = 31 * hash + Objects.hashCode(getFesrp());
        hash = 31 * hash + Objects.hashCode(getFferp());
        hash = 31 * hash + Objects.hashCode(getFfodp());
        hash = 31 * hash + Objects.hashCode(getFgclp());
        hash = 31 * hash + Objects.hashCode(getFgcmp());
        hash = 31 * hash + Objects.hashCode(getFgcrp());
        hash = 31 * hash + Objects.hashCode(getFhins1P());
        hash = 31 * hash + Objects.hashCode(getFhins2P());
        hash = 31 * hash + Objects.hashCode(getFhins3C());
        hash = 31 * hash + Objects.hashCode(getFhins3P());
        hash = 31 * hash + Objects.hashCode(getFhins4C());
        hash = 31 * hash + Objects.hashCode(getFhins4P());
        hash = 31 * hash + Objects.hashCode(getFhins5C());
        hash = 31 * hash + Objects.hashCode(getFhins5P());
        hash = 31 * hash + Objects.hashCode(getFhins6P());
        hash = 31 * hash + Objects.hashCode(getFhins7P());
        hash = 31 * hash + Objects.hashCode(getFhisp());
        hash = 31 * hash + Objects.hashCode(getFindp());
        hash = 31 * hash + Objects.hashCode(getFintp());
        hash = 31 * hash + Objects.hashCode(getFjwdp());
        hash = 31 * hash + Objects.hashCode(getFjwmnp());
        hash = 31 * hash + Objects.hashCode(getFjwrip());
        hash = 31 * hash + Objects.hashCode(getFjwtrp());
        hash = 31 * hash + Objects.hashCode(getFlanp());
        hash = 31 * hash + Objects.hashCode(getFlanxp());
        hash = 31 * hash + Objects.hashCode(getFmarhdp());
        hash = 31 * hash + Objects.hashCode(getFmarhmp());
        hash = 31 * hash + Objects.hashCode(getFmarhtp());
        hash = 31 * hash + Objects.hashCode(getFmarhwp());
        hash = 31 * hash + Objects.hashCode(getFmarhyp());
        hash = 31 * hash + Objects.hashCode(getFmarp());
        hash = 31 * hash + Objects.hashCode(getFmigp());
        hash = 31 * hash + Objects.hashCode(getFmigsp());
        hash = 31 * hash + Objects.hashCode(getFmilpp());
        hash = 31 * hash + Objects.hashCode(getFmilsp());
        hash = 31 * hash + Objects.hashCode(getFoccp());
        hash = 31 * hash + Objects.hashCode(getFoip());
        hash = 31 * hash + Objects.hashCode(getFpap());
        hash = 31 * hash + Objects.hashCode(getFpernp());
        hash = 31 * hash + Objects.hashCode(getFpincp());
        hash = 31 * hash + Objects.hashCode(getFpobp());
        hash = 31 * hash + Objects.hashCode(getFpowsp());
        hash = 31 * hash + Objects.hashCode(getFprivcovp());
        hash = 31 * hash + Objects.hashCode(getFpubcovp());
        hash = 31 * hash + Objects.hashCode(getFracp());
        hash = 31 * hash + Objects.hashCode(getFrelp());
        hash = 31 * hash + Objects.hashCode(getFretp());
        hash = 31 * hash + Objects.hashCode(getFschgp());
        hash = 31 * hash + Objects.hashCode(getFschlp());
        hash = 31 * hash + Objects.hashCode(getFschp());
        hash = 31 * hash + Objects.hashCode(getFsemp());
        hash = 31 * hash + Objects.hashCode(getFsexp());
        hash = 31 * hash + Objects.hashCode(getFssip());
        hash = 31 * hash + Objects.hashCode(getFssp());
        hash = 31 * hash + Objects.hashCode(getFwagp());
        hash = 31 * hash + Objects.hashCode(getFwkhp());
        hash = 31 * hash + Objects.hashCode(getFwklp());
        hash = 31 * hash + Objects.hashCode(getFwkwp());
        hash = 31 * hash + Objects.hashCode(getFwrkp());
        hash = 31 * hash + Objects.hashCode(getFyoep());
        return hash;
    }
    
    @Override
    public Class<Ss13pusa> entityClass() {
        return Ss13pusa.class;
    }
}