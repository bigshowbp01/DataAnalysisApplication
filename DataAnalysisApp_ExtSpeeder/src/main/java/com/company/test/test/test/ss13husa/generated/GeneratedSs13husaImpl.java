package com.company.test.test.test.ss13husa.generated;

import com.company.test.test.test.ss13husa.Ss13husa;
import com.speedment.Speedment;
import com.speedment.internal.core.code.AbstractBaseEntity;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;
import javax.annotation.Generated;

/**
 * The generated base implementation representing an entity (for example, a
 * row) in the Table test.test.test.ss13husa.
 * <p>
 * This file has been automatically generated by Ext Speeder. Any changes
 * made to it will be overwritten.
 * 
 * @author Ext Speeder
 */
@Generated("Ext Speeder")
public abstract class GeneratedSs13husaImpl extends AbstractBaseEntity<Ss13husa> implements Ss13husa {
    
    private Integer rt;
    private Integer serialno;
    private Integer division;
    private Integer puma;
    private Integer region;
    private Integer st;
    private Integer adjhsg;
    private Integer adjinc;
    private Integer wgtp;
    private Integer np;
    private Integer type;
    private Integer access;
    private Integer acr;
    private Integer ags;
    private Integer bath;
    private Integer bdsp;
    private Integer bld;
    private Integer broadbnd;
    private Integer bus;
    private Integer compothx;
    private Integer conp;
    private Integer dialup;
    private Integer dsl;
    private Integer elep;
    private Integer fiberop;
    private Integer fs;
    private Integer fulp;
    private Integer gasp;
    private Integer handheld;
    private Integer hfl;
    private Integer insp;
    private Integer laptop;
    private Integer mhp;
    private Integer modem;
    private Integer mrgi;
    private Integer mrgp;
    private Integer mrgt;
    private Integer mrgx;
    private Integer othsvcex;
    private Integer refr;
    private Integer rmsp;
    private Integer rntm;
    private Integer rntp;
    private Integer rwat;
    private Integer rwatpr;
    private Integer satellite;
    private Integer sink;
    private Integer smp;
    private Integer stov;
    private Integer tel;
    private Integer ten;
    private Integer toil;
    private Integer vacs;
    private Integer valp;
    private Integer veh;
    private Integer watp;
    private Integer ybl;
    private Integer fes;
    private Integer ffincp;
    private Integer fgrntp;
    private Integer fhincp;
    private Integer fincp;
    private Integer fparc;
    private Integer fsmocp;
    private Integer grntp;
    private Integer grpip;
    private Integer hhl;
    private Integer hht;
    private Integer hincp;
    private Integer hugcl;
    private Integer hupac;
    private Integer hupaoc;
    private Integer huparc;
    private Integer kit;
    private Integer lngi;
    private Integer multg;
    private Integer mv;
    private Integer noc;
    private Integer npf;
    private Integer npp;
    private Integer nr;
    private Integer nrc;
    private Integer ocpip;
    private Integer partner;
    private Integer plm;
    private Integer psf;
    private Integer r18;
    private Integer r60;
    private Integer r65;
    private Integer resmode;
    private Integer smocp;
    private Integer smx;
    private Integer srnt;
    private Integer ssmc;
    private Integer sval;
    private Integer taxp;
    private Integer wif;
    private Integer wkexrel;
    private Integer workstat;
    private Integer faccessp;
    private Integer facrp;
    private Integer fagsp;
    private Integer fbathp;
    private Integer fbdsp;
    private Integer fbldp;
    private Integer fbroadbndp;
    private Integer fbusp;
    private Integer fcompothxp;
    private Integer fconp;
    private Integer fdialupp;
    private Integer fdslp;
    private Integer felep;
    private Integer ffiberopp;
    private Integer ffsp;
    private Integer ffulp;
    private Integer fgasp;
    private Integer fhandheldp;
    private Integer fhflp;
    private Integer finsp;
    private Integer fkitp;
    private Integer flaptopp;
    private Integer fmhp;
    private Integer fmodemp;
    private Integer fmrgip;
    private Integer fmrgp;
    private Integer fmrgtp;
    private Integer fmrgxp;
    private Integer fmvp;
    private Integer fothsvcexp;
    private Integer fplmp;
    private Integer frefrp;
    private Integer frmsp;
    private Integer frntmp;
    private Integer frntp;
    private Integer frwatp;
    private Integer frwatprp;
    private Integer fsatellitep;
    private Integer fsinkp;
    private Integer fsmp;
    private Integer fsmxhp;
    private Integer fsmxsp;
    private Integer fstovp;
    private Integer ftaxp;
    private Integer ftelp;
    private Integer ftenp;
    private Integer ftoilp;
    private Integer fvacsp;
    private Integer fvalp;
    private Integer fvehp;
    private Integer fwatp;
    private Integer fyblp;
    
    protected GeneratedSs13husaImpl() {
        
    }
    
    @Override
    public Optional<Integer> getRt() {
        return Optional.ofNullable(rt);
    }
    
    @Override
    public Optional<Integer> getSerialno() {
        return Optional.ofNullable(serialno);
    }
    
    @Override
    public Optional<Integer> getDivision() {
        return Optional.ofNullable(division);
    }
    
    @Override
    public Optional<Integer> getPuma() {
        return Optional.ofNullable(puma);
    }
    
    @Override
    public Optional<Integer> getRegion() {
        return Optional.ofNullable(region);
    }
    
    @Override
    public Optional<Integer> getSt() {
        return Optional.ofNullable(st);
    }
    
    @Override
    public Optional<Integer> getAdjhsg() {
        return Optional.ofNullable(adjhsg);
    }
    
    @Override
    public Optional<Integer> getAdjinc() {
        return Optional.ofNullable(adjinc);
    }
    
    @Override
    public Optional<Integer> getWgtp() {
        return Optional.ofNullable(wgtp);
    }
    
    @Override
    public Optional<Integer> getNp() {
        return Optional.ofNullable(np);
    }
    
    @Override
    public Optional<Integer> getType() {
        return Optional.ofNullable(type);
    }
    
    @Override
    public Optional<Integer> getAccess() {
        return Optional.ofNullable(access);
    }
    
    @Override
    public Optional<Integer> getAcr() {
        return Optional.ofNullable(acr);
    }
    
    @Override
    public Optional<Integer> getAgs() {
        return Optional.ofNullable(ags);
    }
    
    @Override
    public Optional<Integer> getBath() {
        return Optional.ofNullable(bath);
    }
    
    @Override
    public Optional<Integer> getBdsp() {
        return Optional.ofNullable(bdsp);
    }
    
    @Override
    public Optional<Integer> getBld() {
        return Optional.ofNullable(bld);
    }
    
    @Override
    public Optional<Integer> getBroadbnd() {
        return Optional.ofNullable(broadbnd);
    }
    
    @Override
    public Optional<Integer> getBus() {
        return Optional.ofNullable(bus);
    }
    
    @Override
    public Optional<Integer> getCompothx() {
        return Optional.ofNullable(compothx);
    }
    
    @Override
    public Optional<Integer> getConp() {
        return Optional.ofNullable(conp);
    }
    
    @Override
    public Optional<Integer> getDialup() {
        return Optional.ofNullable(dialup);
    }
    
    @Override
    public Optional<Integer> getDsl() {
        return Optional.ofNullable(dsl);
    }
    
    @Override
    public Optional<Integer> getElep() {
        return Optional.ofNullable(elep);
    }
    
    @Override
    public Optional<Integer> getFiberop() {
        return Optional.ofNullable(fiberop);
    }
    
    @Override
    public Optional<Integer> getFs() {
        return Optional.ofNullable(fs);
    }
    
    @Override
    public Optional<Integer> getFulp() {
        return Optional.ofNullable(fulp);
    }
    
    @Override
    public Optional<Integer> getGasp() {
        return Optional.ofNullable(gasp);
    }
    
    @Override
    public Optional<Integer> getHandheld() {
        return Optional.ofNullable(handheld);
    }
    
    @Override
    public Optional<Integer> getHfl() {
        return Optional.ofNullable(hfl);
    }
    
    @Override
    public Optional<Integer> getInsp() {
        return Optional.ofNullable(insp);
    }
    
    @Override
    public Optional<Integer> getLaptop() {
        return Optional.ofNullable(laptop);
    }
    
    @Override
    public Optional<Integer> getMhp() {
        return Optional.ofNullable(mhp);
    }
    
    @Override
    public Optional<Integer> getModem() {
        return Optional.ofNullable(modem);
    }
    
    @Override
    public Optional<Integer> getMrgi() {
        return Optional.ofNullable(mrgi);
    }
    
    @Override
    public Optional<Integer> getMrgp() {
        return Optional.ofNullable(mrgp);
    }
    
    @Override
    public Optional<Integer> getMrgt() {
        return Optional.ofNullable(mrgt);
    }
    
    @Override
    public Optional<Integer> getMrgx() {
        return Optional.ofNullable(mrgx);
    }
    
    @Override
    public Optional<Integer> getOthsvcex() {
        return Optional.ofNullable(othsvcex);
    }
    
    @Override
    public Optional<Integer> getRefr() {
        return Optional.ofNullable(refr);
    }
    
    @Override
    public Optional<Integer> getRmsp() {
        return Optional.ofNullable(rmsp);
    }
    
    @Override
    public Optional<Integer> getRntm() {
        return Optional.ofNullable(rntm);
    }
    
    @Override
    public Optional<Integer> getRntp() {
        return Optional.ofNullable(rntp);
    }
    
    @Override
    public Optional<Integer> getRwat() {
        return Optional.ofNullable(rwat);
    }
    
    @Override
    public Optional<Integer> getRwatpr() {
        return Optional.ofNullable(rwatpr);
    }
    
    @Override
    public Optional<Integer> getSatellite() {
        return Optional.ofNullable(satellite);
    }
    
    @Override
    public Optional<Integer> getSink() {
        return Optional.ofNullable(sink);
    }
    
    @Override
    public Optional<Integer> getSmp() {
        return Optional.ofNullable(smp);
    }
    
    @Override
    public Optional<Integer> getStov() {
        return Optional.ofNullable(stov);
    }
    
    @Override
    public Optional<Integer> getTel() {
        return Optional.ofNullable(tel);
    }
    
    @Override
    public Optional<Integer> getTen() {
        return Optional.ofNullable(ten);
    }
    
    @Override
    public Optional<Integer> getToil() {
        return Optional.ofNullable(toil);
    }
    
    @Override
    public Optional<Integer> getVacs() {
        return Optional.ofNullable(vacs);
    }
    
    @Override
    public Optional<Integer> getValp() {
        return Optional.ofNullable(valp);
    }
    
    @Override
    public Optional<Integer> getVeh() {
        return Optional.ofNullable(veh);
    }
    
    @Override
    public Optional<Integer> getWatp() {
        return Optional.ofNullable(watp);
    }
    
    @Override
    public Optional<Integer> getYbl() {
        return Optional.ofNullable(ybl);
    }
    
    @Override
    public Optional<Integer> getFes() {
        return Optional.ofNullable(fes);
    }
    
    @Override
    public Optional<Integer> getFfincp() {
        return Optional.ofNullable(ffincp);
    }
    
    @Override
    public Optional<Integer> getFgrntp() {
        return Optional.ofNullable(fgrntp);
    }
    
    @Override
    public Optional<Integer> getFhincp() {
        return Optional.ofNullable(fhincp);
    }
    
    @Override
    public Optional<Integer> getFincp() {
        return Optional.ofNullable(fincp);
    }
    
    @Override
    public Optional<Integer> getFparc() {
        return Optional.ofNullable(fparc);
    }
    
    @Override
    public Optional<Integer> getFsmocp() {
        return Optional.ofNullable(fsmocp);
    }
    
    @Override
    public Optional<Integer> getGrntp() {
        return Optional.ofNullable(grntp);
    }
    
    @Override
    public Optional<Integer> getGrpip() {
        return Optional.ofNullable(grpip);
    }
    
    @Override
    public Optional<Integer> getHhl() {
        return Optional.ofNullable(hhl);
    }
    
    @Override
    public Optional<Integer> getHht() {
        return Optional.ofNullable(hht);
    }
    
    @Override
    public Optional<Integer> getHincp() {
        return Optional.ofNullable(hincp);
    }
    
    @Override
    public Optional<Integer> getHugcl() {
        return Optional.ofNullable(hugcl);
    }
    
    @Override
    public Optional<Integer> getHupac() {
        return Optional.ofNullable(hupac);
    }
    
    @Override
    public Optional<Integer> getHupaoc() {
        return Optional.ofNullable(hupaoc);
    }
    
    @Override
    public Optional<Integer> getHuparc() {
        return Optional.ofNullable(huparc);
    }
    
    @Override
    public Optional<Integer> getKit() {
        return Optional.ofNullable(kit);
    }
    
    @Override
    public Optional<Integer> getLngi() {
        return Optional.ofNullable(lngi);
    }
    
    @Override
    public Optional<Integer> getMultg() {
        return Optional.ofNullable(multg);
    }
    
    @Override
    public Optional<Integer> getMv() {
        return Optional.ofNullable(mv);
    }
    
    @Override
    public Optional<Integer> getNoc() {
        return Optional.ofNullable(noc);
    }
    
    @Override
    public Optional<Integer> getNpf() {
        return Optional.ofNullable(npf);
    }
    
    @Override
    public Optional<Integer> getNpp() {
        return Optional.ofNullable(npp);
    }
    
    @Override
    public Optional<Integer> getNr() {
        return Optional.ofNullable(nr);
    }
    
    @Override
    public Optional<Integer> getNrc() {
        return Optional.ofNullable(nrc);
    }
    
    @Override
    public Optional<Integer> getOcpip() {
        return Optional.ofNullable(ocpip);
    }
    
    @Override
    public Optional<Integer> getPartner() {
        return Optional.ofNullable(partner);
    }
    
    @Override
    public Optional<Integer> getPlm() {
        return Optional.ofNullable(plm);
    }
    
    @Override
    public Optional<Integer> getPsf() {
        return Optional.ofNullable(psf);
    }
    
    @Override
    public Optional<Integer> getR18() {
        return Optional.ofNullable(r18);
    }
    
    @Override
    public Optional<Integer> getR60() {
        return Optional.ofNullable(r60);
    }
    
    @Override
    public Optional<Integer> getR65() {
        return Optional.ofNullable(r65);
    }
    
    @Override
    public Optional<Integer> getResmode() {
        return Optional.ofNullable(resmode);
    }
    
    @Override
    public Optional<Integer> getSmocp() {
        return Optional.ofNullable(smocp);
    }
    
    @Override
    public Optional<Integer> getSmx() {
        return Optional.ofNullable(smx);
    }
    
    @Override
    public Optional<Integer> getSrnt() {
        return Optional.ofNullable(srnt);
    }
    
    @Override
    public Optional<Integer> getSsmc() {
        return Optional.ofNullable(ssmc);
    }
    
    @Override
    public Optional<Integer> getSval() {
        return Optional.ofNullable(sval);
    }
    
    @Override
    public Optional<Integer> getTaxp() {
        return Optional.ofNullable(taxp);
    }
    
    @Override
    public Optional<Integer> getWif() {
        return Optional.ofNullable(wif);
    }
    
    @Override
    public Optional<Integer> getWkexrel() {
        return Optional.ofNullable(wkexrel);
    }
    
    @Override
    public Optional<Integer> getWorkstat() {
        return Optional.ofNullable(workstat);
    }
    
    @Override
    public Optional<Integer> getFaccessp() {
        return Optional.ofNullable(faccessp);
    }
    
    @Override
    public Optional<Integer> getFacrp() {
        return Optional.ofNullable(facrp);
    }
    
    @Override
    public Optional<Integer> getFagsp() {
        return Optional.ofNullable(fagsp);
    }
    
    @Override
    public Optional<Integer> getFbathp() {
        return Optional.ofNullable(fbathp);
    }
    
    @Override
    public Optional<Integer> getFbdsp() {
        return Optional.ofNullable(fbdsp);
    }
    
    @Override
    public Optional<Integer> getFbldp() {
        return Optional.ofNullable(fbldp);
    }
    
    @Override
    public Optional<Integer> getFbroadbndp() {
        return Optional.ofNullable(fbroadbndp);
    }
    
    @Override
    public Optional<Integer> getFbusp() {
        return Optional.ofNullable(fbusp);
    }
    
    @Override
    public Optional<Integer> getFcompothxp() {
        return Optional.ofNullable(fcompothxp);
    }
    
    @Override
    public Optional<Integer> getFconp() {
        return Optional.ofNullable(fconp);
    }
    
    @Override
    public Optional<Integer> getFdialupp() {
        return Optional.ofNullable(fdialupp);
    }
    
    @Override
    public Optional<Integer> getFdslp() {
        return Optional.ofNullable(fdslp);
    }
    
    @Override
    public Optional<Integer> getFelep() {
        return Optional.ofNullable(felep);
    }
    
    @Override
    public Optional<Integer> getFfiberopp() {
        return Optional.ofNullable(ffiberopp);
    }
    
    @Override
    public Optional<Integer> getFfsp() {
        return Optional.ofNullable(ffsp);
    }
    
    @Override
    public Optional<Integer> getFfulp() {
        return Optional.ofNullable(ffulp);
    }
    
    @Override
    public Optional<Integer> getFgasp() {
        return Optional.ofNullable(fgasp);
    }
    
    @Override
    public Optional<Integer> getFhandheldp() {
        return Optional.ofNullable(fhandheldp);
    }
    
    @Override
    public Optional<Integer> getFhflp() {
        return Optional.ofNullable(fhflp);
    }
    
    @Override
    public Optional<Integer> getFinsp() {
        return Optional.ofNullable(finsp);
    }
    
    @Override
    public Optional<Integer> getFkitp() {
        return Optional.ofNullable(fkitp);
    }
    
    @Override
    public Optional<Integer> getFlaptopp() {
        return Optional.ofNullable(flaptopp);
    }
    
    @Override
    public Optional<Integer> getFmhp() {
        return Optional.ofNullable(fmhp);
    }
    
    @Override
    public Optional<Integer> getFmodemp() {
        return Optional.ofNullable(fmodemp);
    }
    
    @Override
    public Optional<Integer> getFmrgip() {
        return Optional.ofNullable(fmrgip);
    }
    
    @Override
    public Optional<Integer> getFmrgp() {
        return Optional.ofNullable(fmrgp);
    }
    
    @Override
    public Optional<Integer> getFmrgtp() {
        return Optional.ofNullable(fmrgtp);
    }
    
    @Override
    public Optional<Integer> getFmrgxp() {
        return Optional.ofNullable(fmrgxp);
    }
    
    @Override
    public Optional<Integer> getFmvp() {
        return Optional.ofNullable(fmvp);
    }
    
    @Override
    public Optional<Integer> getFothsvcexp() {
        return Optional.ofNullable(fothsvcexp);
    }
    
    @Override
    public Optional<Integer> getFplmp() {
        return Optional.ofNullable(fplmp);
    }
    
    @Override
    public Optional<Integer> getFrefrp() {
        return Optional.ofNullable(frefrp);
    }
    
    @Override
    public Optional<Integer> getFrmsp() {
        return Optional.ofNullable(frmsp);
    }
    
    @Override
    public Optional<Integer> getFrntmp() {
        return Optional.ofNullable(frntmp);
    }
    
    @Override
    public Optional<Integer> getFrntp() {
        return Optional.ofNullable(frntp);
    }
    
    @Override
    public Optional<Integer> getFrwatp() {
        return Optional.ofNullable(frwatp);
    }
    
    @Override
    public Optional<Integer> getFrwatprp() {
        return Optional.ofNullable(frwatprp);
    }
    
    @Override
    public Optional<Integer> getFsatellitep() {
        return Optional.ofNullable(fsatellitep);
    }
    
    @Override
    public Optional<Integer> getFsinkp() {
        return Optional.ofNullable(fsinkp);
    }
    
    @Override
    public Optional<Integer> getFsmp() {
        return Optional.ofNullable(fsmp);
    }
    
    @Override
    public Optional<Integer> getFsmxhp() {
        return Optional.ofNullable(fsmxhp);
    }
    
    @Override
    public Optional<Integer> getFsmxsp() {
        return Optional.ofNullable(fsmxsp);
    }
    
    @Override
    public Optional<Integer> getFstovp() {
        return Optional.ofNullable(fstovp);
    }
    
    @Override
    public Optional<Integer> getFtaxp() {
        return Optional.ofNullable(ftaxp);
    }
    
    @Override
    public Optional<Integer> getFtelp() {
        return Optional.ofNullable(ftelp);
    }
    
    @Override
    public Optional<Integer> getFtenp() {
        return Optional.ofNullable(ftenp);
    }
    
    @Override
    public Optional<Integer> getFtoilp() {
        return Optional.ofNullable(ftoilp);
    }
    
    @Override
    public Optional<Integer> getFvacsp() {
        return Optional.ofNullable(fvacsp);
    }
    
    @Override
    public Optional<Integer> getFvalp() {
        return Optional.ofNullable(fvalp);
    }
    
    @Override
    public Optional<Integer> getFvehp() {
        return Optional.ofNullable(fvehp);
    }
    
    @Override
    public Optional<Integer> getFwatp() {
        return Optional.ofNullable(fwatp);
    }
    
    @Override
    public Optional<Integer> getFyblp() {
        return Optional.ofNullable(fyblp);
    }
    
    @Override
    public final Ss13husa setRt(Integer rt) {
        this.rt = rt;
        return this;
    }
    
    @Override
    public final Ss13husa setSerialno(Integer serialno) {
        this.serialno = serialno;
        return this;
    }
    
    @Override
    public final Ss13husa setDivision(Integer division) {
        this.division = division;
        return this;
    }
    
    @Override
    public final Ss13husa setPuma(Integer puma) {
        this.puma = puma;
        return this;
    }
    
    @Override
    public final Ss13husa setRegion(Integer region) {
        this.region = region;
        return this;
    }
    
    @Override
    public final Ss13husa setSt(Integer st) {
        this.st = st;
        return this;
    }
    
    @Override
    public final Ss13husa setAdjhsg(Integer adjhsg) {
        this.adjhsg = adjhsg;
        return this;
    }
    
    @Override
    public final Ss13husa setAdjinc(Integer adjinc) {
        this.adjinc = adjinc;
        return this;
    }
    
    @Override
    public final Ss13husa setWgtp(Integer wgtp) {
        this.wgtp = wgtp;
        return this;
    }
    
    @Override
    public final Ss13husa setNp(Integer np) {
        this.np = np;
        return this;
    }
    
    @Override
    public final Ss13husa setType(Integer type) {
        this.type = type;
        return this;
    }
    
    @Override
    public final Ss13husa setAccess(Integer access) {
        this.access = access;
        return this;
    }
    
    @Override
    public final Ss13husa setAcr(Integer acr) {
        this.acr = acr;
        return this;
    }
    
    @Override
    public final Ss13husa setAgs(Integer ags) {
        this.ags = ags;
        return this;
    }
    
    @Override
    public final Ss13husa setBath(Integer bath) {
        this.bath = bath;
        return this;
    }
    
    @Override
    public final Ss13husa setBdsp(Integer bdsp) {
        this.bdsp = bdsp;
        return this;
    }
    
    @Override
    public final Ss13husa setBld(Integer bld) {
        this.bld = bld;
        return this;
    }
    
    @Override
    public final Ss13husa setBroadbnd(Integer broadbnd) {
        this.broadbnd = broadbnd;
        return this;
    }
    
    @Override
    public final Ss13husa setBus(Integer bus) {
        this.bus = bus;
        return this;
    }
    
    @Override
    public final Ss13husa setCompothx(Integer compothx) {
        this.compothx = compothx;
        return this;
    }
    
    @Override
    public final Ss13husa setConp(Integer conp) {
        this.conp = conp;
        return this;
    }
    
    @Override
    public final Ss13husa setDialup(Integer dialup) {
        this.dialup = dialup;
        return this;
    }
    
    @Override
    public final Ss13husa setDsl(Integer dsl) {
        this.dsl = dsl;
        return this;
    }
    
    @Override
    public final Ss13husa setElep(Integer elep) {
        this.elep = elep;
        return this;
    }
    
    @Override
    public final Ss13husa setFiberop(Integer fiberop) {
        this.fiberop = fiberop;
        return this;
    }
    
    @Override
    public final Ss13husa setFs(Integer fs) {
        this.fs = fs;
        return this;
    }
    
    @Override
    public final Ss13husa setFulp(Integer fulp) {
        this.fulp = fulp;
        return this;
    }
    
    @Override
    public final Ss13husa setGasp(Integer gasp) {
        this.gasp = gasp;
        return this;
    }
    
    @Override
    public final Ss13husa setHandheld(Integer handheld) {
        this.handheld = handheld;
        return this;
    }
    
    @Override
    public final Ss13husa setHfl(Integer hfl) {
        this.hfl = hfl;
        return this;
    }
    
    @Override
    public final Ss13husa setInsp(Integer insp) {
        this.insp = insp;
        return this;
    }
    
    @Override
    public final Ss13husa setLaptop(Integer laptop) {
        this.laptop = laptop;
        return this;
    }
    
    @Override
    public final Ss13husa setMhp(Integer mhp) {
        this.mhp = mhp;
        return this;
    }
    
    @Override
    public final Ss13husa setModem(Integer modem) {
        this.modem = modem;
        return this;
    }
    
    @Override
    public final Ss13husa setMrgi(Integer mrgi) {
        this.mrgi = mrgi;
        return this;
    }
    
    @Override
    public final Ss13husa setMrgp(Integer mrgp) {
        this.mrgp = mrgp;
        return this;
    }
    
    @Override
    public final Ss13husa setMrgt(Integer mrgt) {
        this.mrgt = mrgt;
        return this;
    }
    
    @Override
    public final Ss13husa setMrgx(Integer mrgx) {
        this.mrgx = mrgx;
        return this;
    }
    
    @Override
    public final Ss13husa setOthsvcex(Integer othsvcex) {
        this.othsvcex = othsvcex;
        return this;
    }
    
    @Override
    public final Ss13husa setRefr(Integer refr) {
        this.refr = refr;
        return this;
    }
    
    @Override
    public final Ss13husa setRmsp(Integer rmsp) {
        this.rmsp = rmsp;
        return this;
    }
    
    @Override
    public final Ss13husa setRntm(Integer rntm) {
        this.rntm = rntm;
        return this;
    }
    
    @Override
    public final Ss13husa setRntp(Integer rntp) {
        this.rntp = rntp;
        return this;
    }
    
    @Override
    public final Ss13husa setRwat(Integer rwat) {
        this.rwat = rwat;
        return this;
    }
    
    @Override
    public final Ss13husa setRwatpr(Integer rwatpr) {
        this.rwatpr = rwatpr;
        return this;
    }
    
    @Override
    public final Ss13husa setSatellite(Integer satellite) {
        this.satellite = satellite;
        return this;
    }
    
    @Override
    public final Ss13husa setSink(Integer sink) {
        this.sink = sink;
        return this;
    }
    
    @Override
    public final Ss13husa setSmp(Integer smp) {
        this.smp = smp;
        return this;
    }
    
    @Override
    public final Ss13husa setStov(Integer stov) {
        this.stov = stov;
        return this;
    }
    
    @Override
    public final Ss13husa setTel(Integer tel) {
        this.tel = tel;
        return this;
    }
    
    @Override
    public final Ss13husa setTen(Integer ten) {
        this.ten = ten;
        return this;
    }
    
    @Override
    public final Ss13husa setToil(Integer toil) {
        this.toil = toil;
        return this;
    }
    
    @Override
    public final Ss13husa setVacs(Integer vacs) {
        this.vacs = vacs;
        return this;
    }
    
    @Override
    public final Ss13husa setValp(Integer valp) {
        this.valp = valp;
        return this;
    }
    
    @Override
    public final Ss13husa setVeh(Integer veh) {
        this.veh = veh;
        return this;
    }
    
    @Override
    public final Ss13husa setWatp(Integer watp) {
        this.watp = watp;
        return this;
    }
    
    @Override
    public final Ss13husa setYbl(Integer ybl) {
        this.ybl = ybl;
        return this;
    }
    
    @Override
    public final Ss13husa setFes(Integer fes) {
        this.fes = fes;
        return this;
    }
    
    @Override
    public final Ss13husa setFfincp(Integer ffincp) {
        this.ffincp = ffincp;
        return this;
    }
    
    @Override
    public final Ss13husa setFgrntp(Integer fgrntp) {
        this.fgrntp = fgrntp;
        return this;
    }
    
    @Override
    public final Ss13husa setFhincp(Integer fhincp) {
        this.fhincp = fhincp;
        return this;
    }
    
    @Override
    public final Ss13husa setFincp(Integer fincp) {
        this.fincp = fincp;
        return this;
    }
    
    @Override
    public final Ss13husa setFparc(Integer fparc) {
        this.fparc = fparc;
        return this;
    }
    
    @Override
    public final Ss13husa setFsmocp(Integer fsmocp) {
        this.fsmocp = fsmocp;
        return this;
    }
    
    @Override
    public final Ss13husa setGrntp(Integer grntp) {
        this.grntp = grntp;
        return this;
    }
    
    @Override
    public final Ss13husa setGrpip(Integer grpip) {
        this.grpip = grpip;
        return this;
    }
    
    @Override
    public final Ss13husa setHhl(Integer hhl) {
        this.hhl = hhl;
        return this;
    }
    
    @Override
    public final Ss13husa setHht(Integer hht) {
        this.hht = hht;
        return this;
    }
    
    @Override
    public final Ss13husa setHincp(Integer hincp) {
        this.hincp = hincp;
        return this;
    }
    
    @Override
    public final Ss13husa setHugcl(Integer hugcl) {
        this.hugcl = hugcl;
        return this;
    }
    
    @Override
    public final Ss13husa setHupac(Integer hupac) {
        this.hupac = hupac;
        return this;
    }
    
    @Override
    public final Ss13husa setHupaoc(Integer hupaoc) {
        this.hupaoc = hupaoc;
        return this;
    }
    
    @Override
    public final Ss13husa setHuparc(Integer huparc) {
        this.huparc = huparc;
        return this;
    }
    
    @Override
    public final Ss13husa setKit(Integer kit) {
        this.kit = kit;
        return this;
    }
    
    @Override
    public final Ss13husa setLngi(Integer lngi) {
        this.lngi = lngi;
        return this;
    }
    
    @Override
    public final Ss13husa setMultg(Integer multg) {
        this.multg = multg;
        return this;
    }
    
    @Override
    public final Ss13husa setMv(Integer mv) {
        this.mv = mv;
        return this;
    }
    
    @Override
    public final Ss13husa setNoc(Integer noc) {
        this.noc = noc;
        return this;
    }
    
    @Override
    public final Ss13husa setNpf(Integer npf) {
        this.npf = npf;
        return this;
    }
    
    @Override
    public final Ss13husa setNpp(Integer npp) {
        this.npp = npp;
        return this;
    }
    
    @Override
    public final Ss13husa setNr(Integer nr) {
        this.nr = nr;
        return this;
    }
    
    @Override
    public final Ss13husa setNrc(Integer nrc) {
        this.nrc = nrc;
        return this;
    }
    
    @Override
    public final Ss13husa setOcpip(Integer ocpip) {
        this.ocpip = ocpip;
        return this;
    }
    
    @Override
    public final Ss13husa setPartner(Integer partner) {
        this.partner = partner;
        return this;
    }
    
    @Override
    public final Ss13husa setPlm(Integer plm) {
        this.plm = plm;
        return this;
    }
    
    @Override
    public final Ss13husa setPsf(Integer psf) {
        this.psf = psf;
        return this;
    }
    
    @Override
    public final Ss13husa setR18(Integer r18) {
        this.r18 = r18;
        return this;
    }
    
    @Override
    public final Ss13husa setR60(Integer r60) {
        this.r60 = r60;
        return this;
    }
    
    @Override
    public final Ss13husa setR65(Integer r65) {
        this.r65 = r65;
        return this;
    }
    
    @Override
    public final Ss13husa setResmode(Integer resmode) {
        this.resmode = resmode;
        return this;
    }
    
    @Override
    public final Ss13husa setSmocp(Integer smocp) {
        this.smocp = smocp;
        return this;
    }
    
    @Override
    public final Ss13husa setSmx(Integer smx) {
        this.smx = smx;
        return this;
    }
    
    @Override
    public final Ss13husa setSrnt(Integer srnt) {
        this.srnt = srnt;
        return this;
    }
    
    @Override
    public final Ss13husa setSsmc(Integer ssmc) {
        this.ssmc = ssmc;
        return this;
    }
    
    @Override
    public final Ss13husa setSval(Integer sval) {
        this.sval = sval;
        return this;
    }
    
    @Override
    public final Ss13husa setTaxp(Integer taxp) {
        this.taxp = taxp;
        return this;
    }
    
    @Override
    public final Ss13husa setWif(Integer wif) {
        this.wif = wif;
        return this;
    }
    
    @Override
    public final Ss13husa setWkexrel(Integer wkexrel) {
        this.wkexrel = wkexrel;
        return this;
    }
    
    @Override
    public final Ss13husa setWorkstat(Integer workstat) {
        this.workstat = workstat;
        return this;
    }
    
    @Override
    public final Ss13husa setFaccessp(Integer faccessp) {
        this.faccessp = faccessp;
        return this;
    }
    
    @Override
    public final Ss13husa setFacrp(Integer facrp) {
        this.facrp = facrp;
        return this;
    }
    
    @Override
    public final Ss13husa setFagsp(Integer fagsp) {
        this.fagsp = fagsp;
        return this;
    }
    
    @Override
    public final Ss13husa setFbathp(Integer fbathp) {
        this.fbathp = fbathp;
        return this;
    }
    
    @Override
    public final Ss13husa setFbdsp(Integer fbdsp) {
        this.fbdsp = fbdsp;
        return this;
    }
    
    @Override
    public final Ss13husa setFbldp(Integer fbldp) {
        this.fbldp = fbldp;
        return this;
    }
    
    @Override
    public final Ss13husa setFbroadbndp(Integer fbroadbndp) {
        this.fbroadbndp = fbroadbndp;
        return this;
    }
    
    @Override
    public final Ss13husa setFbusp(Integer fbusp) {
        this.fbusp = fbusp;
        return this;
    }
    
    @Override
    public final Ss13husa setFcompothxp(Integer fcompothxp) {
        this.fcompothxp = fcompothxp;
        return this;
    }
    
    @Override
    public final Ss13husa setFconp(Integer fconp) {
        this.fconp = fconp;
        return this;
    }
    
    @Override
    public final Ss13husa setFdialupp(Integer fdialupp) {
        this.fdialupp = fdialupp;
        return this;
    }
    
    @Override
    public final Ss13husa setFdslp(Integer fdslp) {
        this.fdslp = fdslp;
        return this;
    }
    
    @Override
    public final Ss13husa setFelep(Integer felep) {
        this.felep = felep;
        return this;
    }
    
    @Override
    public final Ss13husa setFfiberopp(Integer ffiberopp) {
        this.ffiberopp = ffiberopp;
        return this;
    }
    
    @Override
    public final Ss13husa setFfsp(Integer ffsp) {
        this.ffsp = ffsp;
        return this;
    }
    
    @Override
    public final Ss13husa setFfulp(Integer ffulp) {
        this.ffulp = ffulp;
        return this;
    }
    
    @Override
    public final Ss13husa setFgasp(Integer fgasp) {
        this.fgasp = fgasp;
        return this;
    }
    
    @Override
    public final Ss13husa setFhandheldp(Integer fhandheldp) {
        this.fhandheldp = fhandheldp;
        return this;
    }
    
    @Override
    public final Ss13husa setFhflp(Integer fhflp) {
        this.fhflp = fhflp;
        return this;
    }
    
    @Override
    public final Ss13husa setFinsp(Integer finsp) {
        this.finsp = finsp;
        return this;
    }
    
    @Override
    public final Ss13husa setFkitp(Integer fkitp) {
        this.fkitp = fkitp;
        return this;
    }
    
    @Override
    public final Ss13husa setFlaptopp(Integer flaptopp) {
        this.flaptopp = flaptopp;
        return this;
    }
    
    @Override
    public final Ss13husa setFmhp(Integer fmhp) {
        this.fmhp = fmhp;
        return this;
    }
    
    @Override
    public final Ss13husa setFmodemp(Integer fmodemp) {
        this.fmodemp = fmodemp;
        return this;
    }
    
    @Override
    public final Ss13husa setFmrgip(Integer fmrgip) {
        this.fmrgip = fmrgip;
        return this;
    }
    
    @Override
    public final Ss13husa setFmrgp(Integer fmrgp) {
        this.fmrgp = fmrgp;
        return this;
    }
    
    @Override
    public final Ss13husa setFmrgtp(Integer fmrgtp) {
        this.fmrgtp = fmrgtp;
        return this;
    }
    
    @Override
    public final Ss13husa setFmrgxp(Integer fmrgxp) {
        this.fmrgxp = fmrgxp;
        return this;
    }
    
    @Override
    public final Ss13husa setFmvp(Integer fmvp) {
        this.fmvp = fmvp;
        return this;
    }
    
    @Override
    public final Ss13husa setFothsvcexp(Integer fothsvcexp) {
        this.fothsvcexp = fothsvcexp;
        return this;
    }
    
    @Override
    public final Ss13husa setFplmp(Integer fplmp) {
        this.fplmp = fplmp;
        return this;
    }
    
    @Override
    public final Ss13husa setFrefrp(Integer frefrp) {
        this.frefrp = frefrp;
        return this;
    }
    
    @Override
    public final Ss13husa setFrmsp(Integer frmsp) {
        this.frmsp = frmsp;
        return this;
    }
    
    @Override
    public final Ss13husa setFrntmp(Integer frntmp) {
        this.frntmp = frntmp;
        return this;
    }
    
    @Override
    public final Ss13husa setFrntp(Integer frntp) {
        this.frntp = frntp;
        return this;
    }
    
    @Override
    public final Ss13husa setFrwatp(Integer frwatp) {
        this.frwatp = frwatp;
        return this;
    }
    
    @Override
    public final Ss13husa setFrwatprp(Integer frwatprp) {
        this.frwatprp = frwatprp;
        return this;
    }
    
    @Override
    public final Ss13husa setFsatellitep(Integer fsatellitep) {
        this.fsatellitep = fsatellitep;
        return this;
    }
    
    @Override
    public final Ss13husa setFsinkp(Integer fsinkp) {
        this.fsinkp = fsinkp;
        return this;
    }
    
    @Override
    public final Ss13husa setFsmp(Integer fsmp) {
        this.fsmp = fsmp;
        return this;
    }
    
    @Override
    public final Ss13husa setFsmxhp(Integer fsmxhp) {
        this.fsmxhp = fsmxhp;
        return this;
    }
    
    @Override
    public final Ss13husa setFsmxsp(Integer fsmxsp) {
        this.fsmxsp = fsmxsp;
        return this;
    }
    
    @Override
    public final Ss13husa setFstovp(Integer fstovp) {
        this.fstovp = fstovp;
        return this;
    }
    
    @Override
    public final Ss13husa setFtaxp(Integer ftaxp) {
        this.ftaxp = ftaxp;
        return this;
    }
    
    @Override
    public final Ss13husa setFtelp(Integer ftelp) {
        this.ftelp = ftelp;
        return this;
    }
    
    @Override
    public final Ss13husa setFtenp(Integer ftenp) {
        this.ftenp = ftenp;
        return this;
    }
    
    @Override
    public final Ss13husa setFtoilp(Integer ftoilp) {
        this.ftoilp = ftoilp;
        return this;
    }
    
    @Override
    public final Ss13husa setFvacsp(Integer fvacsp) {
        this.fvacsp = fvacsp;
        return this;
    }
    
    @Override
    public final Ss13husa setFvalp(Integer fvalp) {
        this.fvalp = fvalp;
        return this;
    }
    
    @Override
    public final Ss13husa setFvehp(Integer fvehp) {
        this.fvehp = fvehp;
        return this;
    }
    
    @Override
    public final Ss13husa setFwatp(Integer fwatp) {
        this.fwatp = fwatp;
        return this;
    }
    
    @Override
    public final Ss13husa setFyblp(Integer fyblp) {
        this.fyblp = fyblp;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("rt = "+Objects.toString(getRt().orElse(null)));
        sj.add("serialno = "+Objects.toString(getSerialno().orElse(null)));
        sj.add("division = "+Objects.toString(getDivision().orElse(null)));
        sj.add("puma = "+Objects.toString(getPuma().orElse(null)));
        sj.add("region = "+Objects.toString(getRegion().orElse(null)));
        sj.add("st = "+Objects.toString(getSt().orElse(null)));
        sj.add("adjhsg = "+Objects.toString(getAdjhsg().orElse(null)));
        sj.add("adjinc = "+Objects.toString(getAdjinc().orElse(null)));
        sj.add("wgtp = "+Objects.toString(getWgtp().orElse(null)));
        sj.add("np = "+Objects.toString(getNp().orElse(null)));
        sj.add("type = "+Objects.toString(getType().orElse(null)));
        sj.add("access = "+Objects.toString(getAccess().orElse(null)));
        sj.add("acr = "+Objects.toString(getAcr().orElse(null)));
        sj.add("ags = "+Objects.toString(getAgs().orElse(null)));
        sj.add("bath = "+Objects.toString(getBath().orElse(null)));
        sj.add("bdsp = "+Objects.toString(getBdsp().orElse(null)));
        sj.add("bld = "+Objects.toString(getBld().orElse(null)));
        sj.add("broadbnd = "+Objects.toString(getBroadbnd().orElse(null)));
        sj.add("bus = "+Objects.toString(getBus().orElse(null)));
        sj.add("compothx = "+Objects.toString(getCompothx().orElse(null)));
        sj.add("conp = "+Objects.toString(getConp().orElse(null)));
        sj.add("dialup = "+Objects.toString(getDialup().orElse(null)));
        sj.add("dsl = "+Objects.toString(getDsl().orElse(null)));
        sj.add("elep = "+Objects.toString(getElep().orElse(null)));
        sj.add("fiberop = "+Objects.toString(getFiberop().orElse(null)));
        sj.add("fs = "+Objects.toString(getFs().orElse(null)));
        sj.add("fulp = "+Objects.toString(getFulp().orElse(null)));
        sj.add("gasp = "+Objects.toString(getGasp().orElse(null)));
        sj.add("handheld = "+Objects.toString(getHandheld().orElse(null)));
        sj.add("hfl = "+Objects.toString(getHfl().orElse(null)));
        sj.add("insp = "+Objects.toString(getInsp().orElse(null)));
        sj.add("laptop = "+Objects.toString(getLaptop().orElse(null)));
        sj.add("mhp = "+Objects.toString(getMhp().orElse(null)));
        sj.add("modem = "+Objects.toString(getModem().orElse(null)));
        sj.add("mrgi = "+Objects.toString(getMrgi().orElse(null)));
        sj.add("mrgp = "+Objects.toString(getMrgp().orElse(null)));
        sj.add("mrgt = "+Objects.toString(getMrgt().orElse(null)));
        sj.add("mrgx = "+Objects.toString(getMrgx().orElse(null)));
        sj.add("othsvcex = "+Objects.toString(getOthsvcex().orElse(null)));
        sj.add("refr = "+Objects.toString(getRefr().orElse(null)));
        sj.add("rmsp = "+Objects.toString(getRmsp().orElse(null)));
        sj.add("rntm = "+Objects.toString(getRntm().orElse(null)));
        sj.add("rntp = "+Objects.toString(getRntp().orElse(null)));
        sj.add("rwat = "+Objects.toString(getRwat().orElse(null)));
        sj.add("rwatpr = "+Objects.toString(getRwatpr().orElse(null)));
        sj.add("satellite = "+Objects.toString(getSatellite().orElse(null)));
        sj.add("sink = "+Objects.toString(getSink().orElse(null)));
        sj.add("smp = "+Objects.toString(getSmp().orElse(null)));
        sj.add("stov = "+Objects.toString(getStov().orElse(null)));
        sj.add("tel = "+Objects.toString(getTel().orElse(null)));
        sj.add("ten = "+Objects.toString(getTen().orElse(null)));
        sj.add("toil = "+Objects.toString(getToil().orElse(null)));
        sj.add("vacs = "+Objects.toString(getVacs().orElse(null)));
        sj.add("valp = "+Objects.toString(getValp().orElse(null)));
        sj.add("veh = "+Objects.toString(getVeh().orElse(null)));
        sj.add("watp = "+Objects.toString(getWatp().orElse(null)));
        sj.add("ybl = "+Objects.toString(getYbl().orElse(null)));
        sj.add("fes = "+Objects.toString(getFes().orElse(null)));
        sj.add("ffincp = "+Objects.toString(getFfincp().orElse(null)));
        sj.add("fgrntp = "+Objects.toString(getFgrntp().orElse(null)));
        sj.add("fhincp = "+Objects.toString(getFhincp().orElse(null)));
        sj.add("fincp = "+Objects.toString(getFincp().orElse(null)));
        sj.add("fparc = "+Objects.toString(getFparc().orElse(null)));
        sj.add("fsmocp = "+Objects.toString(getFsmocp().orElse(null)));
        sj.add("grntp = "+Objects.toString(getGrntp().orElse(null)));
        sj.add("grpip = "+Objects.toString(getGrpip().orElse(null)));
        sj.add("hhl = "+Objects.toString(getHhl().orElse(null)));
        sj.add("hht = "+Objects.toString(getHht().orElse(null)));
        sj.add("hincp = "+Objects.toString(getHincp().orElse(null)));
        sj.add("hugcl = "+Objects.toString(getHugcl().orElse(null)));
        sj.add("hupac = "+Objects.toString(getHupac().orElse(null)));
        sj.add("hupaoc = "+Objects.toString(getHupaoc().orElse(null)));
        sj.add("huparc = "+Objects.toString(getHuparc().orElse(null)));
        sj.add("kit = "+Objects.toString(getKit().orElse(null)));
        sj.add("lngi = "+Objects.toString(getLngi().orElse(null)));
        sj.add("multg = "+Objects.toString(getMultg().orElse(null)));
        sj.add("mv = "+Objects.toString(getMv().orElse(null)));
        sj.add("noc = "+Objects.toString(getNoc().orElse(null)));
        sj.add("npf = "+Objects.toString(getNpf().orElse(null)));
        sj.add("npp = "+Objects.toString(getNpp().orElse(null)));
        sj.add("nr = "+Objects.toString(getNr().orElse(null)));
        sj.add("nrc = "+Objects.toString(getNrc().orElse(null)));
        sj.add("ocpip = "+Objects.toString(getOcpip().orElse(null)));
        sj.add("partner = "+Objects.toString(getPartner().orElse(null)));
        sj.add("plm = "+Objects.toString(getPlm().orElse(null)));
        sj.add("psf = "+Objects.toString(getPsf().orElse(null)));
        sj.add("r18 = "+Objects.toString(getR18().orElse(null)));
        sj.add("r60 = "+Objects.toString(getR60().orElse(null)));
        sj.add("r65 = "+Objects.toString(getR65().orElse(null)));
        sj.add("resmode = "+Objects.toString(getResmode().orElse(null)));
        sj.add("smocp = "+Objects.toString(getSmocp().orElse(null)));
        sj.add("smx = "+Objects.toString(getSmx().orElse(null)));
        sj.add("srnt = "+Objects.toString(getSrnt().orElse(null)));
        sj.add("ssmc = "+Objects.toString(getSsmc().orElse(null)));
        sj.add("sval = "+Objects.toString(getSval().orElse(null)));
        sj.add("taxp = "+Objects.toString(getTaxp().orElse(null)));
        sj.add("wif = "+Objects.toString(getWif().orElse(null)));
        sj.add("wkexrel = "+Objects.toString(getWkexrel().orElse(null)));
        sj.add("workstat = "+Objects.toString(getWorkstat().orElse(null)));
        sj.add("faccessp = "+Objects.toString(getFaccessp().orElse(null)));
        sj.add("facrp = "+Objects.toString(getFacrp().orElse(null)));
        sj.add("fagsp = "+Objects.toString(getFagsp().orElse(null)));
        sj.add("fbathp = "+Objects.toString(getFbathp().orElse(null)));
        sj.add("fbdsp = "+Objects.toString(getFbdsp().orElse(null)));
        sj.add("fbldp = "+Objects.toString(getFbldp().orElse(null)));
        sj.add("fbroadbndp = "+Objects.toString(getFbroadbndp().orElse(null)));
        sj.add("fbusp = "+Objects.toString(getFbusp().orElse(null)));
        sj.add("fcompothxp = "+Objects.toString(getFcompothxp().orElse(null)));
        sj.add("fconp = "+Objects.toString(getFconp().orElse(null)));
        sj.add("fdialupp = "+Objects.toString(getFdialupp().orElse(null)));
        sj.add("fdslp = "+Objects.toString(getFdslp().orElse(null)));
        sj.add("felep = "+Objects.toString(getFelep().orElse(null)));
        sj.add("ffiberopp = "+Objects.toString(getFfiberopp().orElse(null)));
        sj.add("ffsp = "+Objects.toString(getFfsp().orElse(null)));
        sj.add("ffulp = "+Objects.toString(getFfulp().orElse(null)));
        sj.add("fgasp = "+Objects.toString(getFgasp().orElse(null)));
        sj.add("fhandheldp = "+Objects.toString(getFhandheldp().orElse(null)));
        sj.add("fhflp = "+Objects.toString(getFhflp().orElse(null)));
        sj.add("finsp = "+Objects.toString(getFinsp().orElse(null)));
        sj.add("fkitp = "+Objects.toString(getFkitp().orElse(null)));
        sj.add("flaptopp = "+Objects.toString(getFlaptopp().orElse(null)));
        sj.add("fmhp = "+Objects.toString(getFmhp().orElse(null)));
        sj.add("fmodemp = "+Objects.toString(getFmodemp().orElse(null)));
        sj.add("fmrgip = "+Objects.toString(getFmrgip().orElse(null)));
        sj.add("fmrgp = "+Objects.toString(getFmrgp().orElse(null)));
        sj.add("fmrgtp = "+Objects.toString(getFmrgtp().orElse(null)));
        sj.add("fmrgxp = "+Objects.toString(getFmrgxp().orElse(null)));
        sj.add("fmvp = "+Objects.toString(getFmvp().orElse(null)));
        sj.add("fothsvcexp = "+Objects.toString(getFothsvcexp().orElse(null)));
        sj.add("fplmp = "+Objects.toString(getFplmp().orElse(null)));
        sj.add("frefrp = "+Objects.toString(getFrefrp().orElse(null)));
        sj.add("frmsp = "+Objects.toString(getFrmsp().orElse(null)));
        sj.add("frntmp = "+Objects.toString(getFrntmp().orElse(null)));
        sj.add("frntp = "+Objects.toString(getFrntp().orElse(null)));
        sj.add("frwatp = "+Objects.toString(getFrwatp().orElse(null)));
        sj.add("frwatprp = "+Objects.toString(getFrwatprp().orElse(null)));
        sj.add("fsatellitep = "+Objects.toString(getFsatellitep().orElse(null)));
        sj.add("fsinkp = "+Objects.toString(getFsinkp().orElse(null)));
        sj.add("fsmp = "+Objects.toString(getFsmp().orElse(null)));
        sj.add("fsmxhp = "+Objects.toString(getFsmxhp().orElse(null)));
        sj.add("fsmxsp = "+Objects.toString(getFsmxsp().orElse(null)));
        sj.add("fstovp = "+Objects.toString(getFstovp().orElse(null)));
        sj.add("ftaxp = "+Objects.toString(getFtaxp().orElse(null)));
        sj.add("ftelp = "+Objects.toString(getFtelp().orElse(null)));
        sj.add("ftenp = "+Objects.toString(getFtenp().orElse(null)));
        sj.add("ftoilp = "+Objects.toString(getFtoilp().orElse(null)));
        sj.add("fvacsp = "+Objects.toString(getFvacsp().orElse(null)));
        sj.add("fvalp = "+Objects.toString(getFvalp().orElse(null)));
        sj.add("fvehp = "+Objects.toString(getFvehp().orElse(null)));
        sj.add("fwatp = "+Objects.toString(getFwatp().orElse(null)));
        sj.add("fyblp = "+Objects.toString(getFyblp().orElse(null)));
        return "Ss13husaImpl "+sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Ss13husa)) { return false; }
        final Ss13husa thatSs13husa = (Ss13husa)that;
        if (!Objects.equals(this.getRt(), thatSs13husa.getRt())) {return false; }
        if (!Objects.equals(this.getSerialno(), thatSs13husa.getSerialno())) {return false; }
        if (!Objects.equals(this.getDivision(), thatSs13husa.getDivision())) {return false; }
        if (!Objects.equals(this.getPuma(), thatSs13husa.getPuma())) {return false; }
        if (!Objects.equals(this.getRegion(), thatSs13husa.getRegion())) {return false; }
        if (!Objects.equals(this.getSt(), thatSs13husa.getSt())) {return false; }
        if (!Objects.equals(this.getAdjhsg(), thatSs13husa.getAdjhsg())) {return false; }
        if (!Objects.equals(this.getAdjinc(), thatSs13husa.getAdjinc())) {return false; }
        if (!Objects.equals(this.getWgtp(), thatSs13husa.getWgtp())) {return false; }
        if (!Objects.equals(this.getNp(), thatSs13husa.getNp())) {return false; }
        if (!Objects.equals(this.getType(), thatSs13husa.getType())) {return false; }
        if (!Objects.equals(this.getAccess(), thatSs13husa.getAccess())) {return false; }
        if (!Objects.equals(this.getAcr(), thatSs13husa.getAcr())) {return false; }
        if (!Objects.equals(this.getAgs(), thatSs13husa.getAgs())) {return false; }
        if (!Objects.equals(this.getBath(), thatSs13husa.getBath())) {return false; }
        if (!Objects.equals(this.getBdsp(), thatSs13husa.getBdsp())) {return false; }
        if (!Objects.equals(this.getBld(), thatSs13husa.getBld())) {return false; }
        if (!Objects.equals(this.getBroadbnd(), thatSs13husa.getBroadbnd())) {return false; }
        if (!Objects.equals(this.getBus(), thatSs13husa.getBus())) {return false; }
        if (!Objects.equals(this.getCompothx(), thatSs13husa.getCompothx())) {return false; }
        if (!Objects.equals(this.getConp(), thatSs13husa.getConp())) {return false; }
        if (!Objects.equals(this.getDialup(), thatSs13husa.getDialup())) {return false; }
        if (!Objects.equals(this.getDsl(), thatSs13husa.getDsl())) {return false; }
        if (!Objects.equals(this.getElep(), thatSs13husa.getElep())) {return false; }
        if (!Objects.equals(this.getFiberop(), thatSs13husa.getFiberop())) {return false; }
        if (!Objects.equals(this.getFs(), thatSs13husa.getFs())) {return false; }
        if (!Objects.equals(this.getFulp(), thatSs13husa.getFulp())) {return false; }
        if (!Objects.equals(this.getGasp(), thatSs13husa.getGasp())) {return false; }
        if (!Objects.equals(this.getHandheld(), thatSs13husa.getHandheld())) {return false; }
        if (!Objects.equals(this.getHfl(), thatSs13husa.getHfl())) {return false; }
        if (!Objects.equals(this.getInsp(), thatSs13husa.getInsp())) {return false; }
        if (!Objects.equals(this.getLaptop(), thatSs13husa.getLaptop())) {return false; }
        if (!Objects.equals(this.getMhp(), thatSs13husa.getMhp())) {return false; }
        if (!Objects.equals(this.getModem(), thatSs13husa.getModem())) {return false; }
        if (!Objects.equals(this.getMrgi(), thatSs13husa.getMrgi())) {return false; }
        if (!Objects.equals(this.getMrgp(), thatSs13husa.getMrgp())) {return false; }
        if (!Objects.equals(this.getMrgt(), thatSs13husa.getMrgt())) {return false; }
        if (!Objects.equals(this.getMrgx(), thatSs13husa.getMrgx())) {return false; }
        if (!Objects.equals(this.getOthsvcex(), thatSs13husa.getOthsvcex())) {return false; }
        if (!Objects.equals(this.getRefr(), thatSs13husa.getRefr())) {return false; }
        if (!Objects.equals(this.getRmsp(), thatSs13husa.getRmsp())) {return false; }
        if (!Objects.equals(this.getRntm(), thatSs13husa.getRntm())) {return false; }
        if (!Objects.equals(this.getRntp(), thatSs13husa.getRntp())) {return false; }
        if (!Objects.equals(this.getRwat(), thatSs13husa.getRwat())) {return false; }
        if (!Objects.equals(this.getRwatpr(), thatSs13husa.getRwatpr())) {return false; }
        if (!Objects.equals(this.getSatellite(), thatSs13husa.getSatellite())) {return false; }
        if (!Objects.equals(this.getSink(), thatSs13husa.getSink())) {return false; }
        if (!Objects.equals(this.getSmp(), thatSs13husa.getSmp())) {return false; }
        if (!Objects.equals(this.getStov(), thatSs13husa.getStov())) {return false; }
        if (!Objects.equals(this.getTel(), thatSs13husa.getTel())) {return false; }
        if (!Objects.equals(this.getTen(), thatSs13husa.getTen())) {return false; }
        if (!Objects.equals(this.getToil(), thatSs13husa.getToil())) {return false; }
        if (!Objects.equals(this.getVacs(), thatSs13husa.getVacs())) {return false; }
        if (!Objects.equals(this.getValp(), thatSs13husa.getValp())) {return false; }
        if (!Objects.equals(this.getVeh(), thatSs13husa.getVeh())) {return false; }
        if (!Objects.equals(this.getWatp(), thatSs13husa.getWatp())) {return false; }
        if (!Objects.equals(this.getYbl(), thatSs13husa.getYbl())) {return false; }
        if (!Objects.equals(this.getFes(), thatSs13husa.getFes())) {return false; }
        if (!Objects.equals(this.getFfincp(), thatSs13husa.getFfincp())) {return false; }
        if (!Objects.equals(this.getFgrntp(), thatSs13husa.getFgrntp())) {return false; }
        if (!Objects.equals(this.getFhincp(), thatSs13husa.getFhincp())) {return false; }
        if (!Objects.equals(this.getFincp(), thatSs13husa.getFincp())) {return false; }
        if (!Objects.equals(this.getFparc(), thatSs13husa.getFparc())) {return false; }
        if (!Objects.equals(this.getFsmocp(), thatSs13husa.getFsmocp())) {return false; }
        if (!Objects.equals(this.getGrntp(), thatSs13husa.getGrntp())) {return false; }
        if (!Objects.equals(this.getGrpip(), thatSs13husa.getGrpip())) {return false; }
        if (!Objects.equals(this.getHhl(), thatSs13husa.getHhl())) {return false; }
        if (!Objects.equals(this.getHht(), thatSs13husa.getHht())) {return false; }
        if (!Objects.equals(this.getHincp(), thatSs13husa.getHincp())) {return false; }
        if (!Objects.equals(this.getHugcl(), thatSs13husa.getHugcl())) {return false; }
        if (!Objects.equals(this.getHupac(), thatSs13husa.getHupac())) {return false; }
        if (!Objects.equals(this.getHupaoc(), thatSs13husa.getHupaoc())) {return false; }
        if (!Objects.equals(this.getHuparc(), thatSs13husa.getHuparc())) {return false; }
        if (!Objects.equals(this.getKit(), thatSs13husa.getKit())) {return false; }
        if (!Objects.equals(this.getLngi(), thatSs13husa.getLngi())) {return false; }
        if (!Objects.equals(this.getMultg(), thatSs13husa.getMultg())) {return false; }
        if (!Objects.equals(this.getMv(), thatSs13husa.getMv())) {return false; }
        if (!Objects.equals(this.getNoc(), thatSs13husa.getNoc())) {return false; }
        if (!Objects.equals(this.getNpf(), thatSs13husa.getNpf())) {return false; }
        if (!Objects.equals(this.getNpp(), thatSs13husa.getNpp())) {return false; }
        if (!Objects.equals(this.getNr(), thatSs13husa.getNr())) {return false; }
        if (!Objects.equals(this.getNrc(), thatSs13husa.getNrc())) {return false; }
        if (!Objects.equals(this.getOcpip(), thatSs13husa.getOcpip())) {return false; }
        if (!Objects.equals(this.getPartner(), thatSs13husa.getPartner())) {return false; }
        if (!Objects.equals(this.getPlm(), thatSs13husa.getPlm())) {return false; }
        if (!Objects.equals(this.getPsf(), thatSs13husa.getPsf())) {return false; }
        if (!Objects.equals(this.getR18(), thatSs13husa.getR18())) {return false; }
        if (!Objects.equals(this.getR60(), thatSs13husa.getR60())) {return false; }
        if (!Objects.equals(this.getR65(), thatSs13husa.getR65())) {return false; }
        if (!Objects.equals(this.getResmode(), thatSs13husa.getResmode())) {return false; }
        if (!Objects.equals(this.getSmocp(), thatSs13husa.getSmocp())) {return false; }
        if (!Objects.equals(this.getSmx(), thatSs13husa.getSmx())) {return false; }
        if (!Objects.equals(this.getSrnt(), thatSs13husa.getSrnt())) {return false; }
        if (!Objects.equals(this.getSsmc(), thatSs13husa.getSsmc())) {return false; }
        if (!Objects.equals(this.getSval(), thatSs13husa.getSval())) {return false; }
        if (!Objects.equals(this.getTaxp(), thatSs13husa.getTaxp())) {return false; }
        if (!Objects.equals(this.getWif(), thatSs13husa.getWif())) {return false; }
        if (!Objects.equals(this.getWkexrel(), thatSs13husa.getWkexrel())) {return false; }
        if (!Objects.equals(this.getWorkstat(), thatSs13husa.getWorkstat())) {return false; }
        if (!Objects.equals(this.getFaccessp(), thatSs13husa.getFaccessp())) {return false; }
        if (!Objects.equals(this.getFacrp(), thatSs13husa.getFacrp())) {return false; }
        if (!Objects.equals(this.getFagsp(), thatSs13husa.getFagsp())) {return false; }
        if (!Objects.equals(this.getFbathp(), thatSs13husa.getFbathp())) {return false; }
        if (!Objects.equals(this.getFbdsp(), thatSs13husa.getFbdsp())) {return false; }
        if (!Objects.equals(this.getFbldp(), thatSs13husa.getFbldp())) {return false; }
        if (!Objects.equals(this.getFbroadbndp(), thatSs13husa.getFbroadbndp())) {return false; }
        if (!Objects.equals(this.getFbusp(), thatSs13husa.getFbusp())) {return false; }
        if (!Objects.equals(this.getFcompothxp(), thatSs13husa.getFcompothxp())) {return false; }
        if (!Objects.equals(this.getFconp(), thatSs13husa.getFconp())) {return false; }
        if (!Objects.equals(this.getFdialupp(), thatSs13husa.getFdialupp())) {return false; }
        if (!Objects.equals(this.getFdslp(), thatSs13husa.getFdslp())) {return false; }
        if (!Objects.equals(this.getFelep(), thatSs13husa.getFelep())) {return false; }
        if (!Objects.equals(this.getFfiberopp(), thatSs13husa.getFfiberopp())) {return false; }
        if (!Objects.equals(this.getFfsp(), thatSs13husa.getFfsp())) {return false; }
        if (!Objects.equals(this.getFfulp(), thatSs13husa.getFfulp())) {return false; }
        if (!Objects.equals(this.getFgasp(), thatSs13husa.getFgasp())) {return false; }
        if (!Objects.equals(this.getFhandheldp(), thatSs13husa.getFhandheldp())) {return false; }
        if (!Objects.equals(this.getFhflp(), thatSs13husa.getFhflp())) {return false; }
        if (!Objects.equals(this.getFinsp(), thatSs13husa.getFinsp())) {return false; }
        if (!Objects.equals(this.getFkitp(), thatSs13husa.getFkitp())) {return false; }
        if (!Objects.equals(this.getFlaptopp(), thatSs13husa.getFlaptopp())) {return false; }
        if (!Objects.equals(this.getFmhp(), thatSs13husa.getFmhp())) {return false; }
        if (!Objects.equals(this.getFmodemp(), thatSs13husa.getFmodemp())) {return false; }
        if (!Objects.equals(this.getFmrgip(), thatSs13husa.getFmrgip())) {return false; }
        if (!Objects.equals(this.getFmrgp(), thatSs13husa.getFmrgp())) {return false; }
        if (!Objects.equals(this.getFmrgtp(), thatSs13husa.getFmrgtp())) {return false; }
        if (!Objects.equals(this.getFmrgxp(), thatSs13husa.getFmrgxp())) {return false; }
        if (!Objects.equals(this.getFmvp(), thatSs13husa.getFmvp())) {return false; }
        if (!Objects.equals(this.getFothsvcexp(), thatSs13husa.getFothsvcexp())) {return false; }
        if (!Objects.equals(this.getFplmp(), thatSs13husa.getFplmp())) {return false; }
        if (!Objects.equals(this.getFrefrp(), thatSs13husa.getFrefrp())) {return false; }
        if (!Objects.equals(this.getFrmsp(), thatSs13husa.getFrmsp())) {return false; }
        if (!Objects.equals(this.getFrntmp(), thatSs13husa.getFrntmp())) {return false; }
        if (!Objects.equals(this.getFrntp(), thatSs13husa.getFrntp())) {return false; }
        if (!Objects.equals(this.getFrwatp(), thatSs13husa.getFrwatp())) {return false; }
        if (!Objects.equals(this.getFrwatprp(), thatSs13husa.getFrwatprp())) {return false; }
        if (!Objects.equals(this.getFsatellitep(), thatSs13husa.getFsatellitep())) {return false; }
        if (!Objects.equals(this.getFsinkp(), thatSs13husa.getFsinkp())) {return false; }
        if (!Objects.equals(this.getFsmp(), thatSs13husa.getFsmp())) {return false; }
        if (!Objects.equals(this.getFsmxhp(), thatSs13husa.getFsmxhp())) {return false; }
        if (!Objects.equals(this.getFsmxsp(), thatSs13husa.getFsmxsp())) {return false; }
        if (!Objects.equals(this.getFstovp(), thatSs13husa.getFstovp())) {return false; }
        if (!Objects.equals(this.getFtaxp(), thatSs13husa.getFtaxp())) {return false; }
        if (!Objects.equals(this.getFtelp(), thatSs13husa.getFtelp())) {return false; }
        if (!Objects.equals(this.getFtenp(), thatSs13husa.getFtenp())) {return false; }
        if (!Objects.equals(this.getFtoilp(), thatSs13husa.getFtoilp())) {return false; }
        if (!Objects.equals(this.getFvacsp(), thatSs13husa.getFvacsp())) {return false; }
        if (!Objects.equals(this.getFvalp(), thatSs13husa.getFvalp())) {return false; }
        if (!Objects.equals(this.getFvehp(), thatSs13husa.getFvehp())) {return false; }
        if (!Objects.equals(this.getFwatp(), thatSs13husa.getFwatp())) {return false; }
        if (!Objects.equals(this.getFyblp(), thatSs13husa.getFyblp())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(getRt());
        hash = 31 * hash + Objects.hashCode(getSerialno());
        hash = 31 * hash + Objects.hashCode(getDivision());
        hash = 31 * hash + Objects.hashCode(getPuma());
        hash = 31 * hash + Objects.hashCode(getRegion());
        hash = 31 * hash + Objects.hashCode(getSt());
        hash = 31 * hash + Objects.hashCode(getAdjhsg());
        hash = 31 * hash + Objects.hashCode(getAdjinc());
        hash = 31 * hash + Objects.hashCode(getWgtp());
        hash = 31 * hash + Objects.hashCode(getNp());
        hash = 31 * hash + Objects.hashCode(getType());
        hash = 31 * hash + Objects.hashCode(getAccess());
        hash = 31 * hash + Objects.hashCode(getAcr());
        hash = 31 * hash + Objects.hashCode(getAgs());
        hash = 31 * hash + Objects.hashCode(getBath());
        hash = 31 * hash + Objects.hashCode(getBdsp());
        hash = 31 * hash + Objects.hashCode(getBld());
        hash = 31 * hash + Objects.hashCode(getBroadbnd());
        hash = 31 * hash + Objects.hashCode(getBus());
        hash = 31 * hash + Objects.hashCode(getCompothx());
        hash = 31 * hash + Objects.hashCode(getConp());
        hash = 31 * hash + Objects.hashCode(getDialup());
        hash = 31 * hash + Objects.hashCode(getDsl());
        hash = 31 * hash + Objects.hashCode(getElep());
        hash = 31 * hash + Objects.hashCode(getFiberop());
        hash = 31 * hash + Objects.hashCode(getFs());
        hash = 31 * hash + Objects.hashCode(getFulp());
        hash = 31 * hash + Objects.hashCode(getGasp());
        hash = 31 * hash + Objects.hashCode(getHandheld());
        hash = 31 * hash + Objects.hashCode(getHfl());
        hash = 31 * hash + Objects.hashCode(getInsp());
        hash = 31 * hash + Objects.hashCode(getLaptop());
        hash = 31 * hash + Objects.hashCode(getMhp());
        hash = 31 * hash + Objects.hashCode(getModem());
        hash = 31 * hash + Objects.hashCode(getMrgi());
        hash = 31 * hash + Objects.hashCode(getMrgp());
        hash = 31 * hash + Objects.hashCode(getMrgt());
        hash = 31 * hash + Objects.hashCode(getMrgx());
        hash = 31 * hash + Objects.hashCode(getOthsvcex());
        hash = 31 * hash + Objects.hashCode(getRefr());
        hash = 31 * hash + Objects.hashCode(getRmsp());
        hash = 31 * hash + Objects.hashCode(getRntm());
        hash = 31 * hash + Objects.hashCode(getRntp());
        hash = 31 * hash + Objects.hashCode(getRwat());
        hash = 31 * hash + Objects.hashCode(getRwatpr());
        hash = 31 * hash + Objects.hashCode(getSatellite());
        hash = 31 * hash + Objects.hashCode(getSink());
        hash = 31 * hash + Objects.hashCode(getSmp());
        hash = 31 * hash + Objects.hashCode(getStov());
        hash = 31 * hash + Objects.hashCode(getTel());
        hash = 31 * hash + Objects.hashCode(getTen());
        hash = 31 * hash + Objects.hashCode(getToil());
        hash = 31 * hash + Objects.hashCode(getVacs());
        hash = 31 * hash + Objects.hashCode(getValp());
        hash = 31 * hash + Objects.hashCode(getVeh());
        hash = 31 * hash + Objects.hashCode(getWatp());
        hash = 31 * hash + Objects.hashCode(getYbl());
        hash = 31 * hash + Objects.hashCode(getFes());
        hash = 31 * hash + Objects.hashCode(getFfincp());
        hash = 31 * hash + Objects.hashCode(getFgrntp());
        hash = 31 * hash + Objects.hashCode(getFhincp());
        hash = 31 * hash + Objects.hashCode(getFincp());
        hash = 31 * hash + Objects.hashCode(getFparc());
        hash = 31 * hash + Objects.hashCode(getFsmocp());
        hash = 31 * hash + Objects.hashCode(getGrntp());
        hash = 31 * hash + Objects.hashCode(getGrpip());
        hash = 31 * hash + Objects.hashCode(getHhl());
        hash = 31 * hash + Objects.hashCode(getHht());
        hash = 31 * hash + Objects.hashCode(getHincp());
        hash = 31 * hash + Objects.hashCode(getHugcl());
        hash = 31 * hash + Objects.hashCode(getHupac());
        hash = 31 * hash + Objects.hashCode(getHupaoc());
        hash = 31 * hash + Objects.hashCode(getHuparc());
        hash = 31 * hash + Objects.hashCode(getKit());
        hash = 31 * hash + Objects.hashCode(getLngi());
        hash = 31 * hash + Objects.hashCode(getMultg());
        hash = 31 * hash + Objects.hashCode(getMv());
        hash = 31 * hash + Objects.hashCode(getNoc());
        hash = 31 * hash + Objects.hashCode(getNpf());
        hash = 31 * hash + Objects.hashCode(getNpp());
        hash = 31 * hash + Objects.hashCode(getNr());
        hash = 31 * hash + Objects.hashCode(getNrc());
        hash = 31 * hash + Objects.hashCode(getOcpip());
        hash = 31 * hash + Objects.hashCode(getPartner());
        hash = 31 * hash + Objects.hashCode(getPlm());
        hash = 31 * hash + Objects.hashCode(getPsf());
        hash = 31 * hash + Objects.hashCode(getR18());
        hash = 31 * hash + Objects.hashCode(getR60());
        hash = 31 * hash + Objects.hashCode(getR65());
        hash = 31 * hash + Objects.hashCode(getResmode());
        hash = 31 * hash + Objects.hashCode(getSmocp());
        hash = 31 * hash + Objects.hashCode(getSmx());
        hash = 31 * hash + Objects.hashCode(getSrnt());
        hash = 31 * hash + Objects.hashCode(getSsmc());
        hash = 31 * hash + Objects.hashCode(getSval());
        hash = 31 * hash + Objects.hashCode(getTaxp());
        hash = 31 * hash + Objects.hashCode(getWif());
        hash = 31 * hash + Objects.hashCode(getWkexrel());
        hash = 31 * hash + Objects.hashCode(getWorkstat());
        hash = 31 * hash + Objects.hashCode(getFaccessp());
        hash = 31 * hash + Objects.hashCode(getFacrp());
        hash = 31 * hash + Objects.hashCode(getFagsp());
        hash = 31 * hash + Objects.hashCode(getFbathp());
        hash = 31 * hash + Objects.hashCode(getFbdsp());
        hash = 31 * hash + Objects.hashCode(getFbldp());
        hash = 31 * hash + Objects.hashCode(getFbroadbndp());
        hash = 31 * hash + Objects.hashCode(getFbusp());
        hash = 31 * hash + Objects.hashCode(getFcompothxp());
        hash = 31 * hash + Objects.hashCode(getFconp());
        hash = 31 * hash + Objects.hashCode(getFdialupp());
        hash = 31 * hash + Objects.hashCode(getFdslp());
        hash = 31 * hash + Objects.hashCode(getFelep());
        hash = 31 * hash + Objects.hashCode(getFfiberopp());
        hash = 31 * hash + Objects.hashCode(getFfsp());
        hash = 31 * hash + Objects.hashCode(getFfulp());
        hash = 31 * hash + Objects.hashCode(getFgasp());
        hash = 31 * hash + Objects.hashCode(getFhandheldp());
        hash = 31 * hash + Objects.hashCode(getFhflp());
        hash = 31 * hash + Objects.hashCode(getFinsp());
        hash = 31 * hash + Objects.hashCode(getFkitp());
        hash = 31 * hash + Objects.hashCode(getFlaptopp());
        hash = 31 * hash + Objects.hashCode(getFmhp());
        hash = 31 * hash + Objects.hashCode(getFmodemp());
        hash = 31 * hash + Objects.hashCode(getFmrgip());
        hash = 31 * hash + Objects.hashCode(getFmrgp());
        hash = 31 * hash + Objects.hashCode(getFmrgtp());
        hash = 31 * hash + Objects.hashCode(getFmrgxp());
        hash = 31 * hash + Objects.hashCode(getFmvp());
        hash = 31 * hash + Objects.hashCode(getFothsvcexp());
        hash = 31 * hash + Objects.hashCode(getFplmp());
        hash = 31 * hash + Objects.hashCode(getFrefrp());
        hash = 31 * hash + Objects.hashCode(getFrmsp());
        hash = 31 * hash + Objects.hashCode(getFrntmp());
        hash = 31 * hash + Objects.hashCode(getFrntp());
        hash = 31 * hash + Objects.hashCode(getFrwatp());
        hash = 31 * hash + Objects.hashCode(getFrwatprp());
        hash = 31 * hash + Objects.hashCode(getFsatellitep());
        hash = 31 * hash + Objects.hashCode(getFsinkp());
        hash = 31 * hash + Objects.hashCode(getFsmp());
        hash = 31 * hash + Objects.hashCode(getFsmxhp());
        hash = 31 * hash + Objects.hashCode(getFsmxsp());
        hash = 31 * hash + Objects.hashCode(getFstovp());
        hash = 31 * hash + Objects.hashCode(getFtaxp());
        hash = 31 * hash + Objects.hashCode(getFtelp());
        hash = 31 * hash + Objects.hashCode(getFtenp());
        hash = 31 * hash + Objects.hashCode(getFtoilp());
        hash = 31 * hash + Objects.hashCode(getFvacsp());
        hash = 31 * hash + Objects.hashCode(getFvalp());
        hash = 31 * hash + Objects.hashCode(getFvehp());
        hash = 31 * hash + Objects.hashCode(getFwatp());
        hash = 31 * hash + Objects.hashCode(getFyblp());
        return hash;
    }
    
    @Override
    public Class<Ss13husa> entityClass() {
        return Ss13husa.class;
    }
}