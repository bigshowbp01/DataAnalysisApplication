package com.company.test.test.test.ss13husa.generated;

import com.company.test.test.test.ss13husa.Ss13husa;
import com.company.test.test.test.ss13husa.Ss13husaManager;
import com.speedment.component.ProjectComponent;
import com.speedment.config.db.Table;
import com.speedment.enterprise.offheapreadonlycache.manager.HasSerializer;
import com.speedment.internal.core.manager.sql.SqlManager;
import com.speedment.util.tuple.Tuple0;
import java.util.Arrays;
import java.util.List;
import javax.annotation.Generated;
import org.mapdb.Serializer;

/**
 * The generated base manager representing an entity (for example, a row) in
 * the Table test.test.test.ss13husa.
 * <p>
 * This file has been automatically generated by Ext Speeder. Any changes
 * made to it will be overwritten.
 * 
 * @author Ext Speeder
 */
@Generated("Ext Speeder")
public interface GeneratedSs13husaManager extends HasSerializer<Ss13husa>, SqlManager<Ss13husa> {
    
    @Override
    default Serializer<Ss13husa> newSerializer() {
        return new GeneratedSs13husaSerializerImpl(this);
    }
    
    @Override
    default List<?> primaryKeyFor(Ss13husa entity) {
        return Arrays.asList();
    }
    
    @Override
    default Table getTable() {
        return speedment().get(ProjectComponent.class).getProject().findTableByName("test.test.ss13husa");
    }
    
    @Override
    default Class<Ss13husaManager> getManagerClass() {
        return Ss13husaManager.class;
    }
    
    @Override
    default Class<Ss13husa> getEntityClass() {
        return Ss13husa.class;
    }
    
    @Override
    Tuple0 getPrimaryKeyClasses();
}