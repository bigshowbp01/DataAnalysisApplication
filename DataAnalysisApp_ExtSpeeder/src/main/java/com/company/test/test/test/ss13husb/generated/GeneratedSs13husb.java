package com.company.test.test.test.ss13husb.generated;

import com.company.test.test.test.ss13husb.Ss13husb;
import com.speedment.Entity;
import com.speedment.config.db.mapper.identity.IntegerIdentityMapper;
import com.speedment.field.ComparableField;
import com.speedment.field.FieldIdentifier;
import com.speedment.internal.core.field.ComparableFieldImpl;
import java.util.Optional;
import javax.annotation.Generated;

/**
 * The generated base interface representing an entity (for example, a row)
 * in the Table test.test.test.ss13husb.
 * <p>
 * This file has been automatically generated by Ext Speeder. Any changes
 * made to it will be overwritten.
 * 
 * @author Ext Speeder
 */
@Generated("Ext Speeder")
public interface GeneratedSs13husb extends Entity<Ss13husb> {
    
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getRt()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> RT = new ComparableFieldImpl<>(Identifier.RT, o -> o.getRt().orElse(null), Ss13husb::setRt, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getSerialno()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> SERIALNO = new ComparableFieldImpl<>(Identifier.SERIALNO, o -> o.getSerialno().orElse(null), Ss13husb::setSerialno, new IntegerIdentityMapper(), true);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getDivision()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> DIVISION = new ComparableFieldImpl<>(Identifier.DIVISION, o -> o.getDivision().orElse(null), Ss13husb::setDivision, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getPuma()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> PUMA = new ComparableFieldImpl<>(Identifier.PUMA, o -> o.getPuma().orElse(null), Ss13husb::setPuma, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getRegion()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> REGION = new ComparableFieldImpl<>(Identifier.REGION, o -> o.getRegion().orElse(null), Ss13husb::setRegion, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getSt()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> ST = new ComparableFieldImpl<>(Identifier.ST, o -> o.getSt().orElse(null), Ss13husb::setSt, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getAdjhsg()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> ADJHSG = new ComparableFieldImpl<>(Identifier.ADJHSG, o -> o.getAdjhsg().orElse(null), Ss13husb::setAdjhsg, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getAdjinc()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> ADJINC = new ComparableFieldImpl<>(Identifier.ADJINC, o -> o.getAdjinc().orElse(null), Ss13husb::setAdjinc, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getWgtp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> WGTP = new ComparableFieldImpl<>(Identifier.WGTP, o -> o.getWgtp().orElse(null), Ss13husb::setWgtp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getNp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> NP = new ComparableFieldImpl<>(Identifier.NP, o -> o.getNp().orElse(null), Ss13husb::setNp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getType()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> TYPE = new ComparableFieldImpl<>(Identifier.TYPE, o -> o.getType().orElse(null), Ss13husb::setType, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getAccess()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> ACCESS = new ComparableFieldImpl<>(Identifier.ACCESS, o -> o.getAccess().orElse(null), Ss13husb::setAccess, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getAcr()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> ACR = new ComparableFieldImpl<>(Identifier.ACR, o -> o.getAcr().orElse(null), Ss13husb::setAcr, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getAgs()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> AGS = new ComparableFieldImpl<>(Identifier.AGS, o -> o.getAgs().orElse(null), Ss13husb::setAgs, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getBath()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> BATH = new ComparableFieldImpl<>(Identifier.BATH, o -> o.getBath().orElse(null), Ss13husb::setBath, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getBdsp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> BDSP = new ComparableFieldImpl<>(Identifier.BDSP, o -> o.getBdsp().orElse(null), Ss13husb::setBdsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getBld()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> BLD = new ComparableFieldImpl<>(Identifier.BLD, o -> o.getBld().orElse(null), Ss13husb::setBld, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getBroadbnd()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> BROADBND = new ComparableFieldImpl<>(Identifier.BROADBND, o -> o.getBroadbnd().orElse(null), Ss13husb::setBroadbnd, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getBus()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> BUS = new ComparableFieldImpl<>(Identifier.BUS, o -> o.getBus().orElse(null), Ss13husb::setBus, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getCompothx()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> COMPOTHX = new ComparableFieldImpl<>(Identifier.COMPOTHX, o -> o.getCompothx().orElse(null), Ss13husb::setCompothx, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getConp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> CONP = new ComparableFieldImpl<>(Identifier.CONP, o -> o.getConp().orElse(null), Ss13husb::setConp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getDialup()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> DIALUP = new ComparableFieldImpl<>(Identifier.DIALUP, o -> o.getDialup().orElse(null), Ss13husb::setDialup, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getDsl()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> DSL = new ComparableFieldImpl<>(Identifier.DSL, o -> o.getDsl().orElse(null), Ss13husb::setDsl, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getElep()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> ELEP = new ComparableFieldImpl<>(Identifier.ELEP, o -> o.getElep().orElse(null), Ss13husb::setElep, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFiberop()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FIBEROP = new ComparableFieldImpl<>(Identifier.FIBEROP, o -> o.getFiberop().orElse(null), Ss13husb::setFiberop, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFs()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FS = new ComparableFieldImpl<>(Identifier.FS, o -> o.getFs().orElse(null), Ss13husb::setFs, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFulp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FULP = new ComparableFieldImpl<>(Identifier.FULP, o -> o.getFulp().orElse(null), Ss13husb::setFulp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getGasp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> GASP = new ComparableFieldImpl<>(Identifier.GASP, o -> o.getGasp().orElse(null), Ss13husb::setGasp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getHandheld()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> HANDHELD = new ComparableFieldImpl<>(Identifier.HANDHELD, o -> o.getHandheld().orElse(null), Ss13husb::setHandheld, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getHfl()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> HFL = new ComparableFieldImpl<>(Identifier.HFL, o -> o.getHfl().orElse(null), Ss13husb::setHfl, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getInsp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> INSP = new ComparableFieldImpl<>(Identifier.INSP, o -> o.getInsp().orElse(null), Ss13husb::setInsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getLaptop()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> LAPTOP = new ComparableFieldImpl<>(Identifier.LAPTOP, o -> o.getLaptop().orElse(null), Ss13husb::setLaptop, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getMhp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> MHP = new ComparableFieldImpl<>(Identifier.MHP, o -> o.getMhp().orElse(null), Ss13husb::setMhp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getModem()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> MODEM = new ComparableFieldImpl<>(Identifier.MODEM, o -> o.getModem().orElse(null), Ss13husb::setModem, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getMrgi()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> MRGI = new ComparableFieldImpl<>(Identifier.MRGI, o -> o.getMrgi().orElse(null), Ss13husb::setMrgi, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getMrgp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> MRGP = new ComparableFieldImpl<>(Identifier.MRGP, o -> o.getMrgp().orElse(null), Ss13husb::setMrgp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getMrgt()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> MRGT = new ComparableFieldImpl<>(Identifier.MRGT, o -> o.getMrgt().orElse(null), Ss13husb::setMrgt, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getMrgx()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> MRGX = new ComparableFieldImpl<>(Identifier.MRGX, o -> o.getMrgx().orElse(null), Ss13husb::setMrgx, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getOthsvcex()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> OTHSVCEX = new ComparableFieldImpl<>(Identifier.OTHSVCEX, o -> o.getOthsvcex().orElse(null), Ss13husb::setOthsvcex, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getRefr()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> REFR = new ComparableFieldImpl<>(Identifier.REFR, o -> o.getRefr().orElse(null), Ss13husb::setRefr, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getRmsp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> RMSP = new ComparableFieldImpl<>(Identifier.RMSP, o -> o.getRmsp().orElse(null), Ss13husb::setRmsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getRntm()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> RNTM = new ComparableFieldImpl<>(Identifier.RNTM, o -> o.getRntm().orElse(null), Ss13husb::setRntm, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getRntp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> RNTP = new ComparableFieldImpl<>(Identifier.RNTP, o -> o.getRntp().orElse(null), Ss13husb::setRntp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getRwat()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> RWAT = new ComparableFieldImpl<>(Identifier.RWAT, o -> o.getRwat().orElse(null), Ss13husb::setRwat, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getRwatpr()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> RWATPR = new ComparableFieldImpl<>(Identifier.RWATPR, o -> o.getRwatpr().orElse(null), Ss13husb::setRwatpr, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getSatellite()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> SATELLITE = new ComparableFieldImpl<>(Identifier.SATELLITE, o -> o.getSatellite().orElse(null), Ss13husb::setSatellite, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getSink()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> SINK = new ComparableFieldImpl<>(Identifier.SINK, o -> o.getSink().orElse(null), Ss13husb::setSink, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getSmp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> SMP = new ComparableFieldImpl<>(Identifier.SMP, o -> o.getSmp().orElse(null), Ss13husb::setSmp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getStov()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> STOV = new ComparableFieldImpl<>(Identifier.STOV, o -> o.getStov().orElse(null), Ss13husb::setStov, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getTel()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> TEL = new ComparableFieldImpl<>(Identifier.TEL, o -> o.getTel().orElse(null), Ss13husb::setTel, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getTen()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> TEN = new ComparableFieldImpl<>(Identifier.TEN, o -> o.getTen().orElse(null), Ss13husb::setTen, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getToil()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> TOIL = new ComparableFieldImpl<>(Identifier.TOIL, o -> o.getToil().orElse(null), Ss13husb::setToil, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getVacs()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> VACS = new ComparableFieldImpl<>(Identifier.VACS, o -> o.getVacs().orElse(null), Ss13husb::setVacs, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getValp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> VALP = new ComparableFieldImpl<>(Identifier.VALP, o -> o.getValp().orElse(null), Ss13husb::setValp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getVeh()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> VEH = new ComparableFieldImpl<>(Identifier.VEH, o -> o.getVeh().orElse(null), Ss13husb::setVeh, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getWatp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> WATP = new ComparableFieldImpl<>(Identifier.WATP, o -> o.getWatp().orElse(null), Ss13husb::setWatp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getYbl()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> YBL = new ComparableFieldImpl<>(Identifier.YBL, o -> o.getYbl().orElse(null), Ss13husb::setYbl, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFes()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FES = new ComparableFieldImpl<>(Identifier.FES, o -> o.getFes().orElse(null), Ss13husb::setFes, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFfincp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FFINCP = new ComparableFieldImpl<>(Identifier.FFINCP, o -> o.getFfincp().orElse(null), Ss13husb::setFfincp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFgrntp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FGRNTP = new ComparableFieldImpl<>(Identifier.FGRNTP, o -> o.getFgrntp().orElse(null), Ss13husb::setFgrntp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFhincp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FHINCP = new ComparableFieldImpl<>(Identifier.FHINCP, o -> o.getFhincp().orElse(null), Ss13husb::setFhincp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFincp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FINCP = new ComparableFieldImpl<>(Identifier.FINCP, o -> o.getFincp().orElse(null), Ss13husb::setFincp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFparc()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FPARC = new ComparableFieldImpl<>(Identifier.FPARC, o -> o.getFparc().orElse(null), Ss13husb::setFparc, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFsmocp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FSMOCP = new ComparableFieldImpl<>(Identifier.FSMOCP, o -> o.getFsmocp().orElse(null), Ss13husb::setFsmocp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getGrntp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> GRNTP = new ComparableFieldImpl<>(Identifier.GRNTP, o -> o.getGrntp().orElse(null), Ss13husb::setGrntp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getGrpip()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> GRPIP = new ComparableFieldImpl<>(Identifier.GRPIP, o -> o.getGrpip().orElse(null), Ss13husb::setGrpip, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getHhl()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> HHL = new ComparableFieldImpl<>(Identifier.HHL, o -> o.getHhl().orElse(null), Ss13husb::setHhl, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getHht()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> HHT = new ComparableFieldImpl<>(Identifier.HHT, o -> o.getHht().orElse(null), Ss13husb::setHht, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getHincp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> HINCP = new ComparableFieldImpl<>(Identifier.HINCP, o -> o.getHincp().orElse(null), Ss13husb::setHincp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getHugcl()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> HUGCL = new ComparableFieldImpl<>(Identifier.HUGCL, o -> o.getHugcl().orElse(null), Ss13husb::setHugcl, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getHupac()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> HUPAC = new ComparableFieldImpl<>(Identifier.HUPAC, o -> o.getHupac().orElse(null), Ss13husb::setHupac, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getHupaoc()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> HUPAOC = new ComparableFieldImpl<>(Identifier.HUPAOC, o -> o.getHupaoc().orElse(null), Ss13husb::setHupaoc, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getHuparc()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> HUPARC = new ComparableFieldImpl<>(Identifier.HUPARC, o -> o.getHuparc().orElse(null), Ss13husb::setHuparc, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getKit()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> KIT = new ComparableFieldImpl<>(Identifier.KIT, o -> o.getKit().orElse(null), Ss13husb::setKit, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getLngi()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> LNGI = new ComparableFieldImpl<>(Identifier.LNGI, o -> o.getLngi().orElse(null), Ss13husb::setLngi, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getMultg()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> MULTG = new ComparableFieldImpl<>(Identifier.MULTG, o -> o.getMultg().orElse(null), Ss13husb::setMultg, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getMv()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> MV = new ComparableFieldImpl<>(Identifier.MV, o -> o.getMv().orElse(null), Ss13husb::setMv, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getNoc()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> NOC = new ComparableFieldImpl<>(Identifier.NOC, o -> o.getNoc().orElse(null), Ss13husb::setNoc, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getNpf()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> NPF = new ComparableFieldImpl<>(Identifier.NPF, o -> o.getNpf().orElse(null), Ss13husb::setNpf, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getNpp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> NPP = new ComparableFieldImpl<>(Identifier.NPP, o -> o.getNpp().orElse(null), Ss13husb::setNpp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getNr()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> NR = new ComparableFieldImpl<>(Identifier.NR, o -> o.getNr().orElse(null), Ss13husb::setNr, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getNrc()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> NRC = new ComparableFieldImpl<>(Identifier.NRC, o -> o.getNrc().orElse(null), Ss13husb::setNrc, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getOcpip()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> OCPIP = new ComparableFieldImpl<>(Identifier.OCPIP, o -> o.getOcpip().orElse(null), Ss13husb::setOcpip, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getPartner()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> PARTNER = new ComparableFieldImpl<>(Identifier.PARTNER, o -> o.getPartner().orElse(null), Ss13husb::setPartner, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getPlm()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> PLM = new ComparableFieldImpl<>(Identifier.PLM, o -> o.getPlm().orElse(null), Ss13husb::setPlm, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getPsf()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> PSF = new ComparableFieldImpl<>(Identifier.PSF, o -> o.getPsf().orElse(null), Ss13husb::setPsf, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getR18()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> R18 = new ComparableFieldImpl<>(Identifier.R18, o -> o.getR18().orElse(null), Ss13husb::setR18, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getR60()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> R60 = new ComparableFieldImpl<>(Identifier.R60, o -> o.getR60().orElse(null), Ss13husb::setR60, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getR65()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> R65 = new ComparableFieldImpl<>(Identifier.R65, o -> o.getR65().orElse(null), Ss13husb::setR65, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getResmode()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> RESMODE = new ComparableFieldImpl<>(Identifier.RESMODE, o -> o.getResmode().orElse(null), Ss13husb::setResmode, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getSmocp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> SMOCP = new ComparableFieldImpl<>(Identifier.SMOCP, o -> o.getSmocp().orElse(null), Ss13husb::setSmocp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getSmx()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> SMX = new ComparableFieldImpl<>(Identifier.SMX, o -> o.getSmx().orElse(null), Ss13husb::setSmx, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getSrnt()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> SRNT = new ComparableFieldImpl<>(Identifier.SRNT, o -> o.getSrnt().orElse(null), Ss13husb::setSrnt, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getSsmc()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> SSMC = new ComparableFieldImpl<>(Identifier.SSMC, o -> o.getSsmc().orElse(null), Ss13husb::setSsmc, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getSval()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> SVAL = new ComparableFieldImpl<>(Identifier.SVAL, o -> o.getSval().orElse(null), Ss13husb::setSval, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getTaxp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> TAXP = new ComparableFieldImpl<>(Identifier.TAXP, o -> o.getTaxp().orElse(null), Ss13husb::setTaxp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getWif()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> WIF = new ComparableFieldImpl<>(Identifier.WIF, o -> o.getWif().orElse(null), Ss13husb::setWif, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getWkexrel()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> WKEXREL = new ComparableFieldImpl<>(Identifier.WKEXREL, o -> o.getWkexrel().orElse(null), Ss13husb::setWkexrel, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getWorkstat()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> WORKSTAT = new ComparableFieldImpl<>(Identifier.WORKSTAT, o -> o.getWorkstat().orElse(null), Ss13husb::setWorkstat, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFaccessp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FACCESSP = new ComparableFieldImpl<>(Identifier.FACCESSP, o -> o.getFaccessp().orElse(null), Ss13husb::setFaccessp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFacrp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FACRP = new ComparableFieldImpl<>(Identifier.FACRP, o -> o.getFacrp().orElse(null), Ss13husb::setFacrp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFagsp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FAGSP = new ComparableFieldImpl<>(Identifier.FAGSP, o -> o.getFagsp().orElse(null), Ss13husb::setFagsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFbathp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FBATHP = new ComparableFieldImpl<>(Identifier.FBATHP, o -> o.getFbathp().orElse(null), Ss13husb::setFbathp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFbdsp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FBDSP = new ComparableFieldImpl<>(Identifier.FBDSP, o -> o.getFbdsp().orElse(null), Ss13husb::setFbdsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFbldp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FBLDP = new ComparableFieldImpl<>(Identifier.FBLDP, o -> o.getFbldp().orElse(null), Ss13husb::setFbldp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFbroadbndp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FBROADBNDP = new ComparableFieldImpl<>(Identifier.FBROADBNDP, o -> o.getFbroadbndp().orElse(null), Ss13husb::setFbroadbndp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFbusp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FBUSP = new ComparableFieldImpl<>(Identifier.FBUSP, o -> o.getFbusp().orElse(null), Ss13husb::setFbusp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFcompothxp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FCOMPOTHXP = new ComparableFieldImpl<>(Identifier.FCOMPOTHXP, o -> o.getFcompothxp().orElse(null), Ss13husb::setFcompothxp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFconp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FCONP = new ComparableFieldImpl<>(Identifier.FCONP, o -> o.getFconp().orElse(null), Ss13husb::setFconp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFdialupp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FDIALUPP = new ComparableFieldImpl<>(Identifier.FDIALUPP, o -> o.getFdialupp().orElse(null), Ss13husb::setFdialupp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFdslp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FDSLP = new ComparableFieldImpl<>(Identifier.FDSLP, o -> o.getFdslp().orElse(null), Ss13husb::setFdslp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFelep()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FELEP = new ComparableFieldImpl<>(Identifier.FELEP, o -> o.getFelep().orElse(null), Ss13husb::setFelep, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFfiberopp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FFIBEROPP = new ComparableFieldImpl<>(Identifier.FFIBEROPP, o -> o.getFfiberopp().orElse(null), Ss13husb::setFfiberopp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFfsp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FFSP = new ComparableFieldImpl<>(Identifier.FFSP, o -> o.getFfsp().orElse(null), Ss13husb::setFfsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFfulp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FFULP = new ComparableFieldImpl<>(Identifier.FFULP, o -> o.getFfulp().orElse(null), Ss13husb::setFfulp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFgasp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FGASP = new ComparableFieldImpl<>(Identifier.FGASP, o -> o.getFgasp().orElse(null), Ss13husb::setFgasp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFhandheldp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FHANDHELDP = new ComparableFieldImpl<>(Identifier.FHANDHELDP, o -> o.getFhandheldp().orElse(null), Ss13husb::setFhandheldp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFhflp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FHFLP = new ComparableFieldImpl<>(Identifier.FHFLP, o -> o.getFhflp().orElse(null), Ss13husb::setFhflp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFinsp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FINSP = new ComparableFieldImpl<>(Identifier.FINSP, o -> o.getFinsp().orElse(null), Ss13husb::setFinsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFkitp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FKITP = new ComparableFieldImpl<>(Identifier.FKITP, o -> o.getFkitp().orElse(null), Ss13husb::setFkitp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFlaptopp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FLAPTOPP = new ComparableFieldImpl<>(Identifier.FLAPTOPP, o -> o.getFlaptopp().orElse(null), Ss13husb::setFlaptopp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFmhp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FMHP = new ComparableFieldImpl<>(Identifier.FMHP, o -> o.getFmhp().orElse(null), Ss13husb::setFmhp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFmodemp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FMODEMP = new ComparableFieldImpl<>(Identifier.FMODEMP, o -> o.getFmodemp().orElse(null), Ss13husb::setFmodemp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFmrgip()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FMRGIP = new ComparableFieldImpl<>(Identifier.FMRGIP, o -> o.getFmrgip().orElse(null), Ss13husb::setFmrgip, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFmrgp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FMRGP = new ComparableFieldImpl<>(Identifier.FMRGP, o -> o.getFmrgp().orElse(null), Ss13husb::setFmrgp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFmrgtp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FMRGTP = new ComparableFieldImpl<>(Identifier.FMRGTP, o -> o.getFmrgtp().orElse(null), Ss13husb::setFmrgtp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFmrgxp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FMRGXP = new ComparableFieldImpl<>(Identifier.FMRGXP, o -> o.getFmrgxp().orElse(null), Ss13husb::setFmrgxp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFmvp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FMVP = new ComparableFieldImpl<>(Identifier.FMVP, o -> o.getFmvp().orElse(null), Ss13husb::setFmvp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFothsvcexp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FOTHSVCEXP = new ComparableFieldImpl<>(Identifier.FOTHSVCEXP, o -> o.getFothsvcexp().orElse(null), Ss13husb::setFothsvcexp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFplmp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FPLMP = new ComparableFieldImpl<>(Identifier.FPLMP, o -> o.getFplmp().orElse(null), Ss13husb::setFplmp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFrefrp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FREFRP = new ComparableFieldImpl<>(Identifier.FREFRP, o -> o.getFrefrp().orElse(null), Ss13husb::setFrefrp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFrmsp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FRMSP = new ComparableFieldImpl<>(Identifier.FRMSP, o -> o.getFrmsp().orElse(null), Ss13husb::setFrmsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFrntmp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FRNTMP = new ComparableFieldImpl<>(Identifier.FRNTMP, o -> o.getFrntmp().orElse(null), Ss13husb::setFrntmp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFrntp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FRNTP = new ComparableFieldImpl<>(Identifier.FRNTP, o -> o.getFrntp().orElse(null), Ss13husb::setFrntp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFrwatp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FRWATP = new ComparableFieldImpl<>(Identifier.FRWATP, o -> o.getFrwatp().orElse(null), Ss13husb::setFrwatp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFrwatprp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FRWATPRP = new ComparableFieldImpl<>(Identifier.FRWATPRP, o -> o.getFrwatprp().orElse(null), Ss13husb::setFrwatprp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFsatellitep()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FSATELLITEP = new ComparableFieldImpl<>(Identifier.FSATELLITEP, o -> o.getFsatellitep().orElse(null), Ss13husb::setFsatellitep, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFsinkp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FSINKP = new ComparableFieldImpl<>(Identifier.FSINKP, o -> o.getFsinkp().orElse(null), Ss13husb::setFsinkp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFsmp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FSMP = new ComparableFieldImpl<>(Identifier.FSMP, o -> o.getFsmp().orElse(null), Ss13husb::setFsmp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFsmxhp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FSMXHP = new ComparableFieldImpl<>(Identifier.FSMXHP, o -> o.getFsmxhp().orElse(null), Ss13husb::setFsmxhp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFsmxsp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FSMXSP = new ComparableFieldImpl<>(Identifier.FSMXSP, o -> o.getFsmxsp().orElse(null), Ss13husb::setFsmxsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFstovp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FSTOVP = new ComparableFieldImpl<>(Identifier.FSTOVP, o -> o.getFstovp().orElse(null), Ss13husb::setFstovp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFtaxp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FTAXP = new ComparableFieldImpl<>(Identifier.FTAXP, o -> o.getFtaxp().orElse(null), Ss13husb::setFtaxp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFtelp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FTELP = new ComparableFieldImpl<>(Identifier.FTELP, o -> o.getFtelp().orElse(null), Ss13husb::setFtelp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFtenp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FTENP = new ComparableFieldImpl<>(Identifier.FTENP, o -> o.getFtenp().orElse(null), Ss13husb::setFtenp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFtoilp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FTOILP = new ComparableFieldImpl<>(Identifier.FTOILP, o -> o.getFtoilp().orElse(null), Ss13husb::setFtoilp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFvacsp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FVACSP = new ComparableFieldImpl<>(Identifier.FVACSP, o -> o.getFvacsp().orElse(null), Ss13husb::setFvacsp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFvalp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FVALP = new ComparableFieldImpl<>(Identifier.FVALP, o -> o.getFvalp().orElse(null), Ss13husb::setFvalp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFvehp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FVEHP = new ComparableFieldImpl<>(Identifier.FVEHP, o -> o.getFvehp().orElse(null), Ss13husb::setFvehp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFwatp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FWATP = new ComparableFieldImpl<>(Identifier.FWATP, o -> o.getFwatp().orElse(null), Ss13husb::setFwatp, new IntegerIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Ss13husb} field that can be obtained
     * using the {@link Ss13husb#getFyblp()} method.
     */
    final ComparableField<Ss13husb, Integer, Integer> FYBLP = new ComparableFieldImpl<>(Identifier.FYBLP, o -> o.getFyblp().orElse(null), Ss13husb::setFyblp, new IntegerIdentityMapper(), false);
    
    /**
     * Returns the rt of this Ss13husb. The rt field corresponds to the database
     * column test.test.ss13husb.RT.
     * 
     * @return the rt of this Ss13husb
     */
    Optional<Integer> getRt();
    
    /**
     * Returns the serialno of this Ss13husb. The serialno field corresponds to
     * the database column test.test.ss13husb.SERIALNO.
     * 
     * @return the serialno of this Ss13husb
     */
    Optional<Integer> getSerialno();
    
    /**
     * Returns the division of this Ss13husb. The division field corresponds to
     * the database column test.test.ss13husb.DIVISION.
     * 
     * @return the division of this Ss13husb
     */
    Optional<Integer> getDivision();
    
    /**
     * Returns the puma of this Ss13husb. The puma field corresponds to the
     * database column test.test.ss13husb.PUMA.
     * 
     * @return the puma of this Ss13husb
     */
    Optional<Integer> getPuma();
    
    /**
     * Returns the region of this Ss13husb. The region field corresponds to the
     * database column test.test.ss13husb.REGION.
     * 
     * @return the region of this Ss13husb
     */
    Optional<Integer> getRegion();
    
    /**
     * Returns the st of this Ss13husb. The st field corresponds to the database
     * column test.test.ss13husb.ST.
     * 
     * @return the st of this Ss13husb
     */
    Optional<Integer> getSt();
    
    /**
     * Returns the adjhsg of this Ss13husb. The adjhsg field corresponds to the
     * database column test.test.ss13husb.ADJHSG.
     * 
     * @return the adjhsg of this Ss13husb
     */
    Optional<Integer> getAdjhsg();
    
    /**
     * Returns the adjinc of this Ss13husb. The adjinc field corresponds to the
     * database column test.test.ss13husb.ADJINC.
     * 
     * @return the adjinc of this Ss13husb
     */
    Optional<Integer> getAdjinc();
    
    /**
     * Returns the wgtp of this Ss13husb. The wgtp field corresponds to the
     * database column test.test.ss13husb.WGTP.
     * 
     * @return the wgtp of this Ss13husb
     */
    Optional<Integer> getWgtp();
    
    /**
     * Returns the np of this Ss13husb. The np field corresponds to the database
     * column test.test.ss13husb.NP.
     * 
     * @return the np of this Ss13husb
     */
    Optional<Integer> getNp();
    
    /**
     * Returns the type of this Ss13husb. The type field corresponds to the
     * database column test.test.ss13husb.TYPE.
     * 
     * @return the type of this Ss13husb
     */
    Optional<Integer> getType();
    
    /**
     * Returns the access of this Ss13husb. The access field corresponds to the
     * database column test.test.ss13husb.ACCESS.
     * 
     * @return the access of this Ss13husb
     */
    Optional<Integer> getAccess();
    
    /**
     * Returns the acr of this Ss13husb. The acr field corresponds to the
     * database column test.test.ss13husb.ACR.
     * 
     * @return the acr of this Ss13husb
     */
    Optional<Integer> getAcr();
    
    /**
     * Returns the ags of this Ss13husb. The ags field corresponds to the
     * database column test.test.ss13husb.AGS.
     * 
     * @return the ags of this Ss13husb
     */
    Optional<Integer> getAgs();
    
    /**
     * Returns the bath of this Ss13husb. The bath field corresponds to the
     * database column test.test.ss13husb.BATH.
     * 
     * @return the bath of this Ss13husb
     */
    Optional<Integer> getBath();
    
    /**
     * Returns the bdsp of this Ss13husb. The bdsp field corresponds to the
     * database column test.test.ss13husb.BDSP.
     * 
     * @return the bdsp of this Ss13husb
     */
    Optional<Integer> getBdsp();
    
    /**
     * Returns the bld of this Ss13husb. The bld field corresponds to the
     * database column test.test.ss13husb.BLD.
     * 
     * @return the bld of this Ss13husb
     */
    Optional<Integer> getBld();
    
    /**
     * Returns the broadbnd of this Ss13husb. The broadbnd field corresponds to
     * the database column test.test.ss13husb.BROADBND.
     * 
     * @return the broadbnd of this Ss13husb
     */
    Optional<Integer> getBroadbnd();
    
    /**
     * Returns the bus of this Ss13husb. The bus field corresponds to the
     * database column test.test.ss13husb.BUS.
     * 
     * @return the bus of this Ss13husb
     */
    Optional<Integer> getBus();
    
    /**
     * Returns the compothx of this Ss13husb. The compothx field corresponds to
     * the database column test.test.ss13husb.COMPOTHX.
     * 
     * @return the compothx of this Ss13husb
     */
    Optional<Integer> getCompothx();
    
    /**
     * Returns the conp of this Ss13husb. The conp field corresponds to the
     * database column test.test.ss13husb.CONP.
     * 
     * @return the conp of this Ss13husb
     */
    Optional<Integer> getConp();
    
    /**
     * Returns the dialup of this Ss13husb. The dialup field corresponds to the
     * database column test.test.ss13husb.DIALUP.
     * 
     * @return the dialup of this Ss13husb
     */
    Optional<Integer> getDialup();
    
    /**
     * Returns the dsl of this Ss13husb. The dsl field corresponds to the
     * database column test.test.ss13husb.DSL.
     * 
     * @return the dsl of this Ss13husb
     */
    Optional<Integer> getDsl();
    
    /**
     * Returns the elep of this Ss13husb. The elep field corresponds to the
     * database column test.test.ss13husb.ELEP.
     * 
     * @return the elep of this Ss13husb
     */
    Optional<Integer> getElep();
    
    /**
     * Returns the fiberop of this Ss13husb. The fiberop field corresponds to the
     * database column test.test.ss13husb.FIBEROP.
     * 
     * @return the fiberop of this Ss13husb
     */
    Optional<Integer> getFiberop();
    
    /**
     * Returns the fs of this Ss13husb. The fs field corresponds to the database
     * column test.test.ss13husb.FS.
     * 
     * @return the fs of this Ss13husb
     */
    Optional<Integer> getFs();
    
    /**
     * Returns the fulp of this Ss13husb. The fulp field corresponds to the
     * database column test.test.ss13husb.FULP.
     * 
     * @return the fulp of this Ss13husb
     */
    Optional<Integer> getFulp();
    
    /**
     * Returns the gasp of this Ss13husb. The gasp field corresponds to the
     * database column test.test.ss13husb.GASP.
     * 
     * @return the gasp of this Ss13husb
     */
    Optional<Integer> getGasp();
    
    /**
     * Returns the handheld of this Ss13husb. The handheld field corresponds to
     * the database column test.test.ss13husb.HANDHELD.
     * 
     * @return the handheld of this Ss13husb
     */
    Optional<Integer> getHandheld();
    
    /**
     * Returns the hfl of this Ss13husb. The hfl field corresponds to the
     * database column test.test.ss13husb.HFL.
     * 
     * @return the hfl of this Ss13husb
     */
    Optional<Integer> getHfl();
    
    /**
     * Returns the insp of this Ss13husb. The insp field corresponds to the
     * database column test.test.ss13husb.INSP.
     * 
     * @return the insp of this Ss13husb
     */
    Optional<Integer> getInsp();
    
    /**
     * Returns the laptop of this Ss13husb. The laptop field corresponds to the
     * database column test.test.ss13husb.LAPTOP.
     * 
     * @return the laptop of this Ss13husb
     */
    Optional<Integer> getLaptop();
    
    /**
     * Returns the mhp of this Ss13husb. The mhp field corresponds to the
     * database column test.test.ss13husb.MHP.
     * 
     * @return the mhp of this Ss13husb
     */
    Optional<Integer> getMhp();
    
    /**
     * Returns the modem of this Ss13husb. The modem field corresponds to the
     * database column test.test.ss13husb.MODEM.
     * 
     * @return the modem of this Ss13husb
     */
    Optional<Integer> getModem();
    
    /**
     * Returns the mrgi of this Ss13husb. The mrgi field corresponds to the
     * database column test.test.ss13husb.MRGI.
     * 
     * @return the mrgi of this Ss13husb
     */
    Optional<Integer> getMrgi();
    
    /**
     * Returns the mrgp of this Ss13husb. The mrgp field corresponds to the
     * database column test.test.ss13husb.MRGP.
     * 
     * @return the mrgp of this Ss13husb
     */
    Optional<Integer> getMrgp();
    
    /**
     * Returns the mrgt of this Ss13husb. The mrgt field corresponds to the
     * database column test.test.ss13husb.MRGT.
     * 
     * @return the mrgt of this Ss13husb
     */
    Optional<Integer> getMrgt();
    
    /**
     * Returns the mrgx of this Ss13husb. The mrgx field corresponds to the
     * database column test.test.ss13husb.MRGX.
     * 
     * @return the mrgx of this Ss13husb
     */
    Optional<Integer> getMrgx();
    
    /**
     * Returns the othsvcex of this Ss13husb. The othsvcex field corresponds to
     * the database column test.test.ss13husb.OTHSVCEX.
     * 
     * @return the othsvcex of this Ss13husb
     */
    Optional<Integer> getOthsvcex();
    
    /**
     * Returns the refr of this Ss13husb. The refr field corresponds to the
     * database column test.test.ss13husb.REFR.
     * 
     * @return the refr of this Ss13husb
     */
    Optional<Integer> getRefr();
    
    /**
     * Returns the rmsp of this Ss13husb. The rmsp field corresponds to the
     * database column test.test.ss13husb.RMSP.
     * 
     * @return the rmsp of this Ss13husb
     */
    Optional<Integer> getRmsp();
    
    /**
     * Returns the rntm of this Ss13husb. The rntm field corresponds to the
     * database column test.test.ss13husb.RNTM.
     * 
     * @return the rntm of this Ss13husb
     */
    Optional<Integer> getRntm();
    
    /**
     * Returns the rntp of this Ss13husb. The rntp field corresponds to the
     * database column test.test.ss13husb.RNTP.
     * 
     * @return the rntp of this Ss13husb
     */
    Optional<Integer> getRntp();
    
    /**
     * Returns the rwat of this Ss13husb. The rwat field corresponds to the
     * database column test.test.ss13husb.RWAT.
     * 
     * @return the rwat of this Ss13husb
     */
    Optional<Integer> getRwat();
    
    /**
     * Returns the rwatpr of this Ss13husb. The rwatpr field corresponds to the
     * database column test.test.ss13husb.RWATPR.
     * 
     * @return the rwatpr of this Ss13husb
     */
    Optional<Integer> getRwatpr();
    
    /**
     * Returns the satellite of this Ss13husb. The satellite field corresponds to
     * the database column test.test.ss13husb.SATELLITE.
     * 
     * @return the satellite of this Ss13husb
     */
    Optional<Integer> getSatellite();
    
    /**
     * Returns the sink of this Ss13husb. The sink field corresponds to the
     * database column test.test.ss13husb.SINK.
     * 
     * @return the sink of this Ss13husb
     */
    Optional<Integer> getSink();
    
    /**
     * Returns the smp of this Ss13husb. The smp field corresponds to the
     * database column test.test.ss13husb.SMP.
     * 
     * @return the smp of this Ss13husb
     */
    Optional<Integer> getSmp();
    
    /**
     * Returns the stov of this Ss13husb. The stov field corresponds to the
     * database column test.test.ss13husb.STOV.
     * 
     * @return the stov of this Ss13husb
     */
    Optional<Integer> getStov();
    
    /**
     * Returns the tel of this Ss13husb. The tel field corresponds to the
     * database column test.test.ss13husb.TEL.
     * 
     * @return the tel of this Ss13husb
     */
    Optional<Integer> getTel();
    
    /**
     * Returns the ten of this Ss13husb. The ten field corresponds to the
     * database column test.test.ss13husb.TEN.
     * 
     * @return the ten of this Ss13husb
     */
    Optional<Integer> getTen();
    
    /**
     * Returns the toil of this Ss13husb. The toil field corresponds to the
     * database column test.test.ss13husb.TOIL.
     * 
     * @return the toil of this Ss13husb
     */
    Optional<Integer> getToil();
    
    /**
     * Returns the vacs of this Ss13husb. The vacs field corresponds to the
     * database column test.test.ss13husb.VACS.
     * 
     * @return the vacs of this Ss13husb
     */
    Optional<Integer> getVacs();
    
    /**
     * Returns the valp of this Ss13husb. The valp field corresponds to the
     * database column test.test.ss13husb.VALP.
     * 
     * @return the valp of this Ss13husb
     */
    Optional<Integer> getValp();
    
    /**
     * Returns the veh of this Ss13husb. The veh field corresponds to the
     * database column test.test.ss13husb.VEH.
     * 
     * @return the veh of this Ss13husb
     */
    Optional<Integer> getVeh();
    
    /**
     * Returns the watp of this Ss13husb. The watp field corresponds to the
     * database column test.test.ss13husb.WATP.
     * 
     * @return the watp of this Ss13husb
     */
    Optional<Integer> getWatp();
    
    /**
     * Returns the ybl of this Ss13husb. The ybl field corresponds to the
     * database column test.test.ss13husb.YBL.
     * 
     * @return the ybl of this Ss13husb
     */
    Optional<Integer> getYbl();
    
    /**
     * Returns the fes of this Ss13husb. The fes field corresponds to the
     * database column test.test.ss13husb.FES.
     * 
     * @return the fes of this Ss13husb
     */
    Optional<Integer> getFes();
    
    /**
     * Returns the ffincp of this Ss13husb. The ffincp field corresponds to the
     * database column test.test.ss13husb.FFINCP.
     * 
     * @return the ffincp of this Ss13husb
     */
    Optional<Integer> getFfincp();
    
    /**
     * Returns the fgrntp of this Ss13husb. The fgrntp field corresponds to the
     * database column test.test.ss13husb.FGRNTP.
     * 
     * @return the fgrntp of this Ss13husb
     */
    Optional<Integer> getFgrntp();
    
    /**
     * Returns the fhincp of this Ss13husb. The fhincp field corresponds to the
     * database column test.test.ss13husb.FHINCP.
     * 
     * @return the fhincp of this Ss13husb
     */
    Optional<Integer> getFhincp();
    
    /**
     * Returns the fincp of this Ss13husb. The fincp field corresponds to the
     * database column test.test.ss13husb.FINCP.
     * 
     * @return the fincp of this Ss13husb
     */
    Optional<Integer> getFincp();
    
    /**
     * Returns the fparc of this Ss13husb. The fparc field corresponds to the
     * database column test.test.ss13husb.FPARC.
     * 
     * @return the fparc of this Ss13husb
     */
    Optional<Integer> getFparc();
    
    /**
     * Returns the fsmocp of this Ss13husb. The fsmocp field corresponds to the
     * database column test.test.ss13husb.FSMOCP.
     * 
     * @return the fsmocp of this Ss13husb
     */
    Optional<Integer> getFsmocp();
    
    /**
     * Returns the grntp of this Ss13husb. The grntp field corresponds to the
     * database column test.test.ss13husb.GRNTP.
     * 
     * @return the grntp of this Ss13husb
     */
    Optional<Integer> getGrntp();
    
    /**
     * Returns the grpip of this Ss13husb. The grpip field corresponds to the
     * database column test.test.ss13husb.GRPIP.
     * 
     * @return the grpip of this Ss13husb
     */
    Optional<Integer> getGrpip();
    
    /**
     * Returns the hhl of this Ss13husb. The hhl field corresponds to the
     * database column test.test.ss13husb.HHL.
     * 
     * @return the hhl of this Ss13husb
     */
    Optional<Integer> getHhl();
    
    /**
     * Returns the hht of this Ss13husb. The hht field corresponds to the
     * database column test.test.ss13husb.HHT.
     * 
     * @return the hht of this Ss13husb
     */
    Optional<Integer> getHht();
    
    /**
     * Returns the hincp of this Ss13husb. The hincp field corresponds to the
     * database column test.test.ss13husb.HINCP.
     * 
     * @return the hincp of this Ss13husb
     */
    Optional<Integer> getHincp();
    
    /**
     * Returns the hugcl of this Ss13husb. The hugcl field corresponds to the
     * database column test.test.ss13husb.HUGCL.
     * 
     * @return the hugcl of this Ss13husb
     */
    Optional<Integer> getHugcl();
    
    /**
     * Returns the hupac of this Ss13husb. The hupac field corresponds to the
     * database column test.test.ss13husb.HUPAC.
     * 
     * @return the hupac of this Ss13husb
     */
    Optional<Integer> getHupac();
    
    /**
     * Returns the hupaoc of this Ss13husb. The hupaoc field corresponds to the
     * database column test.test.ss13husb.HUPAOC.
     * 
     * @return the hupaoc of this Ss13husb
     */
    Optional<Integer> getHupaoc();
    
    /**
     * Returns the huparc of this Ss13husb. The huparc field corresponds to the
     * database column test.test.ss13husb.HUPARC.
     * 
     * @return the huparc of this Ss13husb
     */
    Optional<Integer> getHuparc();
    
    /**
     * Returns the kit of this Ss13husb. The kit field corresponds to the
     * database column test.test.ss13husb.KIT.
     * 
     * @return the kit of this Ss13husb
     */
    Optional<Integer> getKit();
    
    /**
     * Returns the lngi of this Ss13husb. The lngi field corresponds to the
     * database column test.test.ss13husb.LNGI.
     * 
     * @return the lngi of this Ss13husb
     */
    Optional<Integer> getLngi();
    
    /**
     * Returns the multg of this Ss13husb. The multg field corresponds to the
     * database column test.test.ss13husb.MULTG.
     * 
     * @return the multg of this Ss13husb
     */
    Optional<Integer> getMultg();
    
    /**
     * Returns the mv of this Ss13husb. The mv field corresponds to the database
     * column test.test.ss13husb.MV.
     * 
     * @return the mv of this Ss13husb
     */
    Optional<Integer> getMv();
    
    /**
     * Returns the noc of this Ss13husb. The noc field corresponds to the
     * database column test.test.ss13husb.NOC.
     * 
     * @return the noc of this Ss13husb
     */
    Optional<Integer> getNoc();
    
    /**
     * Returns the npf of this Ss13husb. The npf field corresponds to the
     * database column test.test.ss13husb.NPF.
     * 
     * @return the npf of this Ss13husb
     */
    Optional<Integer> getNpf();
    
    /**
     * Returns the npp of this Ss13husb. The npp field corresponds to the
     * database column test.test.ss13husb.NPP.
     * 
     * @return the npp of this Ss13husb
     */
    Optional<Integer> getNpp();
    
    /**
     * Returns the nr of this Ss13husb. The nr field corresponds to the database
     * column test.test.ss13husb.NR.
     * 
     * @return the nr of this Ss13husb
     */
    Optional<Integer> getNr();
    
    /**
     * Returns the nrc of this Ss13husb. The nrc field corresponds to the
     * database column test.test.ss13husb.NRC.
     * 
     * @return the nrc of this Ss13husb
     */
    Optional<Integer> getNrc();
    
    /**
     * Returns the ocpip of this Ss13husb. The ocpip field corresponds to the
     * database column test.test.ss13husb.OCPIP.
     * 
     * @return the ocpip of this Ss13husb
     */
    Optional<Integer> getOcpip();
    
    /**
     * Returns the partner of this Ss13husb. The partner field corresponds to the
     * database column test.test.ss13husb.PARTNER.
     * 
     * @return the partner of this Ss13husb
     */
    Optional<Integer> getPartner();
    
    /**
     * Returns the plm of this Ss13husb. The plm field corresponds to the
     * database column test.test.ss13husb.PLM.
     * 
     * @return the plm of this Ss13husb
     */
    Optional<Integer> getPlm();
    
    /**
     * Returns the psf of this Ss13husb. The psf field corresponds to the
     * database column test.test.ss13husb.PSF.
     * 
     * @return the psf of this Ss13husb
     */
    Optional<Integer> getPsf();
    
    /**
     * Returns the r18 of this Ss13husb. The r18 field corresponds to the
     * database column test.test.ss13husb.R18.
     * 
     * @return the r18 of this Ss13husb
     */
    Optional<Integer> getR18();
    
    /**
     * Returns the r60 of this Ss13husb. The r60 field corresponds to the
     * database column test.test.ss13husb.R60.
     * 
     * @return the r60 of this Ss13husb
     */
    Optional<Integer> getR60();
    
    /**
     * Returns the r65 of this Ss13husb. The r65 field corresponds to the
     * database column test.test.ss13husb.R65.
     * 
     * @return the r65 of this Ss13husb
     */
    Optional<Integer> getR65();
    
    /**
     * Returns the resmode of this Ss13husb. The resmode field corresponds to the
     * database column test.test.ss13husb.RESMODE.
     * 
     * @return the resmode of this Ss13husb
     */
    Optional<Integer> getResmode();
    
    /**
     * Returns the smocp of this Ss13husb. The smocp field corresponds to the
     * database column test.test.ss13husb.SMOCP.
     * 
     * @return the smocp of this Ss13husb
     */
    Optional<Integer> getSmocp();
    
    /**
     * Returns the smx of this Ss13husb. The smx field corresponds to the
     * database column test.test.ss13husb.SMX.
     * 
     * @return the smx of this Ss13husb
     */
    Optional<Integer> getSmx();
    
    /**
     * Returns the srnt of this Ss13husb. The srnt field corresponds to the
     * database column test.test.ss13husb.SRNT.
     * 
     * @return the srnt of this Ss13husb
     */
    Optional<Integer> getSrnt();
    
    /**
     * Returns the ssmc of this Ss13husb. The ssmc field corresponds to the
     * database column test.test.ss13husb.SSMC.
     * 
     * @return the ssmc of this Ss13husb
     */
    Optional<Integer> getSsmc();
    
    /**
     * Returns the sval of this Ss13husb. The sval field corresponds to the
     * database column test.test.ss13husb.SVAL.
     * 
     * @return the sval of this Ss13husb
     */
    Optional<Integer> getSval();
    
    /**
     * Returns the taxp of this Ss13husb. The taxp field corresponds to the
     * database column test.test.ss13husb.TAXP.
     * 
     * @return the taxp of this Ss13husb
     */
    Optional<Integer> getTaxp();
    
    /**
     * Returns the wif of this Ss13husb. The wif field corresponds to the
     * database column test.test.ss13husb.WIF.
     * 
     * @return the wif of this Ss13husb
     */
    Optional<Integer> getWif();
    
    /**
     * Returns the wkexrel of this Ss13husb. The wkexrel field corresponds to the
     * database column test.test.ss13husb.WKEXREL.
     * 
     * @return the wkexrel of this Ss13husb
     */
    Optional<Integer> getWkexrel();
    
    /**
     * Returns the workstat of this Ss13husb. The workstat field corresponds to
     * the database column test.test.ss13husb.WORKSTAT.
     * 
     * @return the workstat of this Ss13husb
     */
    Optional<Integer> getWorkstat();
    
    /**
     * Returns the faccessp of this Ss13husb. The faccessp field corresponds to
     * the database column test.test.ss13husb.FACCESSP.
     * 
     * @return the faccessp of this Ss13husb
     */
    Optional<Integer> getFaccessp();
    
    /**
     * Returns the facrp of this Ss13husb. The facrp field corresponds to the
     * database column test.test.ss13husb.FACRP.
     * 
     * @return the facrp of this Ss13husb
     */
    Optional<Integer> getFacrp();
    
    /**
     * Returns the fagsp of this Ss13husb. The fagsp field corresponds to the
     * database column test.test.ss13husb.FAGSP.
     * 
     * @return the fagsp of this Ss13husb
     */
    Optional<Integer> getFagsp();
    
    /**
     * Returns the fbathp of this Ss13husb. The fbathp field corresponds to the
     * database column test.test.ss13husb.FBATHP.
     * 
     * @return the fbathp of this Ss13husb
     */
    Optional<Integer> getFbathp();
    
    /**
     * Returns the fbdsp of this Ss13husb. The fbdsp field corresponds to the
     * database column test.test.ss13husb.FBDSP.
     * 
     * @return the fbdsp of this Ss13husb
     */
    Optional<Integer> getFbdsp();
    
    /**
     * Returns the fbldp of this Ss13husb. The fbldp field corresponds to the
     * database column test.test.ss13husb.FBLDP.
     * 
     * @return the fbldp of this Ss13husb
     */
    Optional<Integer> getFbldp();
    
    /**
     * Returns the fbroadbndp of this Ss13husb. The fbroadbndp field corresponds
     * to the database column test.test.ss13husb.FBROADBNDP.
     * 
     * @return the fbroadbndp of this Ss13husb
     */
    Optional<Integer> getFbroadbndp();
    
    /**
     * Returns the fbusp of this Ss13husb. The fbusp field corresponds to the
     * database column test.test.ss13husb.FBUSP.
     * 
     * @return the fbusp of this Ss13husb
     */
    Optional<Integer> getFbusp();
    
    /**
     * Returns the fcompothxp of this Ss13husb. The fcompothxp field corresponds
     * to the database column test.test.ss13husb.FCOMPOTHXP.
     * 
     * @return the fcompothxp of this Ss13husb
     */
    Optional<Integer> getFcompothxp();
    
    /**
     * Returns the fconp of this Ss13husb. The fconp field corresponds to the
     * database column test.test.ss13husb.FCONP.
     * 
     * @return the fconp of this Ss13husb
     */
    Optional<Integer> getFconp();
    
    /**
     * Returns the fdialupp of this Ss13husb. The fdialupp field corresponds to
     * the database column test.test.ss13husb.FDIALUPP.
     * 
     * @return the fdialupp of this Ss13husb
     */
    Optional<Integer> getFdialupp();
    
    /**
     * Returns the fdslp of this Ss13husb. The fdslp field corresponds to the
     * database column test.test.ss13husb.FDSLP.
     * 
     * @return the fdslp of this Ss13husb
     */
    Optional<Integer> getFdslp();
    
    /**
     * Returns the felep of this Ss13husb. The felep field corresponds to the
     * database column test.test.ss13husb.FELEP.
     * 
     * @return the felep of this Ss13husb
     */
    Optional<Integer> getFelep();
    
    /**
     * Returns the ffiberopp of this Ss13husb. The ffiberopp field corresponds to
     * the database column test.test.ss13husb.FFIBEROPP.
     * 
     * @return the ffiberopp of this Ss13husb
     */
    Optional<Integer> getFfiberopp();
    
    /**
     * Returns the ffsp of this Ss13husb. The ffsp field corresponds to the
     * database column test.test.ss13husb.FFSP.
     * 
     * @return the ffsp of this Ss13husb
     */
    Optional<Integer> getFfsp();
    
    /**
     * Returns the ffulp of this Ss13husb. The ffulp field corresponds to the
     * database column test.test.ss13husb.FFULP.
     * 
     * @return the ffulp of this Ss13husb
     */
    Optional<Integer> getFfulp();
    
    /**
     * Returns the fgasp of this Ss13husb. The fgasp field corresponds to the
     * database column test.test.ss13husb.FGASP.
     * 
     * @return the fgasp of this Ss13husb
     */
    Optional<Integer> getFgasp();
    
    /**
     * Returns the fhandheldp of this Ss13husb. The fhandheldp field corresponds
     * to the database column test.test.ss13husb.FHANDHELDP.
     * 
     * @return the fhandheldp of this Ss13husb
     */
    Optional<Integer> getFhandheldp();
    
    /**
     * Returns the fhflp of this Ss13husb. The fhflp field corresponds to the
     * database column test.test.ss13husb.FHFLP.
     * 
     * @return the fhflp of this Ss13husb
     */
    Optional<Integer> getFhflp();
    
    /**
     * Returns the finsp of this Ss13husb. The finsp field corresponds to the
     * database column test.test.ss13husb.FINSP.
     * 
     * @return the finsp of this Ss13husb
     */
    Optional<Integer> getFinsp();
    
    /**
     * Returns the fkitp of this Ss13husb. The fkitp field corresponds to the
     * database column test.test.ss13husb.FKITP.
     * 
     * @return the fkitp of this Ss13husb
     */
    Optional<Integer> getFkitp();
    
    /**
     * Returns the flaptopp of this Ss13husb. The flaptopp field corresponds to
     * the database column test.test.ss13husb.FLAPTOPP.
     * 
     * @return the flaptopp of this Ss13husb
     */
    Optional<Integer> getFlaptopp();
    
    /**
     * Returns the fmhp of this Ss13husb. The fmhp field corresponds to the
     * database column test.test.ss13husb.FMHP.
     * 
     * @return the fmhp of this Ss13husb
     */
    Optional<Integer> getFmhp();
    
    /**
     * Returns the fmodemp of this Ss13husb. The fmodemp field corresponds to the
     * database column test.test.ss13husb.FMODEMP.
     * 
     * @return the fmodemp of this Ss13husb
     */
    Optional<Integer> getFmodemp();
    
    /**
     * Returns the fmrgip of this Ss13husb. The fmrgip field corresponds to the
     * database column test.test.ss13husb.FMRGIP.
     * 
     * @return the fmrgip of this Ss13husb
     */
    Optional<Integer> getFmrgip();
    
    /**
     * Returns the fmrgp of this Ss13husb. The fmrgp field corresponds to the
     * database column test.test.ss13husb.FMRGP.
     * 
     * @return the fmrgp of this Ss13husb
     */
    Optional<Integer> getFmrgp();
    
    /**
     * Returns the fmrgtp of this Ss13husb. The fmrgtp field corresponds to the
     * database column test.test.ss13husb.FMRGTP.
     * 
     * @return the fmrgtp of this Ss13husb
     */
    Optional<Integer> getFmrgtp();
    
    /**
     * Returns the fmrgxp of this Ss13husb. The fmrgxp field corresponds to the
     * database column test.test.ss13husb.FMRGXP.
     * 
     * @return the fmrgxp of this Ss13husb
     */
    Optional<Integer> getFmrgxp();
    
    /**
     * Returns the fmvp of this Ss13husb. The fmvp field corresponds to the
     * database column test.test.ss13husb.FMVP.
     * 
     * @return the fmvp of this Ss13husb
     */
    Optional<Integer> getFmvp();
    
    /**
     * Returns the fothsvcexp of this Ss13husb. The fothsvcexp field corresponds
     * to the database column test.test.ss13husb.FOTHSVCEXP.
     * 
     * @return the fothsvcexp of this Ss13husb
     */
    Optional<Integer> getFothsvcexp();
    
    /**
     * Returns the fplmp of this Ss13husb. The fplmp field corresponds to the
     * database column test.test.ss13husb.FPLMP.
     * 
     * @return the fplmp of this Ss13husb
     */
    Optional<Integer> getFplmp();
    
    /**
     * Returns the frefrp of this Ss13husb. The frefrp field corresponds to the
     * database column test.test.ss13husb.FREFRP.
     * 
     * @return the frefrp of this Ss13husb
     */
    Optional<Integer> getFrefrp();
    
    /**
     * Returns the frmsp of this Ss13husb. The frmsp field corresponds to the
     * database column test.test.ss13husb.FRMSP.
     * 
     * @return the frmsp of this Ss13husb
     */
    Optional<Integer> getFrmsp();
    
    /**
     * Returns the frntmp of this Ss13husb. The frntmp field corresponds to the
     * database column test.test.ss13husb.FRNTMP.
     * 
     * @return the frntmp of this Ss13husb
     */
    Optional<Integer> getFrntmp();
    
    /**
     * Returns the frntp of this Ss13husb. The frntp field corresponds to the
     * database column test.test.ss13husb.FRNTP.
     * 
     * @return the frntp of this Ss13husb
     */
    Optional<Integer> getFrntp();
    
    /**
     * Returns the frwatp of this Ss13husb. The frwatp field corresponds to the
     * database column test.test.ss13husb.FRWATP.
     * 
     * @return the frwatp of this Ss13husb
     */
    Optional<Integer> getFrwatp();
    
    /**
     * Returns the frwatprp of this Ss13husb. The frwatprp field corresponds to
     * the database column test.test.ss13husb.FRWATPRP.
     * 
     * @return the frwatprp of this Ss13husb
     */
    Optional<Integer> getFrwatprp();
    
    /**
     * Returns the fsatellitep of this Ss13husb. The fsatellitep field
     * corresponds to the database column test.test.ss13husb.FSATELLITEP.
     * 
     * @return the fsatellitep of this Ss13husb
     */
    Optional<Integer> getFsatellitep();
    
    /**
     * Returns the fsinkp of this Ss13husb. The fsinkp field corresponds to the
     * database column test.test.ss13husb.FSINKP.
     * 
     * @return the fsinkp of this Ss13husb
     */
    Optional<Integer> getFsinkp();
    
    /**
     * Returns the fsmp of this Ss13husb. The fsmp field corresponds to the
     * database column test.test.ss13husb.FSMP.
     * 
     * @return the fsmp of this Ss13husb
     */
    Optional<Integer> getFsmp();
    
    /**
     * Returns the fsmxhp of this Ss13husb. The fsmxhp field corresponds to the
     * database column test.test.ss13husb.FSMXHP.
     * 
     * @return the fsmxhp of this Ss13husb
     */
    Optional<Integer> getFsmxhp();
    
    /**
     * Returns the fsmxsp of this Ss13husb. The fsmxsp field corresponds to the
     * database column test.test.ss13husb.FSMXSP.
     * 
     * @return the fsmxsp of this Ss13husb
     */
    Optional<Integer> getFsmxsp();
    
    /**
     * Returns the fstovp of this Ss13husb. The fstovp field corresponds to the
     * database column test.test.ss13husb.FSTOVP.
     * 
     * @return the fstovp of this Ss13husb
     */
    Optional<Integer> getFstovp();
    
    /**
     * Returns the ftaxp of this Ss13husb. The ftaxp field corresponds to the
     * database column test.test.ss13husb.FTAXP.
     * 
     * @return the ftaxp of this Ss13husb
     */
    Optional<Integer> getFtaxp();
    
    /**
     * Returns the ftelp of this Ss13husb. The ftelp field corresponds to the
     * database column test.test.ss13husb.FTELP.
     * 
     * @return the ftelp of this Ss13husb
     */
    Optional<Integer> getFtelp();
    
    /**
     * Returns the ftenp of this Ss13husb. The ftenp field corresponds to the
     * database column test.test.ss13husb.FTENP.
     * 
     * @return the ftenp of this Ss13husb
     */
    Optional<Integer> getFtenp();
    
    /**
     * Returns the ftoilp of this Ss13husb. The ftoilp field corresponds to the
     * database column test.test.ss13husb.FTOILP.
     * 
     * @return the ftoilp of this Ss13husb
     */
    Optional<Integer> getFtoilp();
    
    /**
     * Returns the fvacsp of this Ss13husb. The fvacsp field corresponds to the
     * database column test.test.ss13husb.FVACSP.
     * 
     * @return the fvacsp of this Ss13husb
     */
    Optional<Integer> getFvacsp();
    
    /**
     * Returns the fvalp of this Ss13husb. The fvalp field corresponds to the
     * database column test.test.ss13husb.FVALP.
     * 
     * @return the fvalp of this Ss13husb
     */
    Optional<Integer> getFvalp();
    
    /**
     * Returns the fvehp of this Ss13husb. The fvehp field corresponds to the
     * database column test.test.ss13husb.FVEHP.
     * 
     * @return the fvehp of this Ss13husb
     */
    Optional<Integer> getFvehp();
    
    /**
     * Returns the fwatp of this Ss13husb. The fwatp field corresponds to the
     * database column test.test.ss13husb.FWATP.
     * 
     * @return the fwatp of this Ss13husb
     */
    Optional<Integer> getFwatp();
    
    /**
     * Returns the fyblp of this Ss13husb. The fyblp field corresponds to the
     * database column test.test.ss13husb.FYBLP.
     * 
     * @return the fyblp of this Ss13husb
     */
    Optional<Integer> getFyblp();
    
    /**
     * Sets the rt of this Ss13husb. The rt field corresponds to the database
     * column test.test.ss13husb.RT.
     * 
     * @param rt to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setRt(Integer rt);
    
    /**
     * Sets the serialno of this Ss13husb. The serialno field corresponds to the
     * database column test.test.ss13husb.SERIALNO.
     * 
     * @param serialno to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setSerialno(Integer serialno);
    
    /**
     * Sets the division of this Ss13husb. The division field corresponds to the
     * database column test.test.ss13husb.DIVISION.
     * 
     * @param division to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setDivision(Integer division);
    
    /**
     * Sets the puma of this Ss13husb. The puma field corresponds to the database
     * column test.test.ss13husb.PUMA.
     * 
     * @param puma to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setPuma(Integer puma);
    
    /**
     * Sets the region of this Ss13husb. The region field corresponds to the
     * database column test.test.ss13husb.REGION.
     * 
     * @param region to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setRegion(Integer region);
    
    /**
     * Sets the st of this Ss13husb. The st field corresponds to the database
     * column test.test.ss13husb.ST.
     * 
     * @param st to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setSt(Integer st);
    
    /**
     * Sets the adjhsg of this Ss13husb. The adjhsg field corresponds to the
     * database column test.test.ss13husb.ADJHSG.
     * 
     * @param adjhsg to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setAdjhsg(Integer adjhsg);
    
    /**
     * Sets the adjinc of this Ss13husb. The adjinc field corresponds to the
     * database column test.test.ss13husb.ADJINC.
     * 
     * @param adjinc to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setAdjinc(Integer adjinc);
    
    /**
     * Sets the wgtp of this Ss13husb. The wgtp field corresponds to the database
     * column test.test.ss13husb.WGTP.
     * 
     * @param wgtp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setWgtp(Integer wgtp);
    
    /**
     * Sets the np of this Ss13husb. The np field corresponds to the database
     * column test.test.ss13husb.NP.
     * 
     * @param np to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setNp(Integer np);
    
    /**
     * Sets the type of this Ss13husb. The type field corresponds to the database
     * column test.test.ss13husb.TYPE.
     * 
     * @param type to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setType(Integer type);
    
    /**
     * Sets the access of this Ss13husb. The access field corresponds to the
     * database column test.test.ss13husb.ACCESS.
     * 
     * @param access to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setAccess(Integer access);
    
    /**
     * Sets the acr of this Ss13husb. The acr field corresponds to the database
     * column test.test.ss13husb.ACR.
     * 
     * @param acr to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setAcr(Integer acr);
    
    /**
     * Sets the ags of this Ss13husb. The ags field corresponds to the database
     * column test.test.ss13husb.AGS.
     * 
     * @param ags to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setAgs(Integer ags);
    
    /**
     * Sets the bath of this Ss13husb. The bath field corresponds to the database
     * column test.test.ss13husb.BATH.
     * 
     * @param bath to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setBath(Integer bath);
    
    /**
     * Sets the bdsp of this Ss13husb. The bdsp field corresponds to the database
     * column test.test.ss13husb.BDSP.
     * 
     * @param bdsp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setBdsp(Integer bdsp);
    
    /**
     * Sets the bld of this Ss13husb. The bld field corresponds to the database
     * column test.test.ss13husb.BLD.
     * 
     * @param bld to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setBld(Integer bld);
    
    /**
     * Sets the broadbnd of this Ss13husb. The broadbnd field corresponds to the
     * database column test.test.ss13husb.BROADBND.
     * 
     * @param broadbnd to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setBroadbnd(Integer broadbnd);
    
    /**
     * Sets the bus of this Ss13husb. The bus field corresponds to the database
     * column test.test.ss13husb.BUS.
     * 
     * @param bus to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setBus(Integer bus);
    
    /**
     * Sets the compothx of this Ss13husb. The compothx field corresponds to the
     * database column test.test.ss13husb.COMPOTHX.
     * 
     * @param compothx to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setCompothx(Integer compothx);
    
    /**
     * Sets the conp of this Ss13husb. The conp field corresponds to the database
     * column test.test.ss13husb.CONP.
     * 
     * @param conp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setConp(Integer conp);
    
    /**
     * Sets the dialup of this Ss13husb. The dialup field corresponds to the
     * database column test.test.ss13husb.DIALUP.
     * 
     * @param dialup to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setDialup(Integer dialup);
    
    /**
     * Sets the dsl of this Ss13husb. The dsl field corresponds to the database
     * column test.test.ss13husb.DSL.
     * 
     * @param dsl to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setDsl(Integer dsl);
    
    /**
     * Sets the elep of this Ss13husb. The elep field corresponds to the database
     * column test.test.ss13husb.ELEP.
     * 
     * @param elep to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setElep(Integer elep);
    
    /**
     * Sets the fiberop of this Ss13husb. The fiberop field corresponds to the
     * database column test.test.ss13husb.FIBEROP.
     * 
     * @param fiberop to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFiberop(Integer fiberop);
    
    /**
     * Sets the fs of this Ss13husb. The fs field corresponds to the database
     * column test.test.ss13husb.FS.
     * 
     * @param fs to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFs(Integer fs);
    
    /**
     * Sets the fulp of this Ss13husb. The fulp field corresponds to the database
     * column test.test.ss13husb.FULP.
     * 
     * @param fulp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFulp(Integer fulp);
    
    /**
     * Sets the gasp of this Ss13husb. The gasp field corresponds to the database
     * column test.test.ss13husb.GASP.
     * 
     * @param gasp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setGasp(Integer gasp);
    
    /**
     * Sets the handheld of this Ss13husb. The handheld field corresponds to the
     * database column test.test.ss13husb.HANDHELD.
     * 
     * @param handheld to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setHandheld(Integer handheld);
    
    /**
     * Sets the hfl of this Ss13husb. The hfl field corresponds to the database
     * column test.test.ss13husb.HFL.
     * 
     * @param hfl to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setHfl(Integer hfl);
    
    /**
     * Sets the insp of this Ss13husb. The insp field corresponds to the database
     * column test.test.ss13husb.INSP.
     * 
     * @param insp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setInsp(Integer insp);
    
    /**
     * Sets the laptop of this Ss13husb. The laptop field corresponds to the
     * database column test.test.ss13husb.LAPTOP.
     * 
     * @param laptop to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setLaptop(Integer laptop);
    
    /**
     * Sets the mhp of this Ss13husb. The mhp field corresponds to the database
     * column test.test.ss13husb.MHP.
     * 
     * @param mhp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setMhp(Integer mhp);
    
    /**
     * Sets the modem of this Ss13husb. The modem field corresponds to the
     * database column test.test.ss13husb.MODEM.
     * 
     * @param modem to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setModem(Integer modem);
    
    /**
     * Sets the mrgi of this Ss13husb. The mrgi field corresponds to the database
     * column test.test.ss13husb.MRGI.
     * 
     * @param mrgi to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setMrgi(Integer mrgi);
    
    /**
     * Sets the mrgp of this Ss13husb. The mrgp field corresponds to the database
     * column test.test.ss13husb.MRGP.
     * 
     * @param mrgp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setMrgp(Integer mrgp);
    
    /**
     * Sets the mrgt of this Ss13husb. The mrgt field corresponds to the database
     * column test.test.ss13husb.MRGT.
     * 
     * @param mrgt to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setMrgt(Integer mrgt);
    
    /**
     * Sets the mrgx of this Ss13husb. The mrgx field corresponds to the database
     * column test.test.ss13husb.MRGX.
     * 
     * @param mrgx to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setMrgx(Integer mrgx);
    
    /**
     * Sets the othsvcex of this Ss13husb. The othsvcex field corresponds to the
     * database column test.test.ss13husb.OTHSVCEX.
     * 
     * @param othsvcex to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setOthsvcex(Integer othsvcex);
    
    /**
     * Sets the refr of this Ss13husb. The refr field corresponds to the database
     * column test.test.ss13husb.REFR.
     * 
     * @param refr to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setRefr(Integer refr);
    
    /**
     * Sets the rmsp of this Ss13husb. The rmsp field corresponds to the database
     * column test.test.ss13husb.RMSP.
     * 
     * @param rmsp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setRmsp(Integer rmsp);
    
    /**
     * Sets the rntm of this Ss13husb. The rntm field corresponds to the database
     * column test.test.ss13husb.RNTM.
     * 
     * @param rntm to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setRntm(Integer rntm);
    
    /**
     * Sets the rntp of this Ss13husb. The rntp field corresponds to the database
     * column test.test.ss13husb.RNTP.
     * 
     * @param rntp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setRntp(Integer rntp);
    
    /**
     * Sets the rwat of this Ss13husb. The rwat field corresponds to the database
     * column test.test.ss13husb.RWAT.
     * 
     * @param rwat to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setRwat(Integer rwat);
    
    /**
     * Sets the rwatpr of this Ss13husb. The rwatpr field corresponds to the
     * database column test.test.ss13husb.RWATPR.
     * 
     * @param rwatpr to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setRwatpr(Integer rwatpr);
    
    /**
     * Sets the satellite of this Ss13husb. The satellite field corresponds to
     * the database column test.test.ss13husb.SATELLITE.
     * 
     * @param satellite to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setSatellite(Integer satellite);
    
    /**
     * Sets the sink of this Ss13husb. The sink field corresponds to the database
     * column test.test.ss13husb.SINK.
     * 
     * @param sink to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setSink(Integer sink);
    
    /**
     * Sets the smp of this Ss13husb. The smp field corresponds to the database
     * column test.test.ss13husb.SMP.
     * 
     * @param smp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setSmp(Integer smp);
    
    /**
     * Sets the stov of this Ss13husb. The stov field corresponds to the database
     * column test.test.ss13husb.STOV.
     * 
     * @param stov to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setStov(Integer stov);
    
    /**
     * Sets the tel of this Ss13husb. The tel field corresponds to the database
     * column test.test.ss13husb.TEL.
     * 
     * @param tel to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setTel(Integer tel);
    
    /**
     * Sets the ten of this Ss13husb. The ten field corresponds to the database
     * column test.test.ss13husb.TEN.
     * 
     * @param ten to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setTen(Integer ten);
    
    /**
     * Sets the toil of this Ss13husb. The toil field corresponds to the database
     * column test.test.ss13husb.TOIL.
     * 
     * @param toil to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setToil(Integer toil);
    
    /**
     * Sets the vacs of this Ss13husb. The vacs field corresponds to the database
     * column test.test.ss13husb.VACS.
     * 
     * @param vacs to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setVacs(Integer vacs);
    
    /**
     * Sets the valp of this Ss13husb. The valp field corresponds to the database
     * column test.test.ss13husb.VALP.
     * 
     * @param valp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setValp(Integer valp);
    
    /**
     * Sets the veh of this Ss13husb. The veh field corresponds to the database
     * column test.test.ss13husb.VEH.
     * 
     * @param veh to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setVeh(Integer veh);
    
    /**
     * Sets the watp of this Ss13husb. The watp field corresponds to the database
     * column test.test.ss13husb.WATP.
     * 
     * @param watp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setWatp(Integer watp);
    
    /**
     * Sets the ybl of this Ss13husb. The ybl field corresponds to the database
     * column test.test.ss13husb.YBL.
     * 
     * @param ybl to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setYbl(Integer ybl);
    
    /**
     * Sets the fes of this Ss13husb. The fes field corresponds to the database
     * column test.test.ss13husb.FES.
     * 
     * @param fes to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFes(Integer fes);
    
    /**
     * Sets the ffincp of this Ss13husb. The ffincp field corresponds to the
     * database column test.test.ss13husb.FFINCP.
     * 
     * @param ffincp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFfincp(Integer ffincp);
    
    /**
     * Sets the fgrntp of this Ss13husb. The fgrntp field corresponds to the
     * database column test.test.ss13husb.FGRNTP.
     * 
     * @param fgrntp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFgrntp(Integer fgrntp);
    
    /**
     * Sets the fhincp of this Ss13husb. The fhincp field corresponds to the
     * database column test.test.ss13husb.FHINCP.
     * 
     * @param fhincp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFhincp(Integer fhincp);
    
    /**
     * Sets the fincp of this Ss13husb. The fincp field corresponds to the
     * database column test.test.ss13husb.FINCP.
     * 
     * @param fincp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFincp(Integer fincp);
    
    /**
     * Sets the fparc of this Ss13husb. The fparc field corresponds to the
     * database column test.test.ss13husb.FPARC.
     * 
     * @param fparc to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFparc(Integer fparc);
    
    /**
     * Sets the fsmocp of this Ss13husb. The fsmocp field corresponds to the
     * database column test.test.ss13husb.FSMOCP.
     * 
     * @param fsmocp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFsmocp(Integer fsmocp);
    
    /**
     * Sets the grntp of this Ss13husb. The grntp field corresponds to the
     * database column test.test.ss13husb.GRNTP.
     * 
     * @param grntp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setGrntp(Integer grntp);
    
    /**
     * Sets the grpip of this Ss13husb. The grpip field corresponds to the
     * database column test.test.ss13husb.GRPIP.
     * 
     * @param grpip to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setGrpip(Integer grpip);
    
    /**
     * Sets the hhl of this Ss13husb. The hhl field corresponds to the database
     * column test.test.ss13husb.HHL.
     * 
     * @param hhl to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setHhl(Integer hhl);
    
    /**
     * Sets the hht of this Ss13husb. The hht field corresponds to the database
     * column test.test.ss13husb.HHT.
     * 
     * @param hht to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setHht(Integer hht);
    
    /**
     * Sets the hincp of this Ss13husb. The hincp field corresponds to the
     * database column test.test.ss13husb.HINCP.
     * 
     * @param hincp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setHincp(Integer hincp);
    
    /**
     * Sets the hugcl of this Ss13husb. The hugcl field corresponds to the
     * database column test.test.ss13husb.HUGCL.
     * 
     * @param hugcl to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setHugcl(Integer hugcl);
    
    /**
     * Sets the hupac of this Ss13husb. The hupac field corresponds to the
     * database column test.test.ss13husb.HUPAC.
     * 
     * @param hupac to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setHupac(Integer hupac);
    
    /**
     * Sets the hupaoc of this Ss13husb. The hupaoc field corresponds to the
     * database column test.test.ss13husb.HUPAOC.
     * 
     * @param hupaoc to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setHupaoc(Integer hupaoc);
    
    /**
     * Sets the huparc of this Ss13husb. The huparc field corresponds to the
     * database column test.test.ss13husb.HUPARC.
     * 
     * @param huparc to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setHuparc(Integer huparc);
    
    /**
     * Sets the kit of this Ss13husb. The kit field corresponds to the database
     * column test.test.ss13husb.KIT.
     * 
     * @param kit to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setKit(Integer kit);
    
    /**
     * Sets the lngi of this Ss13husb. The lngi field corresponds to the database
     * column test.test.ss13husb.LNGI.
     * 
     * @param lngi to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setLngi(Integer lngi);
    
    /**
     * Sets the multg of this Ss13husb. The multg field corresponds to the
     * database column test.test.ss13husb.MULTG.
     * 
     * @param multg to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setMultg(Integer multg);
    
    /**
     * Sets the mv of this Ss13husb. The mv field corresponds to the database
     * column test.test.ss13husb.MV.
     * 
     * @param mv to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setMv(Integer mv);
    
    /**
     * Sets the noc of this Ss13husb. The noc field corresponds to the database
     * column test.test.ss13husb.NOC.
     * 
     * @param noc to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setNoc(Integer noc);
    
    /**
     * Sets the npf of this Ss13husb. The npf field corresponds to the database
     * column test.test.ss13husb.NPF.
     * 
     * @param npf to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setNpf(Integer npf);
    
    /**
     * Sets the npp of this Ss13husb. The npp field corresponds to the database
     * column test.test.ss13husb.NPP.
     * 
     * @param npp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setNpp(Integer npp);
    
    /**
     * Sets the nr of this Ss13husb. The nr field corresponds to the database
     * column test.test.ss13husb.NR.
     * 
     * @param nr to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setNr(Integer nr);
    
    /**
     * Sets the nrc of this Ss13husb. The nrc field corresponds to the database
     * column test.test.ss13husb.NRC.
     * 
     * @param nrc to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setNrc(Integer nrc);
    
    /**
     * Sets the ocpip of this Ss13husb. The ocpip field corresponds to the
     * database column test.test.ss13husb.OCPIP.
     * 
     * @param ocpip to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setOcpip(Integer ocpip);
    
    /**
     * Sets the partner of this Ss13husb. The partner field corresponds to the
     * database column test.test.ss13husb.PARTNER.
     * 
     * @param partner to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setPartner(Integer partner);
    
    /**
     * Sets the plm of this Ss13husb. The plm field corresponds to the database
     * column test.test.ss13husb.PLM.
     * 
     * @param plm to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setPlm(Integer plm);
    
    /**
     * Sets the psf of this Ss13husb. The psf field corresponds to the database
     * column test.test.ss13husb.PSF.
     * 
     * @param psf to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setPsf(Integer psf);
    
    /**
     * Sets the r18 of this Ss13husb. The r18 field corresponds to the database
     * column test.test.ss13husb.R18.
     * 
     * @param r18 to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setR18(Integer r18);
    
    /**
     * Sets the r60 of this Ss13husb. The r60 field corresponds to the database
     * column test.test.ss13husb.R60.
     * 
     * @param r60 to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setR60(Integer r60);
    
    /**
     * Sets the r65 of this Ss13husb. The r65 field corresponds to the database
     * column test.test.ss13husb.R65.
     * 
     * @param r65 to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setR65(Integer r65);
    
    /**
     * Sets the resmode of this Ss13husb. The resmode field corresponds to the
     * database column test.test.ss13husb.RESMODE.
     * 
     * @param resmode to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setResmode(Integer resmode);
    
    /**
     * Sets the smocp of this Ss13husb. The smocp field corresponds to the
     * database column test.test.ss13husb.SMOCP.
     * 
     * @param smocp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setSmocp(Integer smocp);
    
    /**
     * Sets the smx of this Ss13husb. The smx field corresponds to the database
     * column test.test.ss13husb.SMX.
     * 
     * @param smx to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setSmx(Integer smx);
    
    /**
     * Sets the srnt of this Ss13husb. The srnt field corresponds to the database
     * column test.test.ss13husb.SRNT.
     * 
     * @param srnt to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setSrnt(Integer srnt);
    
    /**
     * Sets the ssmc of this Ss13husb. The ssmc field corresponds to the database
     * column test.test.ss13husb.SSMC.
     * 
     * @param ssmc to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setSsmc(Integer ssmc);
    
    /**
     * Sets the sval of this Ss13husb. The sval field corresponds to the database
     * column test.test.ss13husb.SVAL.
     * 
     * @param sval to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setSval(Integer sval);
    
    /**
     * Sets the taxp of this Ss13husb. The taxp field corresponds to the database
     * column test.test.ss13husb.TAXP.
     * 
     * @param taxp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setTaxp(Integer taxp);
    
    /**
     * Sets the wif of this Ss13husb. The wif field corresponds to the database
     * column test.test.ss13husb.WIF.
     * 
     * @param wif to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setWif(Integer wif);
    
    /**
     * Sets the wkexrel of this Ss13husb. The wkexrel field corresponds to the
     * database column test.test.ss13husb.WKEXREL.
     * 
     * @param wkexrel to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setWkexrel(Integer wkexrel);
    
    /**
     * Sets the workstat of this Ss13husb. The workstat field corresponds to the
     * database column test.test.ss13husb.WORKSTAT.
     * 
     * @param workstat to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setWorkstat(Integer workstat);
    
    /**
     * Sets the faccessp of this Ss13husb. The faccessp field corresponds to the
     * database column test.test.ss13husb.FACCESSP.
     * 
     * @param faccessp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFaccessp(Integer faccessp);
    
    /**
     * Sets the facrp of this Ss13husb. The facrp field corresponds to the
     * database column test.test.ss13husb.FACRP.
     * 
     * @param facrp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFacrp(Integer facrp);
    
    /**
     * Sets the fagsp of this Ss13husb. The fagsp field corresponds to the
     * database column test.test.ss13husb.FAGSP.
     * 
     * @param fagsp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFagsp(Integer fagsp);
    
    /**
     * Sets the fbathp of this Ss13husb. The fbathp field corresponds to the
     * database column test.test.ss13husb.FBATHP.
     * 
     * @param fbathp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFbathp(Integer fbathp);
    
    /**
     * Sets the fbdsp of this Ss13husb. The fbdsp field corresponds to the
     * database column test.test.ss13husb.FBDSP.
     * 
     * @param fbdsp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFbdsp(Integer fbdsp);
    
    /**
     * Sets the fbldp of this Ss13husb. The fbldp field corresponds to the
     * database column test.test.ss13husb.FBLDP.
     * 
     * @param fbldp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFbldp(Integer fbldp);
    
    /**
     * Sets the fbroadbndp of this Ss13husb. The fbroadbndp field corresponds to
     * the database column test.test.ss13husb.FBROADBNDP.
     * 
     * @param fbroadbndp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFbroadbndp(Integer fbroadbndp);
    
    /**
     * Sets the fbusp of this Ss13husb. The fbusp field corresponds to the
     * database column test.test.ss13husb.FBUSP.
     * 
     * @param fbusp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFbusp(Integer fbusp);
    
    /**
     * Sets the fcompothxp of this Ss13husb. The fcompothxp field corresponds to
     * the database column test.test.ss13husb.FCOMPOTHXP.
     * 
     * @param fcompothxp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFcompothxp(Integer fcompothxp);
    
    /**
     * Sets the fconp of this Ss13husb. The fconp field corresponds to the
     * database column test.test.ss13husb.FCONP.
     * 
     * @param fconp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFconp(Integer fconp);
    
    /**
     * Sets the fdialupp of this Ss13husb. The fdialupp field corresponds to the
     * database column test.test.ss13husb.FDIALUPP.
     * 
     * @param fdialupp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFdialupp(Integer fdialupp);
    
    /**
     * Sets the fdslp of this Ss13husb. The fdslp field corresponds to the
     * database column test.test.ss13husb.FDSLP.
     * 
     * @param fdslp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFdslp(Integer fdslp);
    
    /**
     * Sets the felep of this Ss13husb. The felep field corresponds to the
     * database column test.test.ss13husb.FELEP.
     * 
     * @param felep to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFelep(Integer felep);
    
    /**
     * Sets the ffiberopp of this Ss13husb. The ffiberopp field corresponds to
     * the database column test.test.ss13husb.FFIBEROPP.
     * 
     * @param ffiberopp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFfiberopp(Integer ffiberopp);
    
    /**
     * Sets the ffsp of this Ss13husb. The ffsp field corresponds to the database
     * column test.test.ss13husb.FFSP.
     * 
     * @param ffsp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFfsp(Integer ffsp);
    
    /**
     * Sets the ffulp of this Ss13husb. The ffulp field corresponds to the
     * database column test.test.ss13husb.FFULP.
     * 
     * @param ffulp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFfulp(Integer ffulp);
    
    /**
     * Sets the fgasp of this Ss13husb. The fgasp field corresponds to the
     * database column test.test.ss13husb.FGASP.
     * 
     * @param fgasp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFgasp(Integer fgasp);
    
    /**
     * Sets the fhandheldp of this Ss13husb. The fhandheldp field corresponds to
     * the database column test.test.ss13husb.FHANDHELDP.
     * 
     * @param fhandheldp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFhandheldp(Integer fhandheldp);
    
    /**
     * Sets the fhflp of this Ss13husb. The fhflp field corresponds to the
     * database column test.test.ss13husb.FHFLP.
     * 
     * @param fhflp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFhflp(Integer fhflp);
    
    /**
     * Sets the finsp of this Ss13husb. The finsp field corresponds to the
     * database column test.test.ss13husb.FINSP.
     * 
     * @param finsp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFinsp(Integer finsp);
    
    /**
     * Sets the fkitp of this Ss13husb. The fkitp field corresponds to the
     * database column test.test.ss13husb.FKITP.
     * 
     * @param fkitp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFkitp(Integer fkitp);
    
    /**
     * Sets the flaptopp of this Ss13husb. The flaptopp field corresponds to the
     * database column test.test.ss13husb.FLAPTOPP.
     * 
     * @param flaptopp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFlaptopp(Integer flaptopp);
    
    /**
     * Sets the fmhp of this Ss13husb. The fmhp field corresponds to the database
     * column test.test.ss13husb.FMHP.
     * 
     * @param fmhp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFmhp(Integer fmhp);
    
    /**
     * Sets the fmodemp of this Ss13husb. The fmodemp field corresponds to the
     * database column test.test.ss13husb.FMODEMP.
     * 
     * @param fmodemp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFmodemp(Integer fmodemp);
    
    /**
     * Sets the fmrgip of this Ss13husb. The fmrgip field corresponds to the
     * database column test.test.ss13husb.FMRGIP.
     * 
     * @param fmrgip to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFmrgip(Integer fmrgip);
    
    /**
     * Sets the fmrgp of this Ss13husb. The fmrgp field corresponds to the
     * database column test.test.ss13husb.FMRGP.
     * 
     * @param fmrgp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFmrgp(Integer fmrgp);
    
    /**
     * Sets the fmrgtp of this Ss13husb. The fmrgtp field corresponds to the
     * database column test.test.ss13husb.FMRGTP.
     * 
     * @param fmrgtp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFmrgtp(Integer fmrgtp);
    
    /**
     * Sets the fmrgxp of this Ss13husb. The fmrgxp field corresponds to the
     * database column test.test.ss13husb.FMRGXP.
     * 
     * @param fmrgxp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFmrgxp(Integer fmrgxp);
    
    /**
     * Sets the fmvp of this Ss13husb. The fmvp field corresponds to the database
     * column test.test.ss13husb.FMVP.
     * 
     * @param fmvp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFmvp(Integer fmvp);
    
    /**
     * Sets the fothsvcexp of this Ss13husb. The fothsvcexp field corresponds to
     * the database column test.test.ss13husb.FOTHSVCEXP.
     * 
     * @param fothsvcexp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFothsvcexp(Integer fothsvcexp);
    
    /**
     * Sets the fplmp of this Ss13husb. The fplmp field corresponds to the
     * database column test.test.ss13husb.FPLMP.
     * 
     * @param fplmp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFplmp(Integer fplmp);
    
    /**
     * Sets the frefrp of this Ss13husb. The frefrp field corresponds to the
     * database column test.test.ss13husb.FREFRP.
     * 
     * @param frefrp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFrefrp(Integer frefrp);
    
    /**
     * Sets the frmsp of this Ss13husb. The frmsp field corresponds to the
     * database column test.test.ss13husb.FRMSP.
     * 
     * @param frmsp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFrmsp(Integer frmsp);
    
    /**
     * Sets the frntmp of this Ss13husb. The frntmp field corresponds to the
     * database column test.test.ss13husb.FRNTMP.
     * 
     * @param frntmp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFrntmp(Integer frntmp);
    
    /**
     * Sets the frntp of this Ss13husb. The frntp field corresponds to the
     * database column test.test.ss13husb.FRNTP.
     * 
     * @param frntp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFrntp(Integer frntp);
    
    /**
     * Sets the frwatp of this Ss13husb. The frwatp field corresponds to the
     * database column test.test.ss13husb.FRWATP.
     * 
     * @param frwatp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFrwatp(Integer frwatp);
    
    /**
     * Sets the frwatprp of this Ss13husb. The frwatprp field corresponds to the
     * database column test.test.ss13husb.FRWATPRP.
     * 
     * @param frwatprp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFrwatprp(Integer frwatprp);
    
    /**
     * Sets the fsatellitep of this Ss13husb. The fsatellitep field corresponds
     * to the database column test.test.ss13husb.FSATELLITEP.
     * 
     * @param fsatellitep to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFsatellitep(Integer fsatellitep);
    
    /**
     * Sets the fsinkp of this Ss13husb. The fsinkp field corresponds to the
     * database column test.test.ss13husb.FSINKP.
     * 
     * @param fsinkp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFsinkp(Integer fsinkp);
    
    /**
     * Sets the fsmp of this Ss13husb. The fsmp field corresponds to the database
     * column test.test.ss13husb.FSMP.
     * 
     * @param fsmp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFsmp(Integer fsmp);
    
    /**
     * Sets the fsmxhp of this Ss13husb. The fsmxhp field corresponds to the
     * database column test.test.ss13husb.FSMXHP.
     * 
     * @param fsmxhp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFsmxhp(Integer fsmxhp);
    
    /**
     * Sets the fsmxsp of this Ss13husb. The fsmxsp field corresponds to the
     * database column test.test.ss13husb.FSMXSP.
     * 
     * @param fsmxsp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFsmxsp(Integer fsmxsp);
    
    /**
     * Sets the fstovp of this Ss13husb. The fstovp field corresponds to the
     * database column test.test.ss13husb.FSTOVP.
     * 
     * @param fstovp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFstovp(Integer fstovp);
    
    /**
     * Sets the ftaxp of this Ss13husb. The ftaxp field corresponds to the
     * database column test.test.ss13husb.FTAXP.
     * 
     * @param ftaxp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFtaxp(Integer ftaxp);
    
    /**
     * Sets the ftelp of this Ss13husb. The ftelp field corresponds to the
     * database column test.test.ss13husb.FTELP.
     * 
     * @param ftelp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFtelp(Integer ftelp);
    
    /**
     * Sets the ftenp of this Ss13husb. The ftenp field corresponds to the
     * database column test.test.ss13husb.FTENP.
     * 
     * @param ftenp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFtenp(Integer ftenp);
    
    /**
     * Sets the ftoilp of this Ss13husb. The ftoilp field corresponds to the
     * database column test.test.ss13husb.FTOILP.
     * 
     * @param ftoilp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFtoilp(Integer ftoilp);
    
    /**
     * Sets the fvacsp of this Ss13husb. The fvacsp field corresponds to the
     * database column test.test.ss13husb.FVACSP.
     * 
     * @param fvacsp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFvacsp(Integer fvacsp);
    
    /**
     * Sets the fvalp of this Ss13husb. The fvalp field corresponds to the
     * database column test.test.ss13husb.FVALP.
     * 
     * @param fvalp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFvalp(Integer fvalp);
    
    /**
     * Sets the fvehp of this Ss13husb. The fvehp field corresponds to the
     * database column test.test.ss13husb.FVEHP.
     * 
     * @param fvehp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFvehp(Integer fvehp);
    
    /**
     * Sets the fwatp of this Ss13husb. The fwatp field corresponds to the
     * database column test.test.ss13husb.FWATP.
     * 
     * @param fwatp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFwatp(Integer fwatp);
    
    /**
     * Sets the fyblp of this Ss13husb. The fyblp field corresponds to the
     * database column test.test.ss13husb.FYBLP.
     * 
     * @param fyblp to set of this Ss13husb
     * @return this Ss13husb instance
     */
    Ss13husb setFyblp(Integer fyblp);
    
    enum Identifier implements FieldIdentifier<Ss13husb> {
        
        RT ("RT"),
        SERIALNO ("SERIALNO"),
        DIVISION ("DIVISION"),
        PUMA ("PUMA"),
        REGION ("REGION"),
        ST ("ST"),
        ADJHSG ("ADJHSG"),
        ADJINC ("ADJINC"),
        WGTP ("WGTP"),
        NP ("NP"),
        TYPE ("TYPE"),
        ACCESS ("ACCESS"),
        ACR ("ACR"),
        AGS ("AGS"),
        BATH ("BATH"),
        BDSP ("BDSP"),
        BLD ("BLD"),
        BROADBND ("BROADBND"),
        BUS ("BUS"),
        COMPOTHX ("COMPOTHX"),
        CONP ("CONP"),
        DIALUP ("DIALUP"),
        DSL ("DSL"),
        ELEP ("ELEP"),
        FIBEROP ("FIBEROP"),
        FS ("FS"),
        FULP ("FULP"),
        GASP ("GASP"),
        HANDHELD ("HANDHELD"),
        HFL ("HFL"),
        INSP ("INSP"),
        LAPTOP ("LAPTOP"),
        MHP ("MHP"),
        MODEM ("MODEM"),
        MRGI ("MRGI"),
        MRGP ("MRGP"),
        MRGT ("MRGT"),
        MRGX ("MRGX"),
        OTHSVCEX ("OTHSVCEX"),
        REFR ("REFR"),
        RMSP ("RMSP"),
        RNTM ("RNTM"),
        RNTP ("RNTP"),
        RWAT ("RWAT"),
        RWATPR ("RWATPR"),
        SATELLITE ("SATELLITE"),
        SINK ("SINK"),
        SMP ("SMP"),
        STOV ("STOV"),
        TEL ("TEL"),
        TEN ("TEN"),
        TOIL ("TOIL"),
        VACS ("VACS"),
        VALP ("VALP"),
        VEH ("VEH"),
        WATP ("WATP"),
        YBL ("YBL"),
        FES ("FES"),
        FFINCP ("FFINCP"),
        FGRNTP ("FGRNTP"),
        FHINCP ("FHINCP"),
        FINCP ("FINCP"),
        FPARC ("FPARC"),
        FSMOCP ("FSMOCP"),
        GRNTP ("GRNTP"),
        GRPIP ("GRPIP"),
        HHL ("HHL"),
        HHT ("HHT"),
        HINCP ("HINCP"),
        HUGCL ("HUGCL"),
        HUPAC ("HUPAC"),
        HUPAOC ("HUPAOC"),
        HUPARC ("HUPARC"),
        KIT ("KIT"),
        LNGI ("LNGI"),
        MULTG ("MULTG"),
        MV ("MV"),
        NOC ("NOC"),
        NPF ("NPF"),
        NPP ("NPP"),
        NR ("NR"),
        NRC ("NRC"),
        OCPIP ("OCPIP"),
        PARTNER ("PARTNER"),
        PLM ("PLM"),
        PSF ("PSF"),
        R18 ("R18"),
        R60 ("R60"),
        R65 ("R65"),
        RESMODE ("RESMODE"),
        SMOCP ("SMOCP"),
        SMX ("SMX"),
        SRNT ("SRNT"),
        SSMC ("SSMC"),
        SVAL ("SVAL"),
        TAXP ("TAXP"),
        WIF ("WIF"),
        WKEXREL ("WKEXREL"),
        WORKSTAT ("WORKSTAT"),
        FACCESSP ("FACCESSP"),
        FACRP ("FACRP"),
        FAGSP ("FAGSP"),
        FBATHP ("FBATHP"),
        FBDSP ("FBDSP"),
        FBLDP ("FBLDP"),
        FBROADBNDP ("FBROADBNDP"),
        FBUSP ("FBUSP"),
        FCOMPOTHXP ("FCOMPOTHXP"),
        FCONP ("FCONP"),
        FDIALUPP ("FDIALUPP"),
        FDSLP ("FDSLP"),
        FELEP ("FELEP"),
        FFIBEROPP ("FFIBEROPP"),
        FFSP ("FFSP"),
        FFULP ("FFULP"),
        FGASP ("FGASP"),
        FHANDHELDP ("FHANDHELDP"),
        FHFLP ("FHFLP"),
        FINSP ("FINSP"),
        FKITP ("FKITP"),
        FLAPTOPP ("FLAPTOPP"),
        FMHP ("FMHP"),
        FMODEMP ("FMODEMP"),
        FMRGIP ("FMRGIP"),
        FMRGP ("FMRGP"),
        FMRGTP ("FMRGTP"),
        FMRGXP ("FMRGXP"),
        FMVP ("FMVP"),
        FOTHSVCEXP ("FOTHSVCEXP"),
        FPLMP ("FPLMP"),
        FREFRP ("FREFRP"),
        FRMSP ("FRMSP"),
        FRNTMP ("FRNTMP"),
        FRNTP ("FRNTP"),
        FRWATP ("FRWATP"),
        FRWATPRP ("FRWATPRP"),
        FSATELLITEP ("FSATELLITEP"),
        FSINKP ("FSINKP"),
        FSMP ("FSMP"),
        FSMXHP ("FSMXHP"),
        FSMXSP ("FSMXSP"),
        FSTOVP ("FSTOVP"),
        FTAXP ("FTAXP"),
        FTELP ("FTELP"),
        FTENP ("FTENP"),
        FTOILP ("FTOILP"),
        FVACSP ("FVACSP"),
        FVALP ("FVALP"),
        FVEHP ("FVEHP"),
        FWATP ("FWATP"),
        FYBLP ("FYBLP");
        
        private final String columnName;
        
        Identifier(String columnName) {
            this.columnName = columnName;
        }
        
        @Override
        public String dbmsName() {
            return "test";
        }
        
        @Override
        public String schemaName() {
            return "test";
        }
        
        @Override
        public String tableName() {
            return "ss13husb";
        }
        
        @Override
        public String columnName() {
            return this.columnName;
        }
    }
}